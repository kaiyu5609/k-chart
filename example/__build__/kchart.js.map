{"version":3,"file":"kchart.js","sources":["webpack:///../dist/kchart.css?c012","webpack:///../node_modules/events/events.js","webpack:///../src/components/Chart.js","webpack:///../src/core/util/index.js","webpack:///../src/components/tooltips/index.js","webpack:///../src/components/mouse-line/index.js","webpack:///../src/components/kline/index.js","webpack:///../src/components/volume/index.js","webpack:///../src/dataset/DataSet.js","webpack:///../src/dataset/KlineVolumeDataSet.js","webpack:///../src/dataset/MouseLineDataSet.js","webpack:///../src/dataset/KlineDataSet.js","webpack:///../src/data/index.js","webpack:///../src/dataset/RemoteDataSet.js","webpack:///../src/dataset/VolumeDataSet.js","webpack:///../src/index.js","webpack:///../node_modules/ansi-html/index.js","webpack:///../node_modules/ansi-regex/index.js","webpack:///../dist/kchart.css","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/html-entities/index.js","webpack:///../node_modules/html-entities/lib/html4-entities.js","webpack:///../node_modules/html-entities/lib/html5-entities.js","webpack:///../node_modules/html-entities/lib/xml-entities.js","webpack:///../node_modules/querystring-es3/decode.js","webpack:///../node_modules/querystring-es3/encode.js","webpack:///../node_modules/querystring-es3/index.js","webpack:///../node_modules/strip-ansi/index.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///../node_modules/webpack-hot-middleware/client-overlay.js","webpack:///../node_modules/webpack-hot-middleware/client.js","webpack:///../node_modules/webpack-hot-middleware/process-update.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///./kline/base/index.js"],"sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./kchart.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./kchart.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./kchart.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import EventEmitter from 'events'\nimport Konva from 'konva'\n\nclass Chart extends EventEmitter {\n\n    constructor(options = {}) {\n        super()\n\n        const defaults = {\n            ctype: '',\n            \n            width: 640,\n            height: 220,\n\n            left: 0,\n\n            stateHeight: 20,\n            figureHeight: 220,\n            figureWidth: 640,\n\n            autoFetchData: true,\n\n            sliceType: true,\n            mouseLineType: true,\n\n            kwidth: 6,\n            kpadding: 1.5,\n            period: 'day',\n\n            xAxis: {\n                display: true\n            },\n            tooltips: true\n        }\n\n        options = this.$options = Object.assign({}, defaults, options)\n\n        this.allDataSet = options.allDataSet || {}\n        this.dataSet = options.dataSet || {}\n\n        this.$colors = {\n            // 'ma5': '#f80',\n            // 'ma10': '#08c',\n            // 'ma20': '#d3a',\n            // 'ma30': '#f45',\n            // 'ma60': '#608',\n\n            'ma5': 'rgba(255, 136, 0, 0.8)',\n            'ma10': 'rgba(0, 136, 204, 0.8)',\n            'ma20': 'rgba(221, 51, 170, 0.8)',\n            'ma30': 'rgba(255, 68, 85, 0.8)',\n            'ma60': 'rgba(102, 0, 136, 0.8)',\n\n            'ma5_o': 'rgba(255, 136, 0, 0.2)',\n            'ma10_o': 'rgba(0, 136, 204, 0.2)',\n            'ma20_o': 'rgba(221, 51, 170, 0.2)',\n            'ma30_o': 'rgba(255, 68, 85, 0.2)',\n            'ma60_o': 'rgba(102, 0, 136, 0.2)',\n\n            // 'red': '#e30',\n            // 'green': '#0a0',\n            'red': '#e24e3c',\n            'green': '#51a169',\n            'blue': '#06c',\n\n            'close': '#06c',\n            // 'text': '#333'\n            'text': '#43474c'\n        }\n\n        this.mouseIndex = 0\n        this.currentIndex = 0\n        this.scaleing = false\n\n        this.$elements = {}\n\n        this.layers = {}\n\n        this.groups = {}\n\n        this._initOptions()\n    }\n\n    setOptions(key, val) {\n        var options = this.$options\n\n        if (typeof key === 'object') {\n            val = key\n            for (var name in val) {\n                options[name] = val[name]\n            }\n        } else {\n            options[key] = val\n        }\n\n        return this\n    }\n\n    _initOptions() {\n        var options = this.$options\n        var { width, left, figureHeight, stateHeight, figureWidth, kwidth, kpadding } = options\n\n        left = Math.max(0, left)\n\n        var figureWidth = width - left\n\n        var kspan = kwidth + 2 * kpadding\n        var paddingY = 0.03 * (figureHeight - stateHeight)\n        var count = Math.floor(figureWidth / kspan)\n        var begin = Date.now() + 864e5\n\n        this.setOptions({\n            left,\n            figureWidth,\n            kspan,\n            paddingY,\n            count,\n            startIndex: -count,\n            begin\n        })\n    }\n\n    _initStage() {}\n\n    _initElements() {}\n\n    _bindEvents() {\n        var self = this\n        var options = this.$options\n        var { kwidth, kpadding, left } = options\n\n        this.allDataSet.on('data-changed', (res) => {\n            var { uid, mode, data } = res\n\n            if (options.stopIndex === undefined) {\n                options.stopIndex = data.length\n            } else {\n                options.stopIndex += data.length\n            }\n\n            if (mode === 'moveChart') {\n\n            } else if (mode === 'scaleChart') {\n                options.startIndex = -options.count\n            }\n            \n            self.update()\n        })\n\n        function startHandler(e) {\n            var touches = e.evt.touches, xData = self.dataSet.getData('xData')\n\n            switch (e.type) {\n                case 'touchstart':\n                    self._isDrag = true\n                    \n                    self._mouseX = self.stage.getPointerPosition().x - left\n                    self._mouseY = self.stage.getPointerPosition().y\n                    \n                    if (touches && touches.length == 2) {\n                        if (!self._isDragging) {\n                            // 当单指moveChart变成双指moveChart时，仍然算是moveChart，而不是scaleChart\n                            self._isDrag = false\n                        }\n                        self._isPinch = true\n                        self._isLongTouch = false\n                        self._touches = touches\n                    } else {\n                        self._longTouchtimer = setTimeout(() => {\n                            self._isLongTouch = true\n                            self._isDrag = false\n\n                            self.mouseIndex = xData.findIndex(v => {\n                                // return v >= x\n                                return (v + kwidth) >= self._mouseX\n                            })\n    \n                            self.addMouseLine({ \n                                emitter: 'self',\n                                type: true,\n                                mouseIndex: self.mouseIndex,\n                                mouseX: self._mouseX,\n                                mouseY: self._mouseY,\n                                isDrag: false,\n                                isLongTouch: true\n                            })\n    \n                            self.emit('add-mouse-line', {\n                                emitter: 'other',\n                                type: true,\n                                mouseIndex: self.mouseIndex,\n                                mouseX: self._mouseX,\n                                mouseY: self._mouseY,\n                                isDrag: false,\n                                isLongTouch: true\n                            })\n                        }, 300)\n                    }\n                    break\n                case 'mousedown':\n                    self._mouseX = e.evt.offsetX - left\n                    self._isDrag = true\n                    break\n            }\n        }\n\n        function endHandler(e) {\n            var touches = e.evt.touches\n\n            switch (e.type) {\n                case 'touchend':\n                    if (touches && touches.length == 0) {\n                        self._isDrag = false\n                        self._isDragging = false\n                    }\n                    if (self._isLongTouch) {\n                        self._isLongTouch = false\n                        setTimeout(() => {\n                            self.removeMouseLine()\n                            self.emit('remove-mouse-line')\n                        }, 300)\n                    }\n                    break\n                case 'mouseup':\n                    self._isDrag = false\n                    self._isDragging = false\n                    break\n            }\n            \n            // 当touchend之后，touchmove还会执行，所以这里延迟将_isPinch设置为false\n            setTimeout(() => {\n                self._isPinch = false\n            }, 100)\n\n            self._longTouchtimer && clearTimeout(self._longTouchtimer)\n        }\n\n        function leaveHandler(e) {\n            self._isDrag = false\n            self.scaleing = false\n\n            self.removeMouseLine()\n            self.emit('remove-mouse-line')\n        }\n\n        function wheelHandler(e) {\n            var x\n\n            if (self.scaleing) {\n                e = e.originalEvent\n                e.preventDefault()\n\n                x = e.offsetX - left\n\n                if (x < 0) {\n                    return\n                }\n                \n                if (e.deltaX) {\n                    var index = Math.round(e.deltaX / (kwidth + 2 * kpadding))\n                    self.moveChart(index)\n                }\n\n                // if (Math.abs(e.deltaY) < 5 || Math.abs(e.deltaY) > 20) {\n                    self.scaleChart(-Math.sign(e.deltaY))\n                // }\n            }\n        }\n\n        this.stage.on('mousedown', startHandler)\n        this.stage.on('touchstart', startHandler)\n\n        this.stage.on('mouseup', endHandler)\n        this.stage.on('touchend', endHandler)\n\n        this.stage.on('mouseleave', leaveHandler)\n\n        this.$elements.$el.on('mousewheel', wheelHandler)\n\n    }\n\n    fetchData(params) {\n        this.stop = true\n        return this.allDataSet.fetchKlineData(params).then(() => {\n            this.stop = false\n        })\n    }\n\n    addGrid() {\n        const { left, figureWidth, figureHeight, stateHeight } = this.$options\n\n        var data = this.dataSet.getGridData({\n            left,\n            figureWidth,\n            figureHeight,\n            stateHeight,\n            stroke: 'rgba(225, 225, 225, 1)',\n            strokeWidth: 1,\n            font: '22px Helvetica',\n            $colors: this.$colors\n        })\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.main.add(node)\n        })\n\n        data.rects.forEach(opts => {\n            var node = new Konva.Rect(opts)\n            this.groups.main.add(node)\n        })\n\n        return this\n    }\n\n    addYTicks() {\n        const { left, figureHeight, stateHeight } = this.$options\n\n        var data = this.dataSet.getYTickData({\n            left,\n            figureHeight,\n            stateHeight,\n            $colors: this.$colors\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.tickLabel.add(node)\n        })\n\n        return this\n    }\n\n    drawTickLabel() {\n        var { \n            width, \n            height \n        } = this.$options\n\n        if (!this.groups.tickLabel) {\n            this.groups.tickLabel = new Konva.Group({\n                x: 0, y: 0, width, height\n            })\n        } else {\n            this.groups.tickLabel.destroy()\n        }\n\n        this.addYTicks()\n\n        this.layers.tickLabel.add(this.groups.tickLabel).draw()\n\n        return this\n    }\n\n    addMouseLine(data) {\n        this.mouseLine.addMouseLine(data)\n\n        return this\n    }\n\n    removeMouseLine() {\n        this._mouseX = -999\n        this._mouseY = -999\n\n        this.mouseLine.addMouseLine({ type: true, mouseX: this._mouseX, mouseY: this._mouseY })\n\n        return this\n    }\n\n    /**\n     * \n     * @param {*} index \n     * @param {*} data.flag 为true，外部触发的moveChart\n     */\n    moveChart(index = 1, data = {}) {\n        var options = this.$options\n        var { startIndex, stopIndex, count } = options\n        var { emitter } = data\n\n        var allKlineData = this.allDataSet.getData()\n        var klineData = this.dataSet.getData()\n\n        if (klineData.length !== allKlineData.length) {\n            /**\n             * 临界点：\n             * 1. 向右钻取数据，stopIndex <= allKlineData.length\n             * 2. 向左钻取数据，startIndex >= -allKlineData.length\n             * 3. this.stop\n             */\n            if ((index > 0 && stopIndex >= allKlineData.length) || (index < 0 && startIndex + allKlineData.length <= 0) || this.stop) {\n                return\n            }\n\n            options.startIndex = Math.min(-count, startIndex + index)\n            options.stopIndex = Math.min(allKlineData.length, stopIndex + index)\n\n            if (options.startIndex <= -allKlineData.length) {\n                options.startIndex = -allKlineData.length\n            }\n            if (options.stopIndex <= count) {\n                options.stopIndex = count\n            }\n\n            if (\n                options.startIndex + allKlineData.length < count / 2 && \n                index < 0 && \n                !this.allDataSet.getState('isAllData') && \n                (!emitter || emitter === this)\n            ) {\n                this.fetchData({\n                    uid: this.uid,\n                    count: -2 * count,\n                    mode: 'moveChart'\n                })\n            } else {\n                this.update()\n            }\n\n            if ((!emitter || emitter === this)) {\n                this.emit('move-chart', {\n                    index\n                })\n            }\n        }\n    }\n\n    moveChartWithMouseLine(index = 1) {\n        this.moveChart(index)\n\n        // 左移（<）、右移（>）时，触发 `mouseline`\n        this.addMouseLine({ \n            emitter: this,\n            type: false,\n            mouseIndex: this.mouseIndex,\n            mouseX: this._mouseX,\n            mouseY: this._mouseY,\n            isDrag: this._isDrag\n        })\n\n        this.emit('add-mouse-line', {\n            emitter: 'other',\n            type: false,\n            mouseIndex: this.mouseIndex,\n            mouseX: this._mouseX,\n            mouseY: this._mouseY,\n            isDrag: this._isDrag\n        })\n\n        return this\n    }\n\n    /**\n     * \n     * @param {*} data.flag 为true，外部触发的resetScaleChart\n     */\n    resetScaleChart(data = {}) {\n        var { kwidth } = this.$options\n        var { emitter } = data\n\n        if (kwidth !== 6) {\n            this.$options.kwidth = 6\n            this.scaleChart(0, { reset: true, emitter })\n\n            this.emit('reset-scale-chart')\n        }\n    }\n\n    /**\n     * \n     * @param {*} scale \n     * @param {*} data.flag 为true，外部触发的scaleChart\n     */\n    scaleChart(scale = 3, data = {}) {\n        var options = this.$options\n\n        var { kwidth, kpadding, figureWidth } = options\n\n        var { reset, emitter } = data\n\n        var allKlineData = this.allDataSet.getData()\n\n        \n\n        options.kwidth = scale > 0 \n            ? Math.min(17, kwidth + scale)\n            : Math.max(0, kwidth + scale)\n\n        if (options.kwidth !== kwidth || reset == true) {\n            this.$elements.$el.attr('kwidth', options.kwidth)\n\n            options.kspan = options.kwidth + 2 * kpadding\n            options.count = Math.floor(figureWidth / options.kspan)\n\n            if (options.count > allKlineData.length) {\n                this.fetchData({\n                    uid: this.uid,\n                    count: -options.count,\n                    mode: 'scaleChart'\n                })\n            } else {\n                options.startIndex = -options.count - (allKlineData.length - options.stopIndex)\n\n                if (options.startIndex <= -allKlineData.length) {\n                    options.startIndex = -allKlineData.length\n                }\n                if (options.stopIndex <= options.count) {\n                    options.stopIndex = options.count\n                }\n\n                this.update()\n            }\n\n            if (!emitter || emitter === this) {\n                this.emit('scale-chart', {\n                    scale,\n                    reset\n                })\n            }\n        }\n\n        // 缩放图形时，隐藏十字辅助线\n        this.removeMouseLine()\n        this.emit('remove-mouse-line')\n    }\n\n    render() {\n        this.update()\n    }\n\n    destroy() {\n        // TODO\n    }\n\n    connect(components) {\n        if (!Array.isArray(components)) {\n            components = [components]\n        }\n\n        components.forEach((component) => {\n            this.on('move-chart', ({ index }) => {\n                component.moveChart(index, { emitter: this })\n            })\n            .on('scale-chart', ({ scale }) => {\n                component.scaleChart(scale, { emitter: this })\n            })\n            .on('reset-scale-chart', () => {\n                component.resetScaleChart({ emitter: this })\n            })\n            .on('add-mouse-line', (data) => {\n                component.addMouseLine(data)\n            })\n            .on('remove-mouse-line', () => {\n                component.removeMouseLine()\n            })\n        })\n    }\n\n}\n\n\nexport default Chart","export var measureText = (function() {\n    var canvas = document.createElement('canvas')\n    var ctx = canvas.getContext('2d')\n\n    return (text, fontSize = 11) => {\n        ctx.font = '11px \"Helvetica\"'\n        return ctx.measureText(text)\n    }\n})()\n\nexport function ma(data, ma) {\n    if (ma === 0) {\n        ma = 5\n    }\n\n    var res = []\n\n    data.forEach((item, index) => {\n        if (index < ma) {\n            res[index] = undefined\n        } else {\n            for (var i = 0, j = 0; j < ma; j++) {\n                i += data[index - j]\n            }\n            res[index] = i / ma\n        }\n    })\n\n    return res\n}\n\nexport function getTimeFormatStr(v) {\n    var timeFormatStr = \"YYYY-MM\"\n    \n    if ([\"day\", \"week\", \"month\", \"quarter\", \"year\"].indexOf(v) > -1) {\n        timeFormatStr = \"YYYY-MM\"\n    } else if ([\"15m\", \"30m\", \"60m\", \"120m\"].indexOf(v) > -1) {\n        timeFormatStr = \"MM-DD\"\n    } else if ([\"1m\", \"5m\"].indexOf(v) > -1) {\n        timeFormatStr = \"HH:mm\"\n    }\n\n    return timeFormatStr\n}\n\nexport function floor(v) {\n    return Math.floor(v) + .5\n}\n\nexport function parseVolume(val) {\n    if (null === val) {\n        return '--'\n    }\n\n    var num = parseInt(val, 10), _val = val\n\n    if (num < 1e5) {\n        return num\n    }\n\n    for (var i = 0; _val > 1e4 && i < 3; ) {\n        _val /= 1e4\n        i += 1\n    }\n\n    var n = (num = Math.round(100 * _val) / 100).toString(), r = n.indexOf('.')\n\n    for (r < 0 && (r = n.length, n += '.'); n.length <= r + 2; ) {\n        n += '0'\n    }\n\n    return num + ['', '万', '亿', '万亿'][i]\n}\n\nexport function parseAmount(val, toFixed = 2) {\n    return null == val || Number.isNaN(val) \n        ? '-' \n        : val / 1e4 > 1 && val / 1e4 < 1e4 \n            ? ''.concat((val / 1e4).toFixed(2), '万') \n            : val / 1e4 >= 1e4 \n                ? ''.concat((val / 1e8).toFixed(2), '亿') \n                : val.toFixed(toFixed)\n}\n\nexport function isDifPeriod(timestamp, timestamp0, period) {\n    var date = new Date(timestamp), date0 = new Date(timestamp0)\n\n    var periods = ['day', 'week', 'month', 'quarter', 'year']\n    var minutes1 = ['15m', '30m', '60m', '120m']\n    var minutes2 = ['1m', '5m']\n\n    if (\n        periods.indexOf(period) > -1 && date.getMonth() !== date0.getMonth() || \n        minutes1.indexOf(period) > -1 && date.getDay() !== date0.getDay() || \n        minutes2.indexOf(period) > -1 && date.getHours() !== date0.getHours() && 0 === date.getMinutes()\n    ) {\n        return true\n    }\n\n    return false\n}\n\nexport function getDis(point1, point2) {\n    var x = point2.pageX - point1.pageX\n    var y = point2.pageY - point1.pageY\n    return Math.sqrt(x * x + y * y)\n}\n\nexport function getPinchDis(touches1, touches2) {\n    var dis1 = getDis(touches1[0], touches1[1])\n    var dis2 = getDis(touches2[0], touches2[1])\n    return dis2 - dis1\n}\n","import $ from 'jquery'\nimport { parseVolume, parseAmount } from '../../core/util/index'\n\nclass ToolTips {\n    constructor(context, options = {}) {\n        const defaults = {}\n        options = this.$options = Object.assign({}, defaults, options)\n        this.context = context\n        this.$elements = {}\n\n        this._init()\n    }\n    _init() {\n        var options = this.$options\n        var $tooltips = this.$elements.$tooltips = this.$elements.$tooltips || $('<div/>')\n\n        $tooltips.attr('id', 'k-tooltips')\n        $tooltips.css({\n            position: 'absolute',\n            top: options.stateHeight\n        })\n\n        if (this.context.$elements.$el) {\n            this.context.$elements.$el.append($tooltips)\n        }\n    }\n\n    getColor(val, lastClose, opacity = 1) {\n        var $colors = this.context.$colors\n\n        return (val - lastClose) * opacity < 0 \n                ? $colors.green \n                : (val - lastClose) * opacity > 0 \n                    ? $colors.red \n                    : $colors.text\n    }\n\n    parseVolume(val = 0, quoteLotSize = 100, quoteType = 11, flag = true) {\n        if (null === val) {\n            return '--'\n        }\n\n        var num = val\n\n        num = [11, 12, 13, 14, 15, 17, 60, 61, 81].indexOf(+quoteType) > -1 \n            ? ''.concat(parseVolume(val / quoteLotSize), '手') \n            : [30, 31, 32, 33, 34, 0, 3, 4, 5, 6, 7, 26, 27, 28, 8, 35].indexOf(+quoteType) > -1 \n                ? ''.concat(parseVolume(val), '股') \n                : parseVolume(val)\n        \n        return flag ? num : parseFloat(num)\n    }\n\n    getTooltips(item) {\n        if (!item.display) {\n            return ''\n        }\n        return `<ul class=\"overlay\">\n            <li>\n                <span>时间</span>\n                <span>${item.time}</span>\n            </li>\n            <li>\n                <span>开盘价</span>\n                <span style=\"color: ${this.getColor(item.open, item.lastClose)};\">${item.open.toFixed(2)}</span>\n            </li>\n            <li>\n                <span>最高价</span>\n                <span style=\"color: ${this.getColor(item.high, item.lastClose)};\">${item.high.toFixed(2)}</span>\n            </li>\n            <li>\n                <span>最低价</span>\n                <span style=\"color: ${this.getColor(item.low, item.lastClose)};\">${item.low.toFixed(2)}</span>\n            \n            </li>\n            <li>\n                <span>收盘价</span>\n                <span style=\"color: ${this.getColor(item.close, item.lastClose)};\">${item.close.toFixed(2)}</span>\n            </li>\n            <li>\n                <span>涨跌额</span>\n                <span style=\"color: ${this.getColor(item.close, item.lastClose)};\">${item.chg.toFixed(2)}</span>\n            </li>\n            <li>\n                <span>涨跌幅</span>\n                <span style=\"color: ${this.getColor(item.close, item.lastClose)};\">${item.percent.toFixed(2)}%</span>\n            </li>\n            <li>\n                <span>成交量</span>\n                <span>${this.parseVolume(item.volume)}</span>\n            </li>\n            <li>\n                <span>成交额</span>\n                <span>${parseAmount(item.amount)}</span>\n            </li>\n                <li>\n                <span>换手率</span>\n                <span>${item.turnoverrate.toFixed(2)}%</span>\n            </li>\n        </ul>`\n    }\n\n    setData(data) {\n        if (!data) {\n            this.$elements.$tooltips.html('')\n            return \n        }\n\n        var tooltips = this.getTooltips(data)\n        this.$elements.$tooltips.html(tooltips)\n\n        if (data.left !== null) {\n            this.$elements.$tooltips.css('left', data.left)\n        } else {\n            this.$elements.$tooltips.css('left', '')\n        }\n        if (data.right !== null) {\n            this.$elements.$tooltips.css('right', data.right)\n        } else {\n            this.$elements.$tooltips.css('right', '')\n        }\n    }\n}\n\nexport default ToolTips","import EventEmitter from 'events'\nimport ToolTips from '../tooltips/index'\n\nclass MouseLine extends EventEmitter {\n    constructor(context, options = {}) {\n        super()\n\n        const defaults = {}\n        options = this.$options = Object.assign({}, defaults, options)\n        this.context = context\n        this.dataSet = options.dataSet || {}\n\n        this.groups = {}\n\n        this.tooltips = new ToolTips(context, options)\n    }\n\n    /**\n     * \n     * @param {boolean} type \n     *  type: true，yMouseLine 跟随鼠标自由移动\n     *  type: false，yMouseLine 指示到`currentIndex`对应的收盘价位置\n     */\n    addMouseLine(options) {\n        const context = this.context\n        const { ctype, width, height, left, figureWidth, figureHeight, stateHeight, period, xAxis, tooltips } = this.$options\n        const { type, mouseIndex, isValidPoint, mouseX, mouseY, isDrag, emitter, isLongTouch, isPinch } = options\n\n        var data = {\n            lines: [],\n            rects: [],\n            texts: [],\n            circles: []\n        }\n\n        // TODO\n        if (\n            type === false || \n            mouseIndex >= 0 && !isDrag && !isPinch && isValidPoint ||\n            isLongTouch\n        ) {\n            data = this.dataSet.getMouseLineData({\n                ctype,\n                type,\n                mouseIndex: mouseIndex,\n                mouseY: mouseY,\n                left,\n                figureWidth,\n                figureHeight,\n                stateHeight,\n                period,\n                $colors: context.$colors,\n                xAxis,\n                emitter\n            })\n\n            context.currentIndex = typeof mouseIndex != null\n                ? mouseIndex\n                : context.mouseIndex\n\n            if (tooltips) {\n                this.tooltips.setData(data.item)\n            }\n\n            this.emit('mouseline-move')\n        } else {\n            this.tooltips.setData()\n        }\n        \n        if (!this.groups.main) {\n            this.groups.main = new Konva.Group({\n                x: 0,\n                y: 0,\n                width,\n                height\n            })\n        } else {\n            this.groups.main.destroy()\n        }\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.main.add(node)\n        })\n\n        if (emitter !== 'other') {\n            data.circles.forEach(opts => {\n                var node = new Konva.Circle(opts)\n                this.groups.main.add(node)\n            })\n        }\n\n        data.rects.forEach(opts => {\n            var node = new Konva.Rect(opts)\n            this.groups.main.add(node)\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.main.add(node)\n        })\n\n        context.layers.mouseLine.add(this.groups.main).draw()\n\n        return this\n    }\n\n}\n\nexport default MouseLine","import Chart from '../Chart'\nimport Konva from 'konva'\nimport $ from 'jquery'\nimport MouseLine from '../mouse-line/index'\nimport { getPinchDis } from '../../core/util'\n\nvar uid = 0\n\nclass Kline extends Chart {\n\n    constructor(options = {}) {\n        super(options)\n\n        const defaults = {\n            ctype: 'kline',\n            \n            left: 0,\n\n            width: 640,\n            height: 220,\n\n            figureWidth: 640,\n            stateHeight: 20,\n            figureHeight: 220,\n\n            maList: ['ma5', 'ma10', 'ma20', 'ma30', 'ma60'],\n            maLineType: 'ma',\n        }\n\n        options = this.$options = Object.assign(this.$options, defaults, options)\n\n        this.uid = 'kline' + (uid++)\n\n        this.activeMa = {\n            'ma5': true,\n            'ma10': true,\n            'ma20': true,\n            'ma30': true,\n            'ma60': true\n        }\n\n        this._initStage()\n\n        this._initElements()\n\n        this.mouseLine = new MouseLine(this, options)\n\n        this._bindEvents()\n\n        if (options.autoFetchData) {\n            this.fetchData({\n                uid: this.uid,\n                count: -2 * options.count,\n                mode: 'init'\n            })\n        }\n    }\n\n    _initStage() {\n        var { el, width, height } = this.$options\n\n        var stage = this.stage = new Konva.Stage({\n            container: el,\n            width,\n            height\n        })\n\n        var main = this.layers.main = new Konva.Layer()\n        stage.add(main)\n\n        var maLine = this.layers.maLine = new Konva.Layer()\n        stage.add(maLine)\n\n        var tickLabel = this.layers.tickLabel = new Konva.Layer()\n        stage.add(tickLabel)\n\n        var mouseLine = this.layers.mouseLine = new Konva.Layer()\n        stage.add(mouseLine)\n\n        stage.container().style.position = 'relative'\n    }\n\n    _initElements() {\n        var options = this.$options\n        var $el = this.$elements.$el = $(options.el)\n\n        var $selList = this.$elements.$selList = this._createSelList()\n\n        $el.append($selList)\n    }\n\n    _createSelList() {\n        var $selList = $('<ul/>')\n        $selList.attr('id', 'sel-list')\n        $selList.attr('class', 'sel-list')\n        $selList.css({\n            position: 'absolute',\n            top: 20\n        })\n\n        var selItems = [{\n            text: '均线',\n            type: 'ma',\n            ma: 'ma'\n        }, {\n            text: '关闭',\n            type: 'ma',\n            ma: null\n        }]\n\n        selItems.forEach((item, index) => {\n            var $selItem = $('<li/>')\n            if (index === 0) {\n                $selItem.addClass('active')\n            }\n            $selItem.data('type', item.type)\n            $selItem.data('ma', item.ma)\n            $selItem.text(item.text)\n            $selList.append($selItem)\n        })\n\n        return $selList\n    }\n\n    _bindEvents() {\n        var self = this\n        var options = this.$options\n        var { kspan, kwidth, left, figureWidth, figureHeight, stateHeight, mouseLineType, maList } = options\n\n        super._bindEvents()\n\n        function clickHandler(e) {\n            var x, y, maIndex, ma\n            \n            self.scaleing = true\n\n            switch (e.type) {\n                case 'touchstart':\n                    x = self.stage.getPointerPosition().x - left\n                    y = self.stage.getPointerPosition().y\n                    break\n                case 'click':\n                    x = e.evt.offsetX - left\n                    y = e.evt.offsetY\n                    break\n            }\n\n            if (x > 30) {\n                if (y <= 20) {\n                    maIndex = self.maPosition.findIndex(d => d > x)\n                    ma = maList[maIndex]\n                    self.activeMa[ma] = !self.activeMa[ma]\n                    self.update()\n                }\n            } else {\n                if (y <= 20) {\n                    self.$elements.$selList.css({\n                        left: left - 20\n                    })\n                    self.$elements.$selList.toggle()\n                }\n            }\n        }\n\n        function moveHandler(e) {\n            self.stage.container().style.cursor = 'pointer'\n\n            var x, y, xData = self.dataSet.getData('xData'), isValidPoint\n\n            var touches = e.evt.touches, pinchDis\n\n            switch (e.type) {\n                case 'touchmove':\n                    x = self.stage.getPointerPosition().x - left\n                    y = self.stage.getPointerPosition().y\n                    self._longTouchtimer && clearTimeout(self._longTouchtimer)\n                    break\n                case 'mousemove':\n                    x = e.evt.offsetX - left\n                    y = e.evt.offsetY\n                    break\n            }\n\n            if (y < stateHeight || y > figureHeight) {\n                self.removeMouseLine()\n                self.emit('remove-mouse-line')\n                return\n            }\n\n            if (self._isDrag) {\n                if (Math.abs(self._mouseX - x) < kspan) {\n                    return\n                }\n                \n                var index = Math.round((self._mouseX - x) / kspan)\n\n                if (x >= 0) {\n                    self.moveChart(index * 2)\n                    self._isDragging = true\n                }\n            } else if (self._isPinch && touches && touches.length == 2) {\n                pinchDis = getPinchDis(self._touches, touches)\n                self.scaleChart(Math.sign(pinchDis))\n            }\n            \n            self.mouseIndex = xData.findIndex(v => {\n                // return v >= x\n                return (v + kwidth) >= x\n            })\n\n            // $('#tips-1').text(self._mouseX + ',' + x + ',' + index + ',' + options.startIndex + ',' + options.stopIndex)\n            \n            self._mouseX = x\n            self._mouseY = y\n\n            isValidPoint = self._mouseX >= 0 && self._mouseX <= figureWidth && self._mouseY >= stateHeight && self._mouseY <= figureHeight\n\n            // TODO\n            self.addMouseLine({\n                emitter: 'self',\n                type: mouseLineType,\n                mouseIndex: self.mouseIndex,\n                isValidPoint: isValidPoint,\n                mouseX: self._mouseX,\n                mouseY: self._mouseY,\n                isDrag: self._isDrag,\n                isPinch: self._isPinch,\n                isLongTouch: self._isLongTouch\n            })\n\n            // TODO\n            self.emit('add-mouse-line', {\n                emitter: 'other',\n                type: mouseLineType,\n                mouseIndex: self.mouseIndex,\n                isValidPoint: isValidPoint,\n                mouseX: self._mouseX,\n                mouseY: self._mouseY,\n                isDrag: self._isDrag,\n                isPinch: self._isPinch,\n                isLongTouch: self._isLongTouch\n            })\n        }\n\n        function maLineSelHandler(e) {\n            var $target = $(e.target)\n            var type = $target.data('ma')\n            var { maLineType } = self.$options\n\n            self.$elements.$selList.hide()\n\n            if (maLineType == type) {\n                return\n            }\n\n            self.$options.maLineType = type\n            $target.siblings().removeClass('active')\n            type && $target.addClass('active')\n            \n            if (kwidth > 0) {\n                self.drawMaLine()\n            }\n        }\n\n        this.stage.on('click', clickHandler)\n        this.stage.on('touchstart', clickHandler)\n\n        this.stage.on('mousemove', moveHandler)\n        this.stage.on('touchmove', moveHandler)\n\n        this.mouseLine.on('mouseline-move', () => {\n            self.drawMaLine()\n        })\n\n        this.$elements.$selList.on('click', maLineSelHandler)\n    }\n\n    addKline() {\n        const { left, kspan, kwidth, stateHeight, figureWidth, figureHeight, sliceType, period, xAxis } = this.$options\n\n        var data = this.dataSet.getKlineData({\n            left,\n            kspan,\n            kwidth,\n            stateHeight, \n            figureWidth,\n            figureHeight,\n            sliceType,\n            period,\n            $colors: this.$colors,\n            xAxis\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.main.add(node)\n        })\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.main.add(node)\n        })\n\n        data.rects.forEach(opts => {\n            var node = new Konva.Rect(opts)\n            this.groups.main.add(node)\n        })\n\n        return this\n    }\n\n    addExtentTips() {\n        const { left, kspan, kwidth, figureWidth } = this.$options\n\n        var data = this.dataSet.getExtentTipData({\n            left,\n            kspan,\n            kwidth,\n            figureWidth,\n            $colors: this.$colors\n        })\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.main.add(node)\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.main.add(node)\n        })\n\n        return this\n    }\n\n    drawKline() {\n        var { \n            width, \n            height \n        } = this.$options\n\n        if (!this.groups.main) {\n            this.groups.main = new Konva.Group({\n                x: 0, y: 0, width, height\n            })\n        } else {\n            this.groups.main.destroy()\n        }\n\n        this.addGrid()\n        .addKline()\n        .addExtentTips()\n        \n        this.layers.main.add(this.groups.main).draw()\n\n        return this\n    }\n\n    drawMaLine() {\n        const { width, height, left, maList, maLineType, kspan, kwidth, stateHeight, startIndex, stopIndex } = this.$options\n\n        if (!this.groups.maline) {\n            this.groups.maline = new Konva.Group({\n                x: 0, y: 0, width, height\n            })\n        } else {\n            this.groups.maline.destroy()\n        }\n\n        var data = this.dataSet.getMaLineData({\n            left,\n            maList, \n            maLineType,\n            activeMa: this.activeMa,\n            $colors: this.$colors,\n            kspan,\n            kwidth,\n            stateHeight,\n            startIndex,\n            stopIndex,\n            currentIndex: this.currentIndex\n        })\n\n        this.maPosition = data.maPosition\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.maline.add(node)\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.maline.add(node)\n        })\n\n        this.layers.maLine.add(this.groups.maline).draw()\n\n        return this\n    }\n\n    setScale() {\n        var { \n            maList, \n            kwidth, \n            startIndex, \n            stopIndex, \n            figureHeight, \n            stateHeight, \n            paddingY, \n            width, \n            height \n        } = this.$options\n\n        // console.log(startIndex, stopIndex)\n\n        var data = this.allDataSet.slice(startIndex, stopIndex)\n\n        this.dataSet.setData(data)\n\n        this.currentIndex = this.currentIndex || data.length - 1\n\n        var extent = this.dataSet.extent({\n            maList,\n            kwidth,\n            activeMa: this.activeMa,\n            startIndex,\n            stopIndex,\n            figureHeight,\n            stateHeight,\n            paddingY\n        })\n        // console.log('extent:', extent)\n       \n        // console.log(extent)\n\n        this.dataSet.setScale({\n            domain: extent,\n            range: [figureHeight - paddingY, stateHeight + paddingY]\n        })\n\n        return this\n    }\n\n    update() {\n        this.setScale()\n\n        this.drawKline()\n            .drawMaLine()\n            .drawTickLabel()\n    }\n\n    redraw() {\n        this.drawKline()\n            .drawMaLine()\n            .drawTickLabel()\n    }\n\n}\n\nexport default Kline","import Chart from '../Chart'\nimport Konva from 'konva'\nimport $ from 'jquery'\nimport MouseLine from '../mouse-line/index'\nimport { getPinchDis } from '../../core/util'\n\nvar uid = 0\n\nclass Volume extends Chart {\n    constructor(options = {}) {\n        super(options)\n\n        const defaults = {\n            ctype: 'volume',\n            \n            left: 0,\n\n            width: 640,\n            height: 90,\n\n            figureWidth: 640,\n            stateHeight: 20,\n            figureHeight: 70,\n\n            maList: ['ma5', 'ma10']\n        }\n\n        options = this.$options = Object.assign(this.$options, defaults, options)\n\n        this.uid = 'volume' + (uid++)\n\n        this._initStage()\n\n        this._initElements()\n\n        this.mouseLine = new MouseLine(this, options)\n\n        this._bindEvents()\n\n        if (options.autoFetchData) {\n            this.fetchData({\n                uid: this.uid,\n                count: -2 * options.count,\n                mode: 'init'\n            })\n        }\n    }\n\n    _initStage() {\n        var { el, width, height } = this.$options\n\n        var stage = this.stage = new Konva.Stage({\n            container: el,\n            width,\n            height\n        })\n\n        var main = this.layers.main = new Konva.Layer()\n        stage.add(main)\n\n        var maLine = this.layers.maLine = new Konva.Layer()\n        stage.add(maLine)\n\n        var tickLabel = this.layers.tickLabel = new Konva.Layer()\n        stage.add(tickLabel)\n\n        var mouseLine = this.layers.mouseLine = new Konva.Layer()\n        stage.add(mouseLine)\n\n        stage.container().style.position = 'relative'\n    }\n\n    _initElements() {\n        var options = this.$options\n        var $el = this.$elements.$el = $(options.el)\n    }\n\n    _bindEvents() {\n        var self = this\n        var options = this.$options\n        var { kspan, kwidth, left, figureWidth, figureHeight, stateHeight, mouseLineType } = options\n\n        super._bindEvents()\n\n        function clickHandler(e) {\n            self.scaleing = true\n        }\n\n        function moveHandler(e) {\n            self.stage.container().style.cursor = 'pointer'\n\n            var x, y, xData = self.dataSet.getData('xData'), isValidPoint\n\n            var touches = e.evt.touches, pinchDis\n\n            switch (e.type) {\n                case 'touchmove':\n                    x = self.stage.getPointerPosition().x - left\n                    y = self.stage.getPointerPosition().y\n                    self._longTouchtimer && clearTimeout(self._longTouchtimer)\n                    break\n                case 'mousemove':\n                    x = e.evt.offsetX - left\n                    y = e.evt.offsetY\n                    break\n            }\n\n            if (y < stateHeight || y > figureHeight) {\n                self.removeMouseLine()\n                self.emit('remove-mouse-line')\n                return\n            }\n\n            if (self._isDrag) {\n                if (Math.abs(self._mouseX - x) < kspan) {\n                    return\n                }\n                \n                var index = Math.round((self._mouseX - x) / kspan)\n                \n                if (x >= 0) {\n                    self.moveChart(index * 2)\n                    self._isDragging = true\n                }\n            } else if (self._isPinch && touches && touches.length == 2) {\n                pinchDis = getPinchDis(self._touches, touches)\n                self.scaleChart(Math.sign(pinchDis))\n            }\n            \n            self.mouseIndex = xData.findIndex(v => {\n                // return v >= x\n                return (v + kwidth) >= x\n            })\n            \n            self._mouseX = x\n            self._mouseY = y\n\n            isValidPoint = self._mouseX >= 0 && self._mouseX <= figureWidth && self._mouseY >= stateHeight && self._mouseY <= figureHeight\n\n            // TODO\n            self.addMouseLine({\n                emitter: 'self',\n                type: mouseLineType,\n                mouseIndex: self.mouseIndex,\n                isValidPoint: isValidPoint,\n                mouseX: self._mouseX,\n                mouseY: self._mouseY,\n                isDrag: self._isDrag,\n                isPinch: self._isPinch,\n                isLongTouch: self._isLongTouch\n            })\n\n            // TODO\n            self.emit('add-mouse-line', {\n                emitter: 'other',\n                type: mouseLineType,\n                mouseIndex: self.mouseIndex,\n                isValidPoint: isValidPoint,\n                mouseX: self._mouseX,\n                mouseY: self._mouseY,\n                isDrag: self._isDrag,\n                isPinch: self._isPinch,\n                isLongTouch: self._isLongTouch\n            })\n        }\n\n        this.stage.on('click', clickHandler)\n\n        this.stage.on('mousemove', moveHandler)\n        this.stage.on('touchmove', moveHandler)\n\n        this.mouseLine.on('mouseline-move', () => {\n            self.drawMaLine()\n        })\n    }\n\n    addVrect() {\n        const { left, kspan, kwidth, stateHeight, figureWidth, figureHeight, sliceType, period, xAxis } = this.$options\n\n        var data = this.dataSet.getVrectData({\n            left,\n            kspan,\n            kwidth,\n            stateHeight, \n            figureWidth,\n            figureHeight,\n            sliceType,\n            period,\n            $colors: this.$colors,\n            xAxis\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.main.add(node)\n        })\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.main.add(node)\n        })\n\n        data.rects.forEach(opts => {\n            var node = new Konva.Rect(opts)\n            this.groups.main.add(node)\n        })\n\n        return this\n    }\n\n    addFillRect() {\n        const { left, stateHeight, figureWidth } = this.$options\n\n        var data = this.dataSet.getFillRectData({\n            left,\n            stateHeight, \n            figureWidth\n        })\n\n        data.rects.forEach(opts => {\n            var node = new Konva.Rect(opts)\n            this.groups.main.add(node)\n        })\n\n        return this\n    }\n\n    drawVolume() {\n        var { \n            width, \n            height \n        } = this.$options\n\n        if (!this.groups.main) {\n            this.groups.main = new Konva.Group({\n                x: 0, y: 0, width, height\n            })\n        } else {\n            this.groups.main.destroy()\n        }\n\n        this.addGrid()\n            .addVrect()\n            .addFillRect()\n        \n        this.layers.main.add(this.groups.main).draw()\n\n        return this\n    }\n\n    drawMaLine() {\n        var { \n            width, \n            height,\n            left,\n            stateHeight,\n            figureWidth,\n            kspan,\n            kwidth,\n            maList,\n            startIndex,\n            stopIndex\n        } = this.$options\n\n        if (!this.groups.maline) {\n            this.groups.maline = new Konva.Group({\n                x: 0, y: 0, width, height\n            })\n        } else {\n            this.groups.maline.destroy()\n        }\n\n        var data = this.dataSet.getMaLineData({\n            left,\n            stateHeight, \n            figureWidth,\n            kspan,\n            kwidth,\n            maList,\n            startIndex,\n            stopIndex,\n            currentIndex: this.currentIndex,\n            $colors: this.$colors\n        })\n\n        data.lines.forEach(opts => {\n            var node = new Konva.Line(opts)\n            this.groups.maline.add(node)\n        })\n\n        data.texts.forEach(opts => {\n            var node = new Konva.Text(opts)\n            this.groups.maline.add(node)\n        })\n        \n        this.layers.maLine.add(this.groups.maline).draw()\n\n        return this\n    }\n\n    setScale() {\n        var { \n            maList, \n            kwidth, \n            startIndex, \n            stopIndex, \n            figureHeight, \n            stateHeight, \n            paddingY, \n            width, \n            height \n        } = this.$options\n\n        // console.log(startIndex, stopIndex)\n\n        var data = this.allDataSet.slice(startIndex, stopIndex)\n\n        this.dataSet.setData(data)\n\n        this.currentIndex = this.currentIndex || data.length - 1\n\n        var extent = this.dataSet.extent()\n        // console.log('extent:', extent)\n\n        this.dataSet.setScale({\n            domain: extent,\n            range: [figureHeight, stateHeight]\n        })\n\n        return this\n    }\n\n    update() {\n        this.setScale()\n\n        this.drawVolume()\n            .drawMaLine()\n            .drawTickLabel()\n    }\n\n    redraw() {\n        this.drawVolume()\n            .drawTickLabel()\n    }\n\n}\n\nexport default Volume","import EventEmitter from 'events'\nimport { parseVolume, parseAmount, floor, measureText } from '../core/util/index'\n\nclass DataSet extends EventEmitter { \n    constructor(options = {}) {\n        super()\n        \n        var defaults = {}\n        \n        this.options = Object.assign({}, defaults, options)\n        \n        this.$state = {}\n\n        this.$scale = {}\n\n        this.allDataSet = this.options.allDataSet\n    }\n\n    getState(key) {\n        return this.$state[key]\n    }\n\n    setState(key, val) {\n        this.$state[key] = val\n    }\n\n    parseVolume(val = 0, quoteLotSize = 100, quoteType = 11, flag = true) {\n        if (null === val) {\n            return '--'\n        }\n\n        var num = val\n\n        num = [11, 12, 13, 14, 15, 17, 60, 61, 81].indexOf(+quoteType) > -1 \n            ? ''.concat(parseVolume(val / quoteLotSize)) \n            : [30, 31, 32, 33, 34, 0, 3, 4, 5, 6, 7, 26, 27, 28, 8, 35].indexOf(+quoteType) > -1 \n                ? ''.concat(parseVolume(val), '股') \n                : parseVolume(val)\n        \n        return flag ? num : parseFloat(num)\n    }\n\n    parseAmount(val = 0, quoteLotSize = 100, quoteType = 11, flag = true) {\n        if (null === val) {\n            return '--'\n        }\n\n        var num = val\n\n        num = [11, 12, 13, 14, 15, 17, 60, 61, 81].indexOf(+quoteType) > -1 \n            ? ''.concat(parseAmount(val / quoteLotSize)) \n            : parseAmount(val)\n\n        return flag ? num : parseFloat(num)\n    }\n}\n\nexport default DataSet","import d3 from 'd3'\nimport moment from 'moment'\nimport { \n    floor, \n    measureText, \n    getTimeFormatStr, \n    isDifPeriod\n} from '../core/util/index'\nimport DataSet from './DataSet'\n\nclass KlineVolumeDataSet extends DataSet {\n    constructor(options) {\n        super(options)\n        \n        var defaults = {}\n        \n        this.options = Object.assign(this.options, defaults, options)\n\n        this.$scale = {}\n\n        this._data = {\n            data: [],\n\n            closeData: [],\n            highData: [],\n            lowData: [],\n            volumeData: [],\n\n            extent: {},\n            xData: []\n        }\n    }\n\n    extent(options) {}\n\n    getScale() {\n        return this.$scale.linear\n    }\n\n    setScale(options) {\n        var { domain, range } = options\n\n        var linear = this.$scale.linear = d3.scaleLinear()\n        .domain(domain)\n        .range(range)\n\n        return linear\n    }\n\n    resetData() {\n        for (var key in this._data) {\n            if (Array.isArray(this._data[key])) {\n                this._data[key].length = 0\n            }\n        }\n        this._data.extent = {}\n    }\n\n    setData(data = []) {\n        this.resetData()\n        this._data.data = data\n    }\n\n    getData(key) {\n        return key && this._data[key] ? this._data[key] : this._data.data\n    }\n\n    getGridData(options, nice = 6) {\n        var result = {\n            lines: [],\n            rects: []\n        }\n\n        var data = this.getData()\n\n        if (!data.length) {\n            return result\n        }\n\n        var { left, figureWidth, figureHeight, stateHeight, stroke, strokeWidth, font } = options\n\n        var span = (figureHeight - stateHeight) / nice\n\n        for (var i = 1; i < nice; i++) {\n            result.lines.push({\n                points: [\n                    left, floor(stateHeight + span * i),\n                    floor(left + figureWidth), floor(stateHeight + span * i)\n                ],\n                stroke: stroke,\n                strokeWidth: strokeWidth,\n                font: font\n            })\n        }\n\n        result.rects.push({\n            x: left, \n            y: stateHeight,\n            width: Math.floor(figureWidth),\n            height: Math.floor(figureHeight - stateHeight),\n            stroke: stroke,\n            strokeWidth: strokeWidth\n        })\n\n        return result\n    }\n\n    getKlineVolumeData(options, callback) {\n        var columns = this.options.columns\n\n        var result = {\n            lines: [],\n            rects: [],\n            texts: []\n        }\n\n        var data = this.getData()\n        \n        if (!data.length) {\n            return result\n        }\n\n        var { left, kspan, kwidth, stateHeight, figureWidth, figureHeight, sliceType, period, $colors, xAxis } = options\n\n        var closeLineOpts = {\n            stroke: $colors.close,\n            strokeWidth: 1,\n            points: []\n        }\n\n        var timeFormatStr = getTimeFormatStr(period)\n        \n        var timestamp0 = data[0][columns.indexOf('timestamp')]\n        var time0 = moment(timestamp0).format(timeFormatStr)\n        var timeWidth0 = measureText(time0).width * 2\n\n        data.forEach((item, index) => {\n            var timestamp = item[columns.indexOf('timestamp')]\n            var time = moment(timestamp).format(timeFormatStr)\n            var timeWidth = measureText(time).width\n            var open = item[columns.indexOf('open')]\n            var close = item[columns.indexOf('close')]\n            var volume = item[columns.indexOf('volume')]\n\n            var x = floor((left + index * kspan + kwidth / 2))\n\n            this._data.xData.push(x - left)\n\n            // x轴刻度值\n            if (x > timeWidth0 && isDifPeriod(timestamp, timestamp0, period)) {\n                timestamp0 = timestamp\n\n                // mainTickLine\n                var tickOpts = {\n                    stroke: 'rgba(225, 225, 225, 1)',\n                    strokeWidth: 1,\n                    points: [\n                        x, stateHeight,\n                        x, figureHeight\n                    ]\n                }\n                result.lines.push(tickOpts)\n\n                // mainTickLabel\n                var textLeft = Math.max(x, timeWidth / 2)\n                textLeft = Math.min(textLeft, left + figureWidth - timeWidth / 2)\n\n                var textOpts = {\n                    x: textLeft - timeWidth / 2,// konva 文字无法居中，这里做了hank\n                    y: figureHeight + 4,\n                    text: time,\n                    fill: $colors.text,\n                    fontSize: 11,\n                    align: 'center',\n                    verticalAlign: 'middle'\n                }\n\n                if (xAxis.display) {\n                    result.texts.push(textOpts)\n                }\n\n                timeWidth0 = textLeft + timeWidth * 2\n            }\n\n            var { klineOpts, rectOpts, closeLinePoint } = callback({\n                item,\n                index,\n                x,\n                open,\n                close,\n                volume\n            })\n\n            if (klineOpts) {\n                result.lines.push(klineOpts)\n            }\n\n            if (rectOpts) {\n                result.rects.push(rectOpts)\n            }\n\n            if (closeLinePoint) {\n                closeLineOpts.points = closeLineOpts.points.concat(closeLinePoint)\n            }\n        })\n        \n        if (kwidth <= 0) {\n            result.lines.push(closeLineOpts)\n        }\n\n        return result\n    }\n\n    getFillRectData(options) {\n        var { left, stateHeight, figureWidth } = options\n        var result = {\n            rects: []\n        }\n\n        var rectOpts = {\n            x: left,\n            y: 0,\n            width: figureWidth,\n            height: stateHeight,\n            fill: '#f9f9f9'\n        }\n\n        result.rects.push(rectOpts)\n\n        return result\n    }\n\n}\n\nexport default KlineVolumeDataSet","import moment from 'moment'\nimport { floor, measureText } from '../core/util/index'\n\nimport DataSet from './DataSet'\n\nclass MouseLineDataSet extends DataSet {\n    constructor(context, options = {}) {\n        super(options)\n\n        const defaults = {}\n        this.options = Object.assign(this.options, defaults, options)\n        this.context = context\n\n        this._item = {\n            left: null,\n            right: null\n        }\n    }\n\n    getMouseLineData(options) {\n        var context = this.context\n\n        var result = {\n            lines: [],\n            circles: [],\n            rects: [],\n            texts: [],\n            item: {\n                display: false\n            }\n        }\n\n        var data = context.getData()\n        \n        if (!data.length) {\n            return result\n        }\n        \n        var { ctype, \n            type, \n            left, \n            height, \n            mouseIndex, \n            mouseY, \n            figureWidth, \n            figureHeight, \n            stateHeight, \n            period, \n            $colors, \n            xAxis, \n            emitter \n        } = options\n\n        if (!data[mouseIndex]) {\n            return result\n        }\n\n        var columns = this.options.columns\n\n        var xData = context.getData('xData')\n\n        var extent = context.getData('extent')\n\n        var scaleLinear = context.getScale()\n\n        var cols = ['timestamp', 'open', 'high', 'low', 'close', 'volume', 'amount', 'chg', 'percent', 'turnoverrate'] \n\n        var values = cols.map(d => {\n            return data[mouseIndex] ? data[mouseIndex][columns.indexOf(d)] : 0\n        })\n\n        var lastClose = data[mouseIndex - 1] ? data[mouseIndex - 1][columns.indexOf('close')] : null\n        \n        var item = {\n            display: true,\n            timestamp: values[0],\n            open: values[1],\n            high: values[2],\n            low: values[3],\n            close: values[4],\n            volume: values[5],\n            amount: values[6],\n            chg: values[7],\n            percent: values[8],\n            turnoverrate: values[9],\n            lastClose: lastClose\n        }\n\n        // TODO\n        var xText = item.time = moment(item.timestamp).format('YYYY-MM-DD')\n        var yText = ctype === 'volume' \n            ? (extent.max - (mouseY - stateHeight) / (figureHeight - stateHeight) * (extent.max - extent.min))\n            : type \n                ? (extent.phigh - (mouseY - stateHeight) / (figureHeight - stateHeight) * (extent.phigh - extent.plow))\n                : item.close\n\n        // TODO\n        yText = ctype === 'volume' ? this.parseVolume(yText) : Number(yText).toFixed(2)\n\n        var xTextWidth = measureText(xText).width\n        var yTextWidth = measureText(yText).width\n        // console.log(item, item.time, xText)\n\n        var xTextLeft = xData[mouseIndex] - xTextWidth / 2\n\n        xTextLeft = Math.max(0, xTextLeft)\n        xTextLeft = Math.min(figureWidth - xTextWidth, xTextLeft)\n\n        if (\n            xData[mouseIndex] > (figureWidth - 150) || \n            (this._item.left === null && this._item.right === null)\n        ) {\n            item.left = left ? left : 30\n            item.right = null\n        } else if (xData[mouseIndex] < 150 + 30) {\n            item.left = null\n            item.right = 0\n        }\n        \n        this._item.left = item.left\n        this._item.right = item.right\n\n        var yTop = type ? mouseY : scaleLinear(item.close)\n\n        var lines\n        if (emitter !== 'self') {\n            lines = [\n                {\n                    strokeWidth: 1,\n                    stroke: $colors.text,\n                    points: [\n                        left + xData[mouseIndex], stateHeight, \n                        left + xData[mouseIndex], figureHeight\n                    ],\n                    dash: [2, 3]\n                }\n            ]\n        } else {\n            lines = [\n                {\n                    strokeWidth: 1,\n                    stroke: $colors.text,\n                    points: [\n                        left, yTop, \n                        left + figureWidth, yTop\n                    ],\n                    dash: [2, 3]\n                }, {\n                    strokeWidth: 1,\n                    stroke: $colors.text,\n                    points: [\n                        left + xData[mouseIndex], stateHeight, \n                        left + xData[mouseIndex], figureHeight\n                    ],\n                    dash: [2, 3]\n                }\n            ]\n        }\n\n        if (type === false) {\n            result.circles.push({\n                x: left + xData[mouseIndex],\n                y: yTop,\n                radius: 3,\n                fill: '#fff',\n                stroke: $colors.blue,\n                strokeWidth: 1\n            })\n        }\n\n        var rects\n        if (emitter !== 'self') {\n            rects = [\n                {\n                    x: left + xTextLeft - 3,\n                    y: floor(figureHeight),\n                    width: xTextWidth + 3,\n                    height: 16,\n                    fill: '#eaeaea',\n                    display: xAxis.display\n                }\n            ]\n        } else {\n            rects = [\n                {\n                    x: left ? left - yTextWidth - 4 : 0,\n                    y: floor(yTop - 9),\n                    width: left ? yTextWidth + 4 : yTextWidth + 3,\n                    height: 16,\n                    fill: '#eaeaea'\n                }, {\n                    x: left + xTextLeft - 3,\n                    y: floor(figureHeight),\n                    width: xTextWidth + 3,\n                    height: 16,\n                    fill: '#eaeaea',\n                    display: xAxis.display\n                }\n            ]\n        } \n\n        var texts\n        if (emitter !== 'self') {\n            texts = [\n                {   \n                    x: left + xTextLeft,\n                    y: figureHeight + 4,\n                    text: xText,\n                    fill: $colors.blue,\n                    fontSize: 11,\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    display: xAxis.display\n                }\n            ]\n        } else {\n            texts = [\n                {   \n                    x: left ? left - yTextWidth - 2 : 1,\n                    y: yTop - 5,\n                    text: yText,\n                    fill: $colors.blue,\n                    fontSize: 11,\n                    align: 'center',\n                    verticalAlign: 'middle'\n                }, {   \n                    x: left + xTextLeft,\n                    y: figureHeight + 4,\n                    text: xText,\n                    fill: $colors.blue,\n                    fontSize: 11,\n                    align: 'center',\n                    verticalAlign: 'middle',\n                    display: xAxis.display\n                }\n            ]\n        }\n\n        lines.forEach((d, i) => {\n            result.lines.push(d)\n        })\n\n        rects.forEach((d, i) => {\n            if (d.display !== false) {\n                result.rects.push(d)\n            }\n        })\n\n        texts.forEach((d, i) => {\n            if (d.display !== false) {\n                result.texts.push(d)\n            }\n        })\n\n        result.item = item\n\n        return result\n    }\n\n}\n\nexport default MouseLineDataSet","import d3 from 'd3'\nimport moment from 'moment'\nimport { \n    floor, \n    measureText, \n    ma, \n    parseAmount \n} from '../core/util/index'\nimport KlineVolumeDataSet from './KlineVolumeDataSet'\nimport MouseLineDataSet from './MouseLineDataSet'\n\nclass KlineDataSet extends KlineVolumeDataSet {\n    constructor(options) {\n        super(options)\n\n        var defaults = {}\n\n        this.options = Object.assign(this.options, defaults, options)\n\n        this.mouseLine = new MouseLineDataSet(this, this.options)\n    }\n\n    setData(data = []) {\n        var columns = this.options.columns\n\n        super.setData(data)\n\n        this._data.data.forEach((item, index) => {\n            this._data.closeData[index] = item[columns.indexOf(\"close\")]\n            this._data.highData[index] = item[columns.indexOf(\"high\")]\n            this._data.lowData[index] = item[columns.indexOf(\"low\")]\n        })\n    }\n\n    extent(options) {\n        var self = this\n        \n        var { maList, activeMa, kwidth, startIndex, stopIndex, figureHeight, stateHeight, paddingY } = options\n        \n        var closeMaxData = []\n        var closeMinData = []\n\n        maList.forEach((maItem) => {\n            if (activeMa[maItem]) {\n                // `注意`：需要从所有的收盘价中计算均线\n                var allCloseData = ma(this.allDataSet.getData('closeData'), Number(maItem.replace(/[^\\d]/g, \"\")))\n                var closeData = allCloseData.slice(startIndex, stopIndex)\n                closeMaxData.push(d3.max(closeData))\n                closeMinData.push(d3.min(closeData))\n            }\n        })\n\n        var highVal = d3.max(this.getData('highData'))\n        var lowVal = d3.min(this.getData('lowData'))\n\n        closeMaxData.push(highVal)\n        closeMinData.push(lowVal)\n\n        var maxVal = d3.max(closeMaxData)\n        var minVal = d3.min(closeMinData)\n\n        if (maxVal === minVal) {\n            minVal = .99 * minVal\n        }\n\n        var phigh = maxVal + (maxVal - minVal) / (figureHeight - stateHeight - 2 * paddingY) * paddingY\n        var plow = minVal - (maxVal - minVal) / (figureHeight - stateHeight - 2 * paddingY) * paddingY\n\n        this._data.extent = {\n            high: highVal,\n            low: lowVal,\n            max: maxVal,\n            min: minVal,\n            phigh: phigh,\n            plow: plow\n        }\n\n        return [minVal, maxVal]\n    }\n    \n    getGridData(options) {\n        return super.getGridData(options)\n    }\n\n    getKlineData(options) {\n        var columns = this.options.columns\n\n        var { left, kspan, kwidth, stateHeight, figureWidth, figureHeight, sliceType, period, $colors, xAxis } = options\n\n        var scaleLinear = this.getScale()\n\n        return this.getKlineVolumeData(options, (data) => {\n            var { item, index, x, open, close } = data\n\n            var result = {}\n\n            var opts = {}\n            // 绘制k线的中线\n            var klineOpts = {}\n\n            if (kwidth > 0) {\n                opts.strokeWidth = 1\n                if (open <= close) {\n                    opts.stroke = $colors.red\n                } else if (open > close) {\n                    opts.stroke = $colors.green\n                } \n                if (open == close && data[index - 1]) {\n                    opts.stroke = close >= data[index - 1][columns.indexOf('close')] ? $colors.red : $colors.green\n                }\n\n                klineOpts.points = [\n                    x, floor(scaleLinear(item[columns.indexOf(\"high\")])),\n                    x, floor(scaleLinear(open)),\n                    x, floor(scaleLinear(item[columns.indexOf(\"low\")])),\n                    x, floor(scaleLinear(close))\n                ]\n                \n                result.klineOpts = Object.assign({}, opts, klineOpts)\n            }\n\n            // 绘制k线的body\n            var rectOpts = {\n                x: floor(left + index * kspan),\n                y: floor(scaleLinear(Math.max(open, close))),\n                width: floor(kwidth),\n                height: floor(Math.abs(scaleLinear(open) - scaleLinear(close)))\n            }\n\n            var rectFill = sliceType ? $colors.red : '#fff'\n\n            if (kwidth > 1) {\n                if (open <= close) {\n                    rectOpts.fill = rectFill\n                } else {\n                    rectOpts.fill = $colors.green\n                }\n\n                if (open == close && data[index - 1]) {\n                    rectOpts.fill = close >= data[index - 1][columns.indexOf('close')] ? $colors.red : $colors.green\n                }\n\n                result.rectOpts = Object.assign({}, opts, rectOpts)\n            }\n\n            if (kwidth <= 0) {\n                result.closeLinePoint = [ \n                    x, floor(scaleLinear(item[columns.indexOf(\"close\")]))\n                ]\n            }\n\n            return result\n        })\n    }\n\n    getMaLineData(options) {\n        var result = {\n            lines: [],\n            texts: [],\n            maPosition: []\n        }\n\n        var data = this.getData()\n        \n        if (!data.length) {\n            return result\n        }\n\n        var { left, maList, maLineType, activeMa, kspan, kwidth, stateHeight, $colors, startIndex, stopIndex, currentIndex } = options\n\n        var scaleLinear = this.getScale()\n\n        var maLineTypeName = maLineType == null || kwidth <= 0 ? '选择指标' : '均线'\n        var maLineTypeNameWidth = measureText(maLineTypeName).width\n        var maLineTypeNameLeft = maLineTypeNameWidth + 5\n\n        result.texts.push({\n            x: left,\n            y: floor((stateHeight - 11) / 2),\n            text: maLineTypeName,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'middle'\n        })\n\n        if (kwidth <= 0 || maLineType == null) {\n            return result\n        }\n\n        maList.forEach((maItem) => {\n            var maDays = Number(maItem.replace(/[^\\d]/g, ''))\n\n            // `注意`：需要从所有的收盘价中计算均线\n            var allCloseData = ma(this.allDataSet.getData('closeData'), maDays)\n            var closeData = allCloseData.slice(startIndex, stopIndex)\n\n            var maKeyVal = maItem.toLocaleUpperCase() + ':' + parseAmount(closeData[currentIndex])\n            var maKeyValWidth = measureText(maKeyVal).width\n\n            if (activeMa[maItem]) {\n                var lineOpts = {\n                    ma: maDays,\n                    stroke: $colors[maItem],\n                    strokeWidth: 1,\n                    points: []\n                }\n                closeData.forEach((d, i) => {\n                    if (scaleLinear(d)) {\n                        lineOpts.points.push(\n                            left + i * kspan + kwidth / 2, scaleLinear(d),\n                            left + i * kspan + kwidth / 2, scaleLinear(d)\n                        )\n                    }\n                })\n                result.lines.push(lineOpts)\n            }\n\n            var textOpts = {\n                x: left + maLineTypeNameLeft,\n                y: floor((stateHeight - 11) / 2),\n                text: maKeyVal,\n                fill: activeMa[maItem] ? $colors[maItem] : $colors[maItem + '_o'],\n                fontSize: 11,\n                align: 'left',\n                verticalAlign: 'middle'\n            }\n\n            result.texts.push(textOpts)\n\n            maLineTypeNameLeft += maKeyValWidth + 5\n\n            result.maPosition.push(maLineTypeNameLeft)\n        })\n\n        return result\n    }\n\n    getYTickData(options) {\n        var result = {\n            texts: []\n        }\n\n        var data = this.getData()\n\n        if (!data.length) {\n            return result\n        }\n\n        var { left, figureHeight, stateHeight, $colors } = options\n\n        var extent = this.getData('extent')\n\n        var span = (figureHeight - stateHeight) / 6\n\n        // 最高刻度值\n        var text = Number(extent.phigh).toFixed(2)\n        var xText = left ? left - measureText(text).width - 2 : 1\n\n        result.texts.push({\n            x: xText,\n            y: floor(stateHeight),\n            text: text,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'top'\n        })\n\n        for (var i = 1; i < 6; i++) {\n            text = Number((extent.phigh - (span * i) / (figureHeight - stateHeight) * (extent.phigh - extent.plow))).toFixed(2)\n            xText = left ? left - measureText(text).width - 2 : 1\n\n            result.texts.push({\n                x: xText,\n                y: floor(stateHeight + span * i) - 5,\n                text: text,\n                fill: $colors.text,\n                fontSize: 11,\n                align: 'left',\n                verticalAlign: 'middle'\n            })\n        }\n\n        // 最低刻度值\n        text = Number(extent.plow).toFixed(2)\n        xText = left ? left - measureText(text).width - 2 : 1\n\n        result.texts.push({\n            x: xText,\n            y: floor(figureHeight) - 10,\n            text: text,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'bottom'\n        })\n\n        return result\n    }\n\n    getExtentTipData(options) {\n        var result = {\n            lines: [],\n            texts: []\n        }\n\n        var data = this.getData()\n        \n        if (!data.length) {\n            return result\n        }\n\n        var columns = this.options.columns\n        \n        var scaleLinear = this.getScale()\n\n        var { left, kspan, kwidth, figureWidth, $colors } = options\n\n        if (kwidth <= 0) {\n            return result\n        }\n\n        var extentList = ['high', 'low']\n\n        extentList.forEach(name => {\n            var dataIndex = data.map(item => item[columns.indexOf(name)]).lastIndexOf(this._data.extent[name])\n\n            var x = left + floor(dataIndex * kspan + kwidth / 2)\n            var y = scaleLinear(this._data.extent[name])\n            var displayReverse = x > figureWidth / 2 \n\n            result.lines.push({\n                stroke: $colors.text,\n                strokeWidth: 1,\n                points: [\n                    x, y,\n                    x + (displayReverse ? -12 : 16), y\n                ]\n            })\n\n            result.texts.push({\n                x: x + (displayReverse ? -38 : 16),\n                y: y - 4,\n                text: Number(this._data.extent[name]).toFixed(2),\n                fill: $colors.text,\n                fontSize: 11,\n                align: displayReverse ? 'right' : 'left',\n                verticalAlign: 'middle'\n            })\n        })\n\n        return result\n    }\n\n    getMouseLineData(options) {\n        return this.mouseLine.getMouseLineData(options)\n    }\n\n}\n\nexport default KlineDataSet","var klineData = [\n    [\n      1511366400000,\n      50.0993,\n      51.0718,\n      49.4313,\n      49.7751,\n      4180781,\n      214184689.88,\n      -0.3711,\n      -0.74,\n      2.04\n    ],\n    [\n      1511452800000,\n      49.3429,\n      49.7653,\n      44.7947,\n      44.7947,\n      10734971,\n      507082700.84,\n      -4.9827,\n      -10.01,\n      5.23\n    ],\n    [\n      1511712000000,\n      44.0874,\n      44.1954,\n      42.8103,\n      43.5471,\n      5661628,\n      250025913.73,\n      -1.2498,\n      -2.79,\n      2.76\n    ],\n    [\n      1511798400000,\n      43.3997,\n      43.999,\n      43.2131,\n      43.8614,\n      2515884,\n      111922358.02,\n      0.3135,\n      0.72,\n      1.23\n    ],\n    [\n      1511884800000,\n      43.7141,\n      43.7141,\n      42.3192,\n      42.9184,\n      3241206,\n      141514512.83,\n      -0.943,\n      -2.15,\n      1.58\n    ],\n    [\n      1511971200000,\n      42.9086,\n      42.9184,\n      41.6512,\n      41.6512,\n      3623314,\n      155467286.06,\n      -1.2661,\n      -2.95,\n      1.77\n    ],\n    [\n      1512057600000,\n      41.6512,\n      42.2995,\n      41.6021,\n      41.8084,\n      4127200,\n      175819272.62,\n      0.1583,\n      0.38,\n      2.01\n    ],\n    [\n      1512316800000,\n      41.8182,\n      41.8477,\n      40.4724,\n      40.718,\n      4050527,\n      169839013.93,\n      -1.0912,\n      -2.61,\n      1.97\n    ],\n    [\n      1512403200000,\n      40.5706,\n      40.5706,\n      38.881,\n      39.3918,\n      3645993,\n      147689254.42,\n      -1.3274,\n      -3.26,\n      1.78\n    ],\n    [\n      1512489600000,\n      39.4409,\n      40.2563,\n      39.156,\n      40.2268,\n      3328384,\n      134948505.13,\n      0.8351,\n      2.12,\n      1.62\n    ],\n    [\n      1512576000000,\n      40.1679,\n      40.7769,\n      39.6276,\n      40.1777,\n      2561701,\n      104743603.36,\n      -0.0483,\n      -0.12,\n      1.25\n    ],\n    [\n      1512662400000,\n      40.3348,\n      41.5038,\n      40.1777,\n      41.3074,\n      3912076,\n      163540878.93,\n      1.129,\n      2.81,\n      1.91\n    ],\n    [\n      1512921600000,\n      41.3172,\n      42.9675,\n      41.3172,\n      42.6925,\n      4727797,\n      203918063.62,\n      1.3838,\n      3.35,\n      2.3\n    ],\n    [\n      1513008000000,\n      42.663,\n      42.9773,\n      41.9066,\n      42.2406,\n      2805896,\n      121009898.2,\n      -0.4525,\n      -1.06,\n      1.37\n    ],\n    [\n      1513094400000,\n      42.2209,\n      42.2209,\n      41.5038,\n      41.9557,\n      1917021,\n      81523881.8,\n      -0.283,\n      -0.67,\n      0.93\n    ],\n    [\n      1513180800000,\n      42.0932,\n      42.3978,\n      40.9439,\n      41.3172,\n      2375553,\n      100469783.37,\n      -0.6377,\n      -1.52,\n      1.16\n    ],\n    [\n      1513267200000,\n      41.3467,\n      41.6315,\n      41.1109,\n      40.9439,\n      1761777,\n      73725811.86,\n      0,\n      0,\n      0.28\n    ],\n    [\n      1513526400000,\n      41.1797,\n      41.6315,\n      40.0991,\n      40.6001,\n      2454808,\n      101744483.82,\n      -0.3439,\n      -0.84,\n      1.2\n    ],\n    [\n      1513612800000,\n      40.7376,\n      40.8457,\n      40.1875,\n      40.4134,\n      1984000,\n      81650535.78,\n      -0.1868,\n      -0.46,\n      0.97\n    ],\n    [\n      1513699200000,\n      40.4822,\n      41.2386,\n      40.4527,\n      40.6001,\n      2040296,\n      84618530.67,\n      0.1859,\n      0.46,\n      0.99\n    ],\n    [\n      1513785600000,\n      40.3741,\n      40.4134,\n      39.323,\n      39.9812,\n      3113693,\n      126268497.88,\n      -0.6171,\n      -1.52,\n      1.52\n    ],\n    [\n      1513872000000,\n      40.0303,\n      40.3643,\n      39.8142,\n      39.9714,\n      2066814,\n      84296917.95,\n      -0.008,\n      -0.02,\n      1.01\n    ],\n    [\n      1514131200000,\n      40.0794,\n      40.1679,\n      37.211,\n      37.6236,\n      6585955,\n      255644861.24,\n      -2.3462,\n      -5.87,\n      3.21\n    ],\n    [\n      1514217600000,\n      37.7316,\n      38.1049,\n      37.3289,\n      38.0755,\n      3169970,\n      122013523.42,\n      0.4515,\n      1.2,\n      1.54\n    ],\n    [\n      1514304000000,\n      37.9281,\n      38.8515,\n      37.8102,\n      38.1049,\n      3708891,\n      144434192.16,\n      0.0305,\n      0.08,\n      1.81\n    ],\n    [\n      1514390400000,\n      38.2425,\n      38.2425,\n      37.3387,\n      37.5941,\n      2927481,\n      112490609.59,\n      -0.5106,\n      -1.34,\n      1.43\n    ],\n    [\n      1514476800000,\n      37.9183,\n      39.0578,\n      37.8299,\n      38.8908,\n      4202788,\n      164686969.19,\n      1.297,\n      3.45,\n      2.05\n    ],\n    [\n      1514822400000,\n      39.2052,\n      39.4704,\n      38.5273,\n      39.0775,\n      3197416,\n      126769960.82,\n      0.1867,\n      0.48,\n      1.56\n    ],\n    [\n      1514908800000,\n      39.1953,\n      39.8731,\n      39.0087,\n      39.8437,\n      3913277,\n      157416236.13,\n      0.7659,\n      1.96,\n      1.91\n    ],\n    [\n      1514995200000,\n      40.8751,\n      42.4174,\n      40.8751,\n      41.8968,\n      8300770,\n      352188889.12,\n      2.052,\n      5.15,\n      4.04\n    ],\n    [\n      1515081600000,\n      41.2582,\n      41.7003,\n      40.7769,\n      41.327,\n      4260338,\n      178822929.64,\n      -0.5698,\n      -1.36,\n      2.08\n    ],\n    [\n      1515340800000,\n      41.3368,\n      41.6315,\n      40.5903,\n      40.7573,\n      3569519,\n      148331795.33,\n      -0.5703,\n      -1.38,\n      1.74\n    ],\n    [\n      1515427200000,\n      40.7671,\n      40.8653,\n      39.883,\n      40.0794,\n      3138719,\n      128433609.37,\n      -0.6765,\n      -1.66,\n      1.53\n    ],\n    [\n      1515513600000,\n      40.0794,\n      40.0893,\n      38.5666,\n      39.0283,\n      3864030,\n      154433748.31,\n      -1.0501,\n      -2.62,\n      1.88\n    ],\n    [\n      1515600000000,\n      39.0185,\n      39.6177,\n      38.2916,\n      39.5392,\n      3218477,\n      127628627.78,\n      0.5113,\n      1.31,\n      1.57\n    ],\n    [\n      1515686400000,\n      39.3034,\n      39.49,\n      38.8515,\n      38.9301,\n      1957690,\n      77988684.45,\n      -0.6089,\n      -1.54,\n      0.95\n    ],\n    [\n      1515945600000,\n      38.9006,\n      38.9006,\n      37.5647,\n      37.7808,\n      3085317,\n      119879209.93,\n      -1.1484,\n      -2.95,\n      1.49\n    ],\n    [\n      1516032000000,\n      37.3584,\n      37.8102,\n      34.8829,\n      35.9045,\n      9331699,\n      348068311.98,\n      -1.8778,\n      -4.97,\n      4.51\n    ],\n    [\n      1516118400000,\n      36.0518,\n      36.9458,\n      35.7571,\n      36.8475,\n      4757332,\n      176297544.97,\n      0.9443,\n      2.63,\n      2.29\n    ],\n    [\n      1516204800000,\n      36.8475,\n      36.8475,\n      36.3269,\n      36.5528,\n      2482269,\n      92277619.95,\n      -0.2948,\n      -0.8,\n      1.18\n    ],\n    [\n      1516291200000,\n      36.6314,\n      36.7297,\n      35.7571,\n      35.9536,\n      3698738,\n      135552969.22,\n      -0.5995,\n      -1.64,\n      1.78\n    ],\n    [\n      1516550400000,\n      36.101,\n      36.1206,\n      34.9909,\n      35.934,\n      4141616,\n      150182330.42,\n      -0.018,\n      -0.05,\n      2\n    ],\n    [\n      1516636800000,\n      36.101,\n      36.8475,\n      36.101,\n      36.2483,\n      3488377,\n      129575520.15,\n      0.3126,\n      0.87,\n      1.67\n    ],\n    [\n      1516723200000,\n      36.2778,\n      36.6118,\n      35.8554,\n      36.4939,\n      3453787,\n      127530201.2,\n      0.2465,\n      0.68,\n      1.66\n    ],\n    [\n      1516809600000,\n      36.5135,\n      37.1128,\n      36.3957,\n      36.435,\n      4764902,\n      178153342.09,\n      -0.0584,\n      -0.16,\n      2.29\n    ],\n    [\n      1516896000000,\n      36.1992,\n      36.3367,\n      35.9438,\n      36.1304,\n      2734708,\n      100537664.4,\n      -0.3061,\n      -0.84,\n      1.31\n    ],\n    [\n      1517155200000,\n      36.2188,\n      36.2287,\n      35.1285,\n      35.1481,\n      3831350,\n      138372268.6,\n      -0.9828,\n      -2.72,\n      1.83\n    ],\n    [\n      1517241600000,\n      35.0793,\n      35.541,\n      35.0793,\n      35.433,\n      2241289,\n      80593953.79,\n      0.2847,\n      0.81,\n      1.08\n    ],\n    [\n      1517328000000,\n      35.2758,\n      35.3151,\n      33.5862,\n      33.8514,\n      4552447,\n      158072895.75,\n      -1.5803,\n      -4.46,\n      2.2\n    ],\n    [\n      1517414400000,\n      33.8612,\n      34.1461,\n      32.427,\n      32.5154,\n      3515540,\n      118929725.65,\n      -1.3372,\n      -3.95,\n      1.68\n    ],\n    [\n      1517500800000,\n      32.3288,\n      32.9575,\n      31.4152,\n      32.928,\n      3089322,\n      101995933.53,\n      0.4129,\n      1.27,\n      1.49\n    ],\n    [\n      1517760000000,\n      32.2207,\n      33.6353,\n      31.759,\n      32.6922,\n      2641488,\n      88767735.92,\n      -0.2371,\n      -0.72,\n      1.28\n    ],\n    [\n      1517846400000,\n      31.985,\n      32.8985,\n      30.9535,\n      31.091,\n      2890221,\n      94203126.44,\n      -1.602,\n      -4.9,\n      1.38\n    ],\n    [\n      1517932800000,\n      31.7197,\n      32.0734,\n      30.482,\n      31.3563,\n      3358651,\n      107136278.89,\n      0.2643,\n      0.85,\n      1.62\n    ],\n    [\n      1518019200000,\n      31.3366,\n      32.2698,\n      31.0321,\n      32.1913,\n      2536310,\n      82549560.27,\n      0.8341,\n      2.66,\n      1.21\n    ],\n    [\n      1518105600000,\n      31.4349,\n      32.1421,\n      31.1205,\n      31.6019,\n      2260758,\n      72832428.15,\n      -0.5891,\n      -1.83,\n      1.09\n    ],\n    [\n      1518364800000,\n      31.6019,\n      33.6255,\n      31.6019,\n      33.3799,\n      3456564,\n      115767929.72,\n      1.7791,\n      5.63,\n      1.66\n    ],\n    [\n      1518451200000,\n      33.4978,\n      33.6549,\n      32.9378,\n      33.0164,\n      2733570,\n      92559682.79,\n      -0.3638,\n      -1.09,\n      1.31\n    ],\n    [\n      1518537600000,\n      32.9477,\n      33.2915,\n      32.7708,\n      32.9673,\n      1507350,\n      50601438.95,\n      -0.0495,\n      -0.15,\n      0.71\n    ],\n    [\n      1519228800000,\n      33.262,\n      34.097,\n      33.262,\n      33.596,\n      2529691,\n      86666902.21,\n      0.6297,\n      1.91,\n      1.22\n    ],\n    [\n      1519315200000,\n      33.3995,\n      33.5272,\n      32.9575,\n      33.3406,\n      2103762,\n      71153440.44,\n      -0.2553,\n      -0.76,\n      1.01\n    ],\n    [\n      1519574400000,\n      33.429,\n      35.7768,\n      33.2817,\n      35.1874,\n      6779366,\n      239182271.3,\n      1.8471,\n      5.54,\n      3.27\n    ],\n    [\n      1519660800000,\n      35.1972,\n      35.1972,\n      34.4408,\n      34.4998,\n      4755204,\n      168392485.17,\n      -0.6861,\n      -1.95,\n      2.29\n    ],\n    [\n      1519747200000,\n      34.2149,\n      35.0793,\n      33.9693,\n      34.6668,\n      3407488,\n      119904469.13,\n      0.1656,\n      0.48,\n      1.65\n    ],\n    [\n      1519833600000,\n      34.372,\n      35.0302,\n      34.1854,\n      34.9713,\n      3123691,\n      110340424.64,\n      0.3051,\n      0.88,\n      1.48\n    ],\n    [\n      1519920000000,\n      34.765,\n      35.3446,\n      34.5783,\n      34.8337,\n      3092927,\n      110139264.23,\n      -0.1364,\n      -0.39,\n      1.48\n    ],\n    [\n      1520179200000,\n      34.8239,\n      35.0106,\n      34.4899,\n      34.6373,\n      2654773,\n      93842212.6,\n      -0.1951,\n      -0.56,\n      1.27\n    ],\n    [\n      1520265600000,\n      34.5882,\n      35.7768,\n      34.5587,\n      35.7375,\n      5002129,\n      180044347.93,\n      1.1014,\n      3.18,\n      2.39\n    ],\n    [\n      1520352000000,\n      35.7571,\n      36.0224,\n      35.0597,\n      35.0695,\n      3290585,\n      118550371.04,\n      -0.6683,\n      -1.87,\n      1.59\n    ],\n    [\n      1520438400000,\n      34.9713,\n      35.4624,\n      34.8141,\n      35.099,\n      2027898,\n      72306939.3,\n      0.0281,\n      0.08,\n      0.97\n    ],\n    [\n      1520524800000,\n      35.099,\n      35.8357,\n      34.9909,\n      35.7866,\n      3583661,\n      129640498.3,\n      0.6879,\n      1.96,\n      1.71\n    ],\n    [\n      1520784000000,\n      35.8554,\n      36.9949,\n      35.8554,\n      36.9556,\n      7481624,\n      278259620.89,\n      1.1702,\n      3.27,\n      3.6\n    ],\n    [\n      1520870400000,\n      36.9851,\n      37.0931,\n      36.209,\n      36.3269,\n      4139898,\n      153900354.41,\n      -0.6282,\n      -1.7,\n      2\n    ],\n    [\n      1520956800000,\n      36.3367,\n      36.7297,\n      36.1599,\n      36.209,\n      3059391,\n      113508057.79,\n      -0.1162,\n      -0.32,\n      1.48\n    ],\n    [\n      1521043200000,\n      36.0715,\n      36.1697,\n      34.7552,\n      35.3642,\n      4378559,\n      157629454.44,\n      -0.8436,\n      -2.33,\n      2.09\n    ],\n    [\n      1521129600000,\n      35.266,\n      35.6098,\n      34.932,\n      35.0302,\n      2458854,\n      88235205.54,\n      -0.3324,\n      -0.94,\n      1.18\n    ],\n    [\n      1521388800000,\n      35.0204,\n      35.2169,\n      34.4408,\n      34.5096,\n      3579926,\n      127176435.55,\n      -0.522,\n      -1.49,\n      1.71\n    ],\n    [\n      1521475200000,\n      34.3917,\n      34.5096,\n      33.596,\n      34.5096,\n      3390867,\n      117761111.26,\n      0,\n      0,\n      1.64\n    ],\n    [\n      1521561600000,\n      34.3819,\n      35.0892,\n      34.0184,\n      34.0872,\n      2608399,\n      92006144.03,\n      -0.421,\n      -1.22,\n      1.25\n    ],\n    [\n      1521648000000,\n      33.9889,\n      34.4605,\n      33.596,\n      33.6844,\n      2045832,\n      71007854.13,\n      -0.4022,\n      -1.18,\n      0.98\n    ],\n    [\n      1521734400000,\n      32.6137,\n      32.6726,\n      31.1402,\n      31.317,\n      4778621,\n      155091789.69,\n      -2.3681,\n      -7.03,\n      2.29\n    ],\n    [\n      1521993600000,\n      30.8356,\n      31.7983,\n      28.4977,\n      31.759,\n      3631183,\n      112499140.56,\n      0.4416,\n      1.41,\n      1.75\n    ],\n    [\n      1522080000000,\n      31.926,\n      32.8298,\n      31.926,\n      32.6431,\n      3700378,\n      122166458.36,\n      0.8829,\n      2.78,\n      1.78\n    ],\n    [\n      1522166400000,\n      32.1225,\n      32.3681,\n      31.4545,\n      32.1225,\n      2635068,\n      85996996.09,\n      -0.519,\n      -1.59,\n      1.27\n    ],\n    [\n      1522252800000,\n      32.319,\n      32.7119,\n      32.1127,\n      32.5645,\n      2096026,\n      69184515.19,\n      0.4433,\n      1.38,\n      1.01\n    ],\n    [\n      1522339200000,\n      32.6922,\n      34.1854,\n      32.594,\n      33.5567,\n      4508958,\n      153023256.2,\n      0.9932,\n      3.05,\n      2.18\n    ],\n    [\n      1522598400000,\n      33.5567,\n      34.1166,\n      33.1048,\n      33.4585,\n      3365186,\n      114764850.53,\n      -0.0973,\n      -0.29,\n      1.63\n    ],\n    [\n      1522684800000,\n      32.9771,\n      33.1441,\n      32.6137,\n      32.9182,\n      2266298,\n      75767382.84,\n      -0.5387,\n      -1.61,\n      1.09\n    ],\n    [\n      1522771200000,\n      32.9182,\n      33.2522,\n      32.4074,\n      32.4368,\n      2442598,\n      81879956.02,\n      -0.4806,\n      -1.46,\n      1.17\n    ],\n    [\n      1523203200000,\n      32.2207,\n      32.2502,\n      31.4349,\n      32.0144,\n      2533791,\n      82363685.32,\n      -0.4217,\n      -1.3,\n      1.22\n    ],\n    [\n      1523289600000,\n      31.8474,\n      32.5645,\n      31.7394,\n      32.427,\n      2625389,\n      85949727.72,\n      0.413,\n      1.29,\n      1.26\n    ],\n    [\n      1523376000000,\n      32.6333,\n      33.0361,\n      32.4368,\n      32.7708,\n      2587877,\n      86412412.58,\n      0.3437,\n      1.06,\n      1.25\n    ],\n    [\n      1523462400000,\n      32.4565,\n      33.0557,\n      32.427,\n      32.6824,\n      2197140,\n      73305067.79,\n      -0.0885,\n      -0.27,\n      1.06\n    ],\n    [\n      1523548800000,\n      32.9084,\n      33.095,\n      32.4761,\n      32.7119,\n      1572264,\n      52444000.43,\n      0.0294,\n      0.09,\n      0.76\n    ],\n    [\n      1523808000000,\n      32.6726,\n      32.7021,\n      31.7001,\n      31.985,\n      2591547,\n      84656280.67,\n      -0.7262,\n      -2.22,\n      1.23\n    ],\n    [\n      1523894400000,\n      31.8867,\n      32.5351,\n      31.3366,\n      31.4349,\n      2169600,\n      70579737.84,\n      -0.5501,\n      -1.72,\n      1.04\n    ],\n    [\n      1523980800000,\n      31.7885,\n      31.9064,\n      30.7767,\n      31.2973,\n      2865066,\n      91234608.21,\n      -0.1383,\n      -0.44,\n      1.39\n    ],\n    [\n      1524067200000,\n      31.4054,\n      32.0243,\n      31.3661,\n      31.9162,\n      2337740,\n      75714463.43,\n      0.6197,\n      1.98,\n      1.11\n    ],\n    [\n      1524153600000,\n      31.9555,\n      32.0243,\n      30.9437,\n      30.9633,\n      2447392,\n      78226912,\n      -0.9543,\n      -2.99,\n      1.18\n    ],\n    [\n      1524412800000,\n      30.5508,\n      31.4054,\n      29.6666,\n      29.9122,\n      3573322,\n      110164328.6,\n      -1.0496,\n      -3.39,\n      1.71\n    ],\n    [\n      1524499200000,\n      29.9908,\n      30.5999,\n      29.8631,\n      30.5999,\n      2626195,\n      81242233.02,\n      0.688,\n      2.3,\n      1.26\n    ],\n    [\n      1524585600000,\n      30.256,\n      31.3366,\n      30.2069,\n      31.1794,\n      2598049,\n      82083506.81,\n      0.5784,\n      1.89,\n      1.26\n    ],\n    [\n      1524672000000,\n      31.1696,\n      31.1696,\n      30.4525,\n      30.4722,\n      1889982,\n      59282887.49,\n      -0.7078,\n      -2.27,\n      0.91\n    ],\n    [\n      1524758400000,\n      30.6293,\n      30.9437,\n      30.2462,\n      30.7963,\n      1831514,\n      57218483.26,\n      0.323,\n      1.06,\n      0.88\n    ],\n    [\n      1525190400000,\n      30.816,\n      31.2187,\n      30.0006,\n      30.4722,\n      2283710,\n      71044766.4,\n      -0.3234,\n      -1.05,\n      1.1\n    ],\n    [\n      1525276800000,\n      30.5508,\n      31.484,\n      29.9613,\n      31.484,\n      2949148,\n      92543673.04,\n      1.0117,\n      3.32,\n      1.39\n    ],\n    [\n      1525363200000,\n      31.4741,\n      31.4741,\n      30.9437,\n      31.1303,\n      2115663,\n      67216082.51,\n      -0.3526,\n      -1.12,\n      1.02\n    ],\n    [\n      1525622400000,\n      31.1893,\n      32.7414,\n      31.1893,\n      32.6235,\n      5195476,\n      170624638.27,\n      1.4942,\n      4.8,\n      2.46\n    ],\n    [\n      1525708800000,\n      32.4172,\n      32.653,\n      32.0636,\n      32.653,\n      4080390,\n      134355232.81,\n      0.0294,\n      0.09,\n      1.91\n    ],\n    [\n      1525795200000,\n      32.5646,\n      33.0496,\n      32.4161,\n      32.5151,\n      3969235,\n      131056757.01,\n      -0.1371,\n      -0.42,\n      1.91\n    ],\n    [\n      1525881600000,\n      32.5943,\n      32.9407,\n      32.0895,\n      32.525,\n      2893597,\n      95063656.48,\n      0.0098,\n      0.03,\n      1.38\n    ],\n    [\n      1525968000000,\n      32.5349,\n      35.336,\n      32.4458,\n      34.4254,\n      8881631,\n      301501841.96,\n      1.8995,\n      5.84,\n      4.23\n    ],\n    [\n      1526227200000,\n      33.8513,\n      35.0094,\n      33.5544,\n      33.9899,\n      7519365,\n      259812972.36,\n      -0.4372,\n      -1.27,\n      3.65\n    ],\n    [\n      1526313600000,\n      34.1087,\n      34.3759,\n      33.6534,\n      34.2473,\n      4341804,\n      149308294.65,\n      0.2583,\n      0.76,\n      2.08\n    ],\n    [\n      1526400000000,\n      34.0196,\n      35.1381,\n      33.8513,\n      34.663,\n      6901979,\n      241624484.4,\n      0.4144,\n      1.21,\n      3.32\n    ],\n    [\n      1526486400000,\n      34.6729,\n      34.9797,\n      33.7622,\n      33.881,\n      4948101,\n      171819871.47,\n      -0.7834,\n      -2.26,\n      2.38\n    ],\n    [\n      1526572800000,\n      33.6534,\n      33.8117,\n      32.5646,\n      33.1585,\n      6638589,\n      222561863.5,\n      -0.7216,\n      -2.13,\n      3.21\n    ],\n    [\n      1526832000000,\n      33.6633,\n      33.9107,\n      33.2574,\n      33.5346,\n      4902959,\n      166791926.1,\n      0.3747,\n      1.13,\n      2.36\n    ],\n    [\n      1526918400000,\n      33.2871,\n      33.9701,\n      33.2673,\n      33.9701,\n      3885408,\n      132145984.9,\n      0.4359,\n      1.3,\n      1.84\n    ],\n    [\n      1527004800000,\n      34.0394,\n      34.0394,\n      32.8714,\n      32.8912,\n      4062814,\n      136757504.88,\n      -1.0803,\n      -3.18,\n      1.96\n    ],\n    [\n      1527091200000,\n      32.8318,\n      33.9305,\n      32.7922,\n      33.8315,\n      5781254,\n      196140489.39,\n      0.9407,\n      2.86,\n      2.73\n    ],\n    [\n      1527177600000,\n      33.7524,\n      33.782,\n      32.4755,\n      32.723,\n      5356395,\n      178337404.22,\n      -1.1097,\n      -3.28,\n      2.59\n    ],\n    [\n      1527436800000,\n      32.723,\n      32.812,\n      32.0796,\n      32.4953,\n      2733375,\n      89691625.85,\n      -0.2291,\n      -0.7,\n      1.31\n    ],\n    [\n      1527523200000,\n      32.4953,\n      32.723,\n      31.5154,\n      31.6342,\n      3455528,\n      112140591.92,\n      -0.8611,\n      -2.65,\n      1.67\n    ],\n    [\n      1527609600000,\n      30.9809,\n      31.4758,\n      29.9119,\n      30.3177,\n      4005741,\n      124593670.85,\n      -1.316,\n      -4.16,\n      1.93\n    ],\n    [\n      1527696000000,\n      30.684,\n      31.3372,\n      30.684,\n      30.9908,\n      2466636,\n      77233211.22,\n      0.6731,\n      2.22,\n      1.19\n    ],\n    [\n      1527782400000,\n      30.9314,\n      31.4758,\n      30.6939,\n      31.0106,\n      2307196,\n      72482292.2,\n      0.0186,\n      0.06,\n      1.11\n    ],\n    [\n      1528041600000,\n      31.2976,\n      31.4659,\n      30.5949,\n      30.6939,\n      2391576,\n      74776613.08,\n      -0.3163,\n      -1.02,\n      1.15\n    ],\n    [\n      1528128000000,\n      30.7532,\n      31.7628,\n      30.7532,\n      31.7233,\n      3167714,\n      100483224.7,\n      1.0283,\n      3.35,\n      1.51\n    ],\n    [\n      1528214400000,\n      31.7727,\n      31.8222,\n      31.3768,\n      31.6441,\n      2458045,\n      78437864.79,\n      -0.0793,\n      -0.25,\n      1.17\n    ],\n    [\n      1528300800000,\n      31.8024,\n      32.2973,\n      31.6045,\n      31.6738,\n      2564001,\n      82648448.8,\n      0.0285,\n      0.09,\n      1.24\n    ],\n    [\n      1528387200000,\n      31.5748,\n      31.5748,\n      30.872,\n      31.1492,\n      2479090,\n      78017156.72,\n      -0.5258,\n      -1.66,\n      1.17\n    ],\n    [\n      1528646400000,\n      31.07,\n      31.5352,\n      30.8423,\n      30.9413,\n      1817772,\n      57155063.14,\n      -0.2087,\n      -0.67,\n      0.86\n    ],\n    [\n      1528732800000,\n      31.0106,\n      31.3273,\n      30.2583,\n      31.2976,\n      2226632,\n      69661482.79,\n      0.3558,\n      1.15,\n      1.07\n    ],\n    [\n      1528819200000,\n      31.2877,\n      31.2877,\n      30.486,\n      30.5157,\n      2023779,\n      63153704.25,\n      -0.7825,\n      -2.5,\n      0.97\n    ],\n    [\n      1528905600000,\n      30.5652,\n      30.9314,\n      30.387,\n      30.585,\n      1382294,\n      42894072.55,\n      0.0702,\n      0.23,\n      0.65\n    ],\n    [\n      1528992000000,\n      30.6048,\n      30.8621,\n      29.7931,\n      29.8525,\n      2328631,\n      70951946.68,\n      -0.7309,\n      -2.39,\n      1.11\n    ],\n    [\n      1529337600000,\n      29.1795,\n      29.5655,\n      26.8633,\n      27.0514,\n      4283385,\n      121404386.45,\n      -2.8001,\n      -9.38,\n      2.05\n    ],\n    [\n      1529424000000,\n      27.0217,\n      27.6749,\n      26.7247,\n      27.477,\n      2513899,\n      69394267.05,\n      0.4247,\n      1.57,\n      1.21\n    ],\n    [\n      1529510400000,\n      27.4671,\n      27.5958,\n      26.0418,\n      26.0517,\n      3263888,\n      88382675.95,\n      -1.4261,\n      -5.19,\n      1.56\n    ],\n    [\n      1529596800000,\n      26.022,\n      27.1207,\n      25.7547,\n      26.8336,\n      2440661,\n      65576571.34,\n      0.7816,\n      3,\n      1.18\n    ],\n    [\n      1529856000000,\n      27.3681,\n      27.5463,\n      26.8237,\n      26.8534,\n      2110255,\n      57969581.41,\n      0.0188,\n      0.07,\n      1.01\n    ],\n    [\n      1529856000000,\n      27.3681,\n      27.5463,\n      26.8237,\n      26.8534,\n      2110255,\n      57969581.41,\n      0.0188,\n      0.07,\n      1.01\n    ],\n    [\n      1529942400000,\n      26.6258,\n      27.378,\n      26.2892,\n      27.2889,\n      2026339,\n      55390595.92,\n      0.435,\n      1.62,\n      0.98\n    ],\n    [\n      1530028800000,\n      27.2196,\n      27.5364,\n      26.9821,\n      27.1701,\n      1508487,\n      41471384.83,\n      -0.1201,\n      -0.44,\n      0.73\n    ],\n    [\n      1530115200000,\n      27.1405,\n      27.5067,\n      26.9227,\n      26.9326,\n      1609931,\n      44345991.58,\n      -0.2364,\n      -0.87,\n      0.78\n    ],\n    [\n      1530201600000,\n      26.9425,\n      27.962,\n      26.9425,\n      27.9323,\n      2327309,\n      64952713.7,\n      0.9992,\n      3.71,\n      1.1\n    ],\n    [\n      1530460800000,\n      27.8135,\n      28.0907,\n      26.9029,\n      27.2691,\n      2087959,\n      58099131.03,\n      -0.662,\n      -2.37,\n      1.01\n    ],\n    [\n      1530547200000,\n      27.2691,\n      27.8234,\n      26.6554,\n      27.7244,\n      2375814,\n      65739760,\n      0.4554,\n      1.67,\n      1.14\n    ],\n    [\n      1530633600000,\n      27.5661,\n      27.5661,\n      26.9722,\n      27.1207,\n      1880679,\n      51680472.63,\n      -0.6044,\n      -2.18,\n      0.91\n    ],\n    [\n      1530720000000,\n      27.2592,\n      27.3087,\n      26.2991,\n      26.3288,\n      1658936,\n      44917512.39,\n      -0.7919,\n      -2.92,\n      0.8\n    ],\n    [\n      1530806400000,\n      26.3288,\n      26.9128,\n      25.9428,\n      26.5763,\n      1982000,\n      53163343.1,\n      0.2475,\n      0.94,\n      0.96\n    ],\n    [\n      1531065600000,\n      26.4278,\n      27.3186,\n      26.4278,\n      27.3186,\n      2114041,\n      57804180.65,\n      0.7415,\n      2.79,\n      1.01\n    ],\n    [\n      1531152000000,\n      27.7046,\n      27.7046,\n      27.1306,\n      27.4968,\n      1807591,\n      50040988.51,\n      0.1776,\n      0.65,\n      0.87\n    ],\n    [\n      1531238400000,\n      27.1701,\n      27.2889,\n      26.5268,\n      26.8435,\n      2174217,\n      58924751.28,\n      -0.6545,\n      -2.38,\n      1.05\n    ],\n    [\n      1531324800000,\n      26.7247,\n      28.0808,\n      26.6258,\n      27.8729,\n      3824363,\n      106646287.54,\n      1.0282,\n      3.83,\n      1.85\n    ],\n    [\n      1531411200000,\n      27.9125,\n      27.9224,\n      27.5661,\n      27.7343,\n      2406135,\n      67311633.81,\n      -0.1394,\n      -0.5,\n      1.16\n    ],\n    [\n      1531670400000,\n      27.7244,\n      27.9026,\n      27.4869,\n      27.7739,\n      1544786,\n      43146001.61,\n      0.0388,\n      0.14,\n      0.72\n    ],\n    [\n      1531756800000,\n      27.7838,\n      27.7937,\n      27.3186,\n      27.665,\n      1731511,\n      48110085.25,\n      -0.1083,\n      -0.39,\n      0.83\n    ],\n    [\n      1531843200000,\n      27.9917,\n      30.1297,\n      27.7937,\n      29.3279,\n      8493445,\n      249121710.68,\n      1.6627,\n      6.01,\n      4.08\n    ],\n    [\n      1531929600000,\n      29.031,\n      29.2289,\n      28.3876,\n      28.734,\n      4030046,\n      117066672.52,\n      -0.5924,\n      -2.02,\n      1.94\n    ],\n    [\n      1532016000000,\n      28.4668,\n      28.9419,\n      28.4668,\n      28.8429,\n      2615250,\n      76011437.38,\n      0.1092,\n      0.38,\n      1.24\n    ],\n    [\n      1532275200000,\n      28.6351,\n      29.0706,\n      28.4767,\n      29.031,\n      2821783,\n      82381279.8,\n      0.1875,\n      0.65,\n      1.35\n    ],\n    [\n      1532361600000,\n      28.8825,\n      29.3477,\n      28.7439,\n      29.2388,\n      3189592,\n      93816400.13,\n      0.209,\n      0.72,\n      1.53\n    ],\n    [\n      1532448000000,\n      29.4071,\n      29.803,\n      28.9815,\n      29.031,\n      3633205,\n      107845578.84,\n      -0.2076,\n      -0.71,\n      1.75\n    ],\n    [\n      1532534400000,\n      29.1003,\n      29.1102,\n      28.3381,\n      28.4866,\n      2783449,\n      80472101.35,\n      -0.5458,\n      -1.88,\n      1.34\n    ],\n    [\n      1532620800000,\n      28.5856,\n      28.8231,\n      28.3678,\n      28.4173,\n      1485540,\n      42858290.33,\n      -0.0684,\n      -0.24,\n      0.71\n    ],\n    [\n      1532880000000,\n      28.4173,\n      28.6648,\n      27.962,\n      28.1006,\n      1587390,\n      45288557.1,\n      -0.3154,\n      -1.11,\n      0.76\n    ],\n    [\n      1532966400000,\n      27.9818,\n      28.2886,\n      27.9125,\n      28.1699,\n      1305159,\n      37069429.25,\n      0.0702,\n      0.25,\n      0.62\n    ],\n    [\n      1533052800000,\n      28.4965,\n      28.5856,\n      27.8432,\n      27.9323,\n      1894484,\n      54059729.39,\n      -0.2366,\n      -0.84,\n      0.91\n    ],\n    [\n      1533139200000,\n      27.9422,\n      28.0709,\n      26.4872,\n      27.0118,\n      2548552,\n      69682016.94,\n      -0.9218,\n      -3.3,\n      1.23\n    ],\n    [\n      1533225600000,\n      27.0514,\n      27.3978,\n      26.7247,\n      26.7247,\n      1369354,\n      37343560.86,\n      -0.2863,\n      -1.06,\n      0.64\n    ],\n    [\n      1533484800000,\n      26.6653,\n      27.1009,\n      26.309,\n      26.6258,\n      1253735,\n      33877084.27,\n      -0.0989,\n      -0.37,\n      0.61\n    ],\n    [\n      1533571200000,\n      26.6258,\n      27.3879,\n      26.5268,\n      27.3384,\n      1460917,\n      39876464.42,\n      0.7135,\n      2.68,\n      0.7\n    ],\n    [\n      1533657600000,\n      27.3186,\n      27.3186,\n      26.8732,\n      26.9227,\n      1227668,\n      33569792.88,\n      -0.4155,\n      -1.52,\n      0.59\n    ],\n    [\n      1533744000000,\n      26.7247,\n      27.5661,\n      26.7247,\n      27.3879,\n      1749666,\n      48373032.06,\n      0.4658,\n      1.73,\n      0.84\n    ],\n    [\n      1533830400000,\n      27.5166,\n      27.5166,\n      27.2196,\n      27.4374,\n      1154806,\n      31923821.14,\n      0.0493,\n      0.18,\n      0.55\n    ],\n    [\n      1534089600000,\n      27.0514,\n      27.4176,\n      26.8237,\n      27.3978,\n      1373168,\n      37614495.71,\n      -0.0384,\n      -0.14,\n      0.66\n    ],\n    [\n      1534176000000,\n      27.3087,\n      27.3681,\n      27.0514,\n      27.1899,\n      1069691,\n      29353480.88,\n      -0.2082,\n      -0.76,\n      0.51\n    ],\n    [\n      1534262400000,\n      27.3087,\n      27.3087,\n      26.5268,\n      26.5565,\n      1450709,\n      39327757.35,\n      -0.6335,\n      -2.33,\n      0.7\n    ],\n    [\n      1534348800000,\n      26.3387,\n      26.8039,\n      25.8834,\n      26.4971,\n      1027653,\n      27466172.63,\n      -0.0584,\n      -0.22,\n      0.5\n    ],\n    [\n      1534435200000,\n      26.8435,\n      26.8633,\n      26.2991,\n      26.309,\n      1183601,\n      31797608.79,\n      -0.1881,\n      -0.71,\n      0.57\n    ],\n    [\n      1534694400000,\n      26.309,\n      26.6851,\n      26.1704,\n      26.6159,\n      1077703,\n      28783285.78,\n      0.3078,\n      1.17,\n      0.52\n    ],\n    [\n      1534780800000,\n      26.6456,\n      26.9326,\n      26.4377,\n      26.9128,\n      1289340,\n      34876474.58,\n      0.2981,\n      1.12,\n      0.62\n    ],\n    [\n      1534867200000,\n      26.8237,\n      26.9029,\n      26.3387,\n      26.3684,\n      1175974,\n      31561595.84,\n      -0.5436,\n      -2.02,\n      0.57\n    ],\n    [\n      1534953600000,\n      26.3783,\n      26.6851,\n      26.3486,\n      26.5664,\n      1133926,\n      30409296.42,\n      0.1978,\n      0.75,\n      0.54\n    ],\n    [\n      1535040000000,\n      26.606,\n      26.606,\n      26.1309,\n      26.1506,\n      1698014,\n      45106748.52,\n      -0.4144,\n      -1.56,\n      0.82\n    ],\n    [\n      1535299200000,\n      26.1309,\n      26.7346,\n      26.1309,\n      26.7049,\n      1633278,\n      43797460.12,\n      0.5544,\n      2.12,\n      0.79\n    ],\n    [\n      1535385600000,\n      26.8237,\n      26.9623,\n      26.6554,\n      26.794,\n      1381281,\n      37388029.74,\n      0.0881,\n      0.33,\n      0.66\n    ],\n    [\n      1535472000000,\n      26.8732,\n      26.8732,\n      26.408,\n      26.6357,\n      1056440,\n      28374503.23,\n      -0.1581,\n      -0.59,\n      0.51\n    ],\n    [\n      1535558400000,\n      26.507,\n      26.6258,\n      26.309,\n      26.3288,\n      987500,\n      26373425,\n      -0.3063,\n      -1.15,\n      0.46\n    ],\n    [\n      1535644800000,\n      26.1704,\n      26.5169,\n      26.121,\n      26.1605,\n      888800,\n      23558984,\n      -0.1685,\n      -0.64,\n      0.43\n    ],\n    [\n      1535904000000,\n      26.0814,\n      26.2298,\n      25.7547,\n      26.0319,\n      1251220,\n      32812744.09,\n      -0.1282,\n      -0.49,\n      0.6\n    ],\n    [\n      1535990400000,\n      26.1309,\n      26.5268,\n      25.9428,\n      26.5268,\n      1427933,\n      37910075.25,\n      0.4946,\n      1.9,\n      0.69\n    ],\n    [\n      1536076800000,\n      26.4377,\n      26.5565,\n      26.1012,\n      26.1309,\n      981426,\n      26145382.78,\n      -0.3952,\n      -1.49,\n      0.47\n    ],\n    [\n      1536163200000,\n      26.121,\n      26.408,\n      25.9725,\n      26.0022,\n      1116233,\n      29449792.51,\n      -0.128,\n      -0.49,\n      0.54\n    ],\n    [\n      1536249600000,\n      26.0121,\n      26.3882,\n      25.8141,\n      25.8933,\n      1217200,\n      32046213.68,\n      -0.1092,\n      -0.42,\n      0.59\n    ],\n    [\n      1536508800000,\n      26.1012,\n      26.1012,\n      24.5967,\n      24.6165,\n      2207968,\n      55766550.76,\n      -1.2765,\n      -4.93,\n      1.07\n    ],\n    [\n      1536595200000,\n      24.4878,\n      25.0223,\n      24.4482,\n      24.7352,\n      831860,\n      20783211.4,\n      0.1182,\n      0.48,\n      0.4\n    ],\n    [\n      1536681600000,\n      24.7352,\n      25.4182,\n      24.656,\n      25.0223,\n      1049763,\n      26541615.73,\n      0.2869,\n      1.16,\n      0.51\n    ],\n    [\n      1536768000000,\n      25.1213,\n      25.5271,\n      24.8441,\n      25.141,\n      946000,\n      24010891.47,\n      0.1176,\n      0.47,\n      0.45\n    ],\n    [\n      1536854400000,\n      25.2994,\n      25.4875,\n      24.9233,\n      24.9926,\n      1117596,\n      28527578.24,\n      -0.1483,\n      -0.59,\n      0.54\n    ],\n    [\n      1537113600000,\n      24.9431,\n      24.9431,\n      24.1215,\n      24.4977,\n      827562,\n      20461053.38,\n      -0.4949,\n      -1.98,\n      0.4\n    ],\n    [\n      1537200000000,\n      24.369,\n      24.8243,\n      24.3096,\n      24.8243,\n      864057,\n      21511931.24,\n      0.3258,\n      1.33,\n      0.41\n    ],\n    [\n      1537286400000,\n      24.6362,\n      25.1608,\n      24.6362,\n      24.953,\n      1156261,\n      29143732.24,\n      0.1291,\n      0.52,\n      0.56\n    ],\n    [\n      1537372800000,\n      24.7946,\n      25.1806,\n      24.7946,\n      25.0916,\n      1143000,\n      28920024,\n      0.1397,\n      0.56,\n      0.55\n    ],\n    [\n      1537459200000,\n      24.9431,\n      25.6162,\n      24.8045,\n      25.4875,\n      1915843,\n      48982248.3,\n      0.3964,\n      1.58,\n      0.91\n    ],\n    [\n      1537804800000,\n      25.24,\n      25.3786,\n      24.9926,\n      25.0421,\n      1329400,\n      33747430.9,\n      -0.446,\n      -1.75,\n      0.64\n    ],\n    [\n      1537891200000,\n      25.1707,\n      25.2895,\n      25.0025,\n      25.0619,\n      1203933,\n      30583335.27,\n      0.02,\n      0.08,\n      0.58\n    ],\n    [\n      1537977600000,\n      25.141,\n      25.141,\n      24.4878,\n      24.5076,\n      1269791,\n      31838600.69,\n      -0.5539,\n      -2.21,\n      0.61\n    ],\n    [\n      1538064000000,\n      24.6362,\n      24.8936,\n      24.5967,\n      24.8243,\n      1187409,\n      29712184.15,\n      0.3162,\n      1.29,\n      0.55\n    ],\n    [\n      1538928000000,\n      24.4977,\n      24.9134,\n      24.2898,\n      24.369,\n      1360315,\n      33682211.35,\n      -0.4543,\n      -1.83,\n      0.65\n    ],\n    [\n      1539014400000,\n      24.3195,\n      24.5571,\n      24.2403,\n      24.2997,\n      819951,\n      20199465.08,\n      -0.0682,\n      -0.28,\n      0.39\n    ],\n    [\n      1539100800000,\n      24.2799,\n      24.5175,\n      24.1512,\n      24.3096,\n      599915,\n      14743555.96,\n      0.0097,\n      0.04,\n      0.29\n    ],\n    [\n      1539187200000,\n      23.9533,\n      23.9533,\n      21.8747,\n      21.8846,\n      2548550,\n      58314005.92,\n      -2.4262,\n      -9.98,\n      1.23\n    ],\n    [\n      1539273600000,\n      21.7757,\n      21.7757,\n      19.7961,\n      20.7859,\n      3177830,\n      66503809.8,\n      -1.0986,\n      -5.02,\n      1.54\n    ],\n    [\n      1539532800000,\n      22.5181,\n      22.8645,\n      21.6767,\n      22.1221,\n      4251920,\n      95863531.9,\n      1.3365,\n      6.43,\n      2.05\n    ],\n    [\n      1539619200000,\n      21.6866,\n      22.5676,\n      21.6866,\n      21.9935,\n      2570271,\n      57643020.28,\n      -0.1283,\n      -0.58,\n      1.25\n    ],\n    [\n      1539705600000,\n      22.4785,\n      23.5574,\n      22.3894,\n      23.0625,\n      3840558,\n      89212842.19,\n      1.0689,\n      4.86,\n      1.86\n    ],\n    [\n      1539792000000,\n      23.4089,\n      23.4089,\n      22.5082,\n      22.716,\n      2670018,\n      61850045.44,\n      -0.3459,\n      -1.5,\n      1.29\n    ],\n    [\n      1539878400000,\n      22.3795,\n      23.1416,\n      22.3795,\n      23.0427,\n      2081905,\n      48128392.28,\n      0.3271,\n      1.44,\n      1\n    ],\n    [\n      1540137600000,\n      23.1119,\n      24.9431,\n      23.1119,\n      24.6956,\n      4060476,\n      99276403.7,\n      1.6522,\n      7.17,\n      1.95\n    ],\n    [\n      1540224000000,\n      24.7055,\n      24.7055,\n      23.9533,\n      24.2502,\n      2293584,\n      56360255.81,\n      -0.4445,\n      -1.8,\n      1.11\n    ],\n    [\n      1540310400000,\n      24.082,\n      24.5769,\n      23.7157,\n      23.9038,\n      2140940,\n      52030826.4,\n      -0.3468,\n      -1.43,\n      1.03\n    ],\n    [\n      1540396800000,\n      23.1119,\n      24.4482,\n      22.5775,\n      24.3195,\n      2021212,\n      48460404.08,\n      0.4159,\n      1.74,\n      0.98\n    ],\n    [\n      1540483200000,\n      24.5472,\n      24.5472,\n      23.8048,\n      23.9434,\n      1525214,\n      37156397.74,\n      -0.377,\n      -1.55,\n      0.74\n    ],\n    [\n      1540742400000,\n      24.0028,\n      24.0028,\n      23.3891,\n      23.5574,\n      1360239,\n      32571577.4,\n      -0.3855,\n      -1.61,\n      0.66\n    ],\n    [\n      1540828800000,\n      23.5574,\n      25.8141,\n      23.5574,\n      25.3984,\n      6504493,\n      164846460.63,\n      1.8421,\n      7.82,\n      3.13\n    ],\n    [\n      1540915200000,\n      25.2499,\n      27.3186,\n      25.2499,\n      26.9128,\n      7784537,\n      209013083.54,\n      1.5138,\n      5.96,\n      3.77\n    ],\n    [\n      1541001600000,\n      26.794,\n      27.863,\n      26.6752,\n      27.5661,\n      7858056,\n      218284772.91,\n      0.654,\n      2.43,\n      3.8\n    ],\n    [\n      1541088000000,\n      28.0214,\n      29.5556,\n      27.5661,\n      29.1102,\n      8186647,\n      233668668.23,\n      1.5437,\n      5.6,\n      3.89\n    ],\n    [\n      1541347200000,\n      28.9518,\n      29.1003,\n      28.2589,\n      28.5559,\n      5666473,\n      163966702.27,\n      -0.5531,\n      -1.9,\n      2.7\n    ],\n    [\n      1541433600000,\n      28.5064,\n      29.1003,\n      28.1501,\n      28.5955,\n      5266360,\n      152814511.56,\n      0.04,\n      0.14,\n      2.54\n    ],\n    [\n      1541520000000,\n      28.5064,\n      30.1792,\n      28.5064,\n      29.6249,\n      6230700,\n      185770602.88,\n      1.0294,\n      3.6,\n      3.02\n    ],\n    [\n      1541606400000,\n      29.6744,\n      29.7139,\n      28.6054,\n      29.0409,\n      3937174,\n      115567950.77,\n      -0.5836,\n      -1.97,\n      1.91\n    ],\n    [\n      1541692800000,\n      28.645,\n      29.3774,\n      28.6351,\n      28.9815,\n      2626951,\n      77145155.03,\n      -0.0581,\n      -0.2,\n      1.27\n    ],\n    [\n      1541952000000,\n      28.7637,\n      30.3474,\n      28.7637,\n      29.6942,\n      4381096,\n      131798186.12,\n      0.7129,\n      2.46,\n      2.1\n    ],\n    [\n      1542038400000,\n      29.4764,\n      30.288,\n      28.8924,\n      29.9911,\n      4552157,\n      136915299.2,\n      0.2969,\n      1,\n      2.2\n    ],\n    [\n      1542124800000,\n      29.8525,\n      30.0703,\n      29.0706,\n      29.3576,\n      3926564,\n      117108394.05,\n      -0.6328,\n      -2.11,\n      1.9\n    ],\n    [\n      1542211200000,\n      29.2685,\n      30.2682,\n      29.2685,\n      30.0406,\n      3821909,\n      115772411.07,\n      0.684,\n      2.33,\n      1.86\n    ],\n    [\n      1542297600000,\n      30.2484,\n      31.0601,\n      29.9218,\n      30.4662,\n      3611039,\n      111566535.51,\n      0.4266,\n      1.42,\n      1.75\n    ],\n    [\n      1542556800000,\n      29.704,\n      30.5355,\n      29.5853,\n      30.1693,\n      2679851,\n      81308521.56,\n      -0.2955,\n      -0.97,\n      1.29\n    ],\n    [\n      1542643200000,\n      29.9713,\n      30.0505,\n      28.9518,\n      29.1201,\n      2996414,\n      89236233.39,\n      -1.0499,\n      -3.48,\n      1.44\n    ],\n    [\n      1542729600000,\n      28.645,\n      30.7334,\n      28.5658,\n      30.6444,\n      5500714,\n      168041627.45,\n      1.523,\n      5.23,\n      2.65\n    ],\n    [\n      1542816000000,\n      30.7433,\n      30.8324,\n      29.5061,\n      29.6744,\n      3942612,\n      119188310.16,\n      -0.9715,\n      -3.17,\n      1.91\n    ],\n    [\n      1542902400000,\n      29.7535,\n      30.0307,\n      28.9023,\n      29.2982,\n      2984922,\n      89260669.33,\n      -0.3769,\n      -1.27,\n      1.44\n    ],\n    [\n      1543161600000,\n      29.2784,\n      29.4269,\n      27.4275,\n      28.0016,\n      4984815,\n      141146301.14,\n      -1.298,\n      -4.43,\n      2.4\n    ],\n    [\n      1543248000000,\n      28.0313,\n      28.645,\n      27.8333,\n      28.3579,\n      3406134,\n      97453347.66,\n      0.3556,\n      1.27,\n      1.65\n    ],\n    [\n      1543334400000,\n      28.4074,\n      29.4566,\n      28.2094,\n      29.1893,\n      3420001,\n      100104114.3,\n      0.8309,\n      2.93,\n      1.66\n    ],\n    [\n      1543420800000,\n      29.318,\n      29.8426,\n      28.4866,\n      28.4866,\n      2925365,\n      86127406.04,\n      -0.7035,\n      -2.41,\n      1.4\n    ],\n    [\n      1543507200000,\n      28.3876,\n      29.6546,\n      28.3282,\n      29.3081,\n      2959492,\n      87295582.11,\n      0.8204,\n      2.88,\n      1.43\n    ],\n    [\n      1543766400000,\n      30.288,\n      30.3573,\n      29.4962,\n      29.615,\n      4090879,\n      123400457.29,\n      0.3077,\n      1.05,\n      1.98\n    ],\n    [\n      1543852800000,\n      29.7733,\n      30.3078,\n      29.5457,\n      30.288,\n      3688877,\n      111712610.53,\n      0.6723,\n      2.27,\n      1.76\n    ],\n    [\n      1543939200000,\n      29.6942,\n      29.803,\n      29.219,\n      29.4962,\n      3400890,\n      101187681.7,\n      -0.7905,\n      -2.61,\n      1.65\n    ],\n    [\n      1544025600000,\n      29.1102,\n      29.2487,\n      28.4074,\n      28.6549,\n      2689787,\n      78425180.04,\n      -0.8406,\n      -2.85,\n      1.3\n    ],\n    [\n      1544112000000,\n      28.9518,\n      29.2784,\n      28.7043,\n      29.1003,\n      1948800,\n      57214942.44,\n      0.4442,\n      1.55,\n      0.94\n    ],\n    [\n      1544371200000,\n      29.0904,\n      29.0904,\n      28.2886,\n      28.546,\n      1901638,\n      54989613.16,\n      -0.5529,\n      -1.9,\n      0.92\n    ],\n    [\n      1544457600000,\n      28.7934,\n      29.1498,\n      28.6252,\n      29.0508,\n      1369648,\n      39979669.61,\n      0.5053,\n      1.77,\n      0.66\n    ],\n    [\n      1544544000000,\n      29.1498,\n      29.2883,\n      28.5856,\n      28.8231,\n      1503130,\n      43883342.85,\n      -0.2266,\n      -0.78,\n      0.73\n    ],\n    [\n      1544630400000,\n      28.8033,\n      29.1893,\n      28.1896,\n      28.9518,\n      2462528,\n      71662993.47,\n      0.1297,\n      0.45,\n      1.2\n    ],\n    [\n      1544716800000,\n      28.734,\n      29.1597,\n      28.2688,\n      28.3084,\n      2029507,\n      58806796.92,\n      -0.6427,\n      -2.22,\n      0.97\n    ],\n    [\n      1544976000000,\n      28.447,\n      28.447,\n      27.6057,\n      27.8036,\n      1951731,\n      54866583.58,\n      -0.5039,\n      -1.78,\n      0.94\n    ],\n    [\n      1545062400000,\n      27.7145,\n      28.2193,\n      27.3384,\n      28.0313,\n      2006190,\n      56345023.66,\n      0.228,\n      0.82,\n      0.97\n    ],\n    [\n      1545148800000,\n      28.0214,\n      28.061,\n      27.6057,\n      27.6453,\n      1838383,\n      51636909.94,\n      -0.3868,\n      -1.38,\n      0.89\n    ],\n    [\n      1545235200000,\n      27.6453,\n      27.9521,\n      27.477,\n      27.8729,\n      2103417,\n      58974549.23,\n      0.2267,\n      0.82,\n      1.02\n    ],\n    [\n      1545321600000,\n      27.7244,\n      28.0214,\n      27.3384,\n      27.764,\n      2017321,\n      56500097.75,\n      -0.1087,\n      -0.39,\n      0.98\n    ],\n    [\n      1545580800000,\n      27.7145,\n      29.3972,\n      27.6057,\n      29.3477,\n      3957856,\n      115737060.38,\n      1.5826,\n      5.7,\n      1.9\n    ],\n    [\n      1545667200000,\n      29.031,\n      30.0703,\n      28.7043,\n      29.5952,\n      3870451,\n      114779894.42,\n      0.2465,\n      0.84,\n      1.88\n    ],\n    [\n      1545753600000,\n      29.3972,\n      30.2781,\n      29.3477,\n      29.6447,\n      2672283,\n      80199412.19,\n      0.0503,\n      0.17,\n      1.29\n    ],\n    [\n      1545840000000,\n      30.0604,\n      30.1891,\n      29.1597,\n      29.3873,\n      1867305,\n      55686085.97,\n      -0.2579,\n      -0.87,\n      0.9\n    ],\n    [\n      1545926400000,\n      29.7535,\n      29.7931,\n      28.2985,\n      28.3876,\n      2437453,\n      70382141.54,\n      -0.9991,\n      -3.4,\n      1.18\n    ],\n    [\n      1546358400000,\n      28.2886,\n      29.2982,\n      28.2094,\n      28.8033,\n      2200970,\n      64420672,\n      0.4145,\n      1.46,\n      1.07\n    ],\n    [\n      1546444800000,\n      29.0013,\n      29.7832,\n      28.4965,\n      28.9023,\n      2545893,\n      75353473,\n      0.0979,\n      0.34,\n      1.23\n    ],\n    [\n      1546531200000,\n      28.2193,\n      29.1696,\n      28.2094,\n      29.0805,\n      2376739,\n      68869599,\n      0.1792,\n      0.62,\n      1.13\n    ],\n    [\n      1546790400000,\n      29.3477,\n      29.3477,\n      28.5064,\n      29.1498,\n      2552085,\n      74331304,\n      0.0698,\n      0.24,\n      1.23\n    ],\n    [\n      1546876800000,\n      28.9815,\n      29.0508,\n      28.5262,\n      28.932,\n      2110640,\n      61486418,\n      -0.2186,\n      -0.75,\n      1.02\n    ],\n    [\n      1546963200000,\n      28.7835,\n      30.4761,\n      28.5757,\n      29.9416,\n      5408244,\n      162837863,\n      1.0097,\n      3.49,\n      2.61\n    ],\n    [\n      1547049600000,\n      29.8426,\n      30.1,\n      29.5457,\n      30.0505,\n      3568407,\n      107679961,\n      0.1078,\n      0.36,\n      1.69\n    ],\n    [\n      1547136000000,\n      29.9812,\n      30.1,\n      29.1992,\n      29.7931,\n      3298072,\n      98541547,\n      -0.2584,\n      -0.86,\n      1.58\n    ],\n    [\n      1547395200000,\n      29.6249,\n      29.6249,\n      28.7043,\n      28.7934,\n      3283460,\n      96136461,\n      -1.0011,\n      -3.36,\n      1.59\n    ],\n    [\n      1547481600000,\n      28.7835,\n      28.7835,\n      27.7145,\n      28.6054,\n      3530589,\n      100989525,\n      -0.1872,\n      -0.65,\n      1.69\n    ],\n    [\n      1547568000000,\n      28.5064,\n      28.8033,\n      28.2589,\n      28.6054,\n      1694888,\n      48856965,\n      0,\n      0,\n      0.82\n    ],\n    [\n      1547654400000,\n      28.6054,\n      28.645,\n      27.8135,\n      27.8432,\n      1834755,\n      52090983,\n      -0.7609,\n      -2.66,\n      0.87\n    ],\n    [\n      1547740800000,\n      28.0115,\n      28.3876,\n      27.9125,\n      28.2787,\n      1668572,\n      47587717,\n      0.4344,\n      1.56,\n      0.8\n    ],\n    [\n      1547740800000,\n      28.0115,\n      28.3876,\n      27.9125,\n      28.2787,\n      1668572,\n      47587717,\n      0.4344,\n      1.56,\n      0.8\n    ],\n    [\n      1548000000000,\n      28.3876,\n      28.5955,\n      28.1896,\n      28.3678,\n      1478213,\n      42417350,\n      0.0905,\n      0.32,\n      0.71\n    ],\n    [\n      1548086400000,\n      28.3975,\n      28.5064,\n      28.0313,\n      28.2391,\n      1396235,\n      39841504,\n      -0.1277,\n      -0.45,\n      0.68\n    ],\n    [\n      1548172800000,\n      28.0412,\n      28.4371,\n      28.0115,\n      28.2292,\n      1044785,\n      29778015,\n      -0.0113,\n      -0.04,\n      0.5\n    ],\n    [\n      1548259200000,\n      28.1501,\n      28.6845,\n      28.061,\n      28.5955,\n      2100485,\n      60549982,\n      0.367,\n      1.3,\n      1.01\n    ],\n    [\n      1548345600000,\n      28.5262,\n      28.7835,\n      28.0709,\n      28.2292,\n      2216395,\n      63412863,\n      -0.366,\n      -1.28,\n      1.08\n    ],\n    [\n      1548604800000,\n      28.2094,\n      28.6549,\n      28.1402,\n      28.2985,\n      1727426,\n      49588643,\n      0.0706,\n      0.25,\n      0.84\n    ],\n    [\n      1548691200000,\n      28.1105,\n      28.1896,\n      26.3882,\n      27.1899,\n      2710421,\n      74440673,\n      -1.1093,\n      -3.92,\n      1.32\n    ],\n    [\n      1548777600000,\n      26.7544,\n      27.6848,\n      26.7544,\n      27.3087,\n      1825720,\n      50548064,\n      0.1196,\n      0.44,\n      0.89\n    ],\n    [\n      1548864000000,\n      27.6156,\n      27.9125,\n      26.9524,\n      27.0316,\n      1462691,\n      40562922,\n      -0.2758,\n      -1.01,\n      0.7\n    ],\n    [\n      1548950400000,\n      27.1701,\n      27.8036,\n      27.1701,\n      27.7838,\n      2007370,\n      55850070,\n      0.7515,\n      2.78,\n      0.97\n    ],\n    [\n      1549814400000,\n      27.8135,\n      29.5457,\n      27.8135,\n      29.4071,\n      3869148,\n      112939381,\n      1.6226,\n      5.84,\n      1.86\n    ],\n    [\n      1549900800000,\n      29.3576,\n      29.8921,\n      29.2091,\n      29.6447,\n      3174939,\n      95002861,\n      0.2382,\n      0.81,\n      1.53\n    ],\n    [\n      1549987200000,\n      29.6744,\n      31.6738,\n      29.6447,\n      31.2283,\n      7383785,\n      230890471,\n      1.5831,\n      5.34,\n      3.55\n    ],\n    [\n      1550073600000,\n      31.2283,\n      32.1687,\n      30.7136,\n      31.5649,\n      4146996,\n      131748566,\n      0.3373,\n      1.08,\n      2\n    ],\n    [\n      1550160000000,\n      31.5055,\n      31.8519,\n      31.0799,\n      31.258,\n      3079647,\n      97968643,\n      -0.3062,\n      -0.97,\n      1.46\n    ],\n    [\n      1550419200000,\n      31.7529,\n      32.1984,\n      30.6642,\n      32.1093,\n      4974428,\n      159063440,\n      0.8502,\n      2.72,\n      2.38\n    ],\n    [\n      1550505600000,\n      32.0202,\n      32.1489,\n      31.3966,\n      31.6045,\n      3203856,\n      102615763,\n      -0.5041,\n      -1.57,\n      1.55\n    ],\n    [\n      1550592000000,\n      31.555,\n      32.1291,\n      31.0403,\n      31.4065,\n      2941738,\n      93712269,\n      -0.1991,\n      -0.63,\n      1.42\n    ],\n    [\n      1550678400000,\n      31.4263,\n      32.812,\n      31.4065,\n      31.8321,\n      5195136,\n      168580952,\n      0.4271,\n      1.36,\n      2.52\n    ],\n    [\n      1550764800000,\n      31.9212,\n      32.6042,\n      31.4659,\n      32.525,\n      3501097,\n      113672928,\n      0.6939,\n      2.18,\n      1.68\n    ],\n    [\n      1551024000000,\n      33.1486,\n      34.4155,\n      33.1288,\n      34.1087,\n      6887706,\n      236618435,\n      1.584,\n      4.87,\n      3.33\n    ],\n    [\n      1551110400000,\n      34.3858,\n      34.8114,\n      33.5346,\n      34.0097,\n      5500271,\n      190099069,\n      -0.0989,\n      -0.29,\n      2.67\n    ],\n    [\n      1551196800000,\n      33.8414,\n      34.3363,\n      32.6636,\n      32.9605,\n      3888872,\n      131294628,\n      -1.0474,\n      -3.08,\n      1.87\n    ],\n    [\n      1551283200000,\n      33.0496,\n      33.7524,\n      32.7526,\n      33.5049,\n      2922200,\n      98568730,\n      0.5439,\n      1.65,\n      1.41\n    ],\n    [\n      1551369600000,\n      33.5049,\n      33.7326,\n      32.7625,\n      33.5643,\n      2701064,\n      90585032,\n      0.0603,\n      0.18,\n      1.27\n    ],\n    [\n      1551628800000,\n      33.6336,\n      34.4056,\n      33.2476,\n      33.5247,\n      4233719,\n      144952317,\n      -0.0403,\n      -0.12,\n      2.05\n    ],\n    [\n      1551715200000,\n      33.5148,\n      34.3363,\n      33.1981,\n      34.2077,\n      3481301,\n      119730217,\n      0.6839,\n      2.04,\n      1.66\n    ],\n    [\n      1551801600000,\n      34.2275,\n      34.6234,\n      33.8513,\n      34.5145,\n      4420555,\n      152614476,\n      0.3079,\n      0.9,\n      2.14\n    ],\n    [\n      1551888000000,\n      34.2572,\n      34.9203,\n      33.9206,\n      34.6135,\n      5200033,\n      180978637,\n      0.1001,\n      0.29,\n      2.52\n    ],\n    [\n      1551974400000,\n      34.2769,\n      36.1081,\n      32.6141,\n      33.0001,\n      8963166,\n      309754680,\n      -1.613,\n      -4.66,\n      4.34\n    ],\n    [\n      1552233600000,\n      33.0001,\n      34.1285,\n      33.0001,\n      33.9899,\n      4534125,\n      154035232,\n      0.99,\n      3,\n      2.19\n    ],\n    [\n      1552320000000,\n      34.2769,\n      35.4251,\n      34.0592,\n      34.9401,\n      6320937,\n      223063256,\n      0.9517,\n      2.8,\n      3.05\n    ],\n    [\n      1552406400000,\n      34.9401,\n      35.2371,\n      33.6633,\n      33.9008,\n      4451359,\n      154204781,\n      -1.0377,\n      -2.97,\n      2.16\n    ],\n    [\n      1552492800000,\n      33.8612,\n      34.5244,\n      33.6831,\n      33.8216,\n      3260362,\n      112057892,\n      -0.078,\n      -0.23,\n      1.58\n    ],\n    [\n      1552579200000,\n      34.2077,\n      34.4155,\n      33.6039,\n      33.881,\n      2580366,\n      88303493,\n      0.0609,\n      0.18,\n      1.25\n    ],\n    [\n      1552838400000,\n      33.9107,\n      35.336,\n      33.1882,\n      35.1084,\n      5811623,\n      203143349,\n      1.2265,\n      3.62,\n      2.82\n    ],\n    [\n      1552924800000,\n      35.1084,\n      35.1183,\n      34.2473,\n      34.4551,\n      3475575,\n      121243599,\n      -0.653,\n      -1.86,\n      1.68\n    ],\n    [\n      1553011200000,\n      34.465,\n      34.8213,\n      33.9998,\n      34.7125,\n      2897196,\n      100656054,\n      0.2584,\n      0.75,\n      1.38\n    ],\n    [\n      1553097600000,\n      34.5442,\n      34.9896,\n      34.2077,\n      34.6729,\n      2920690,\n      102216292,\n      -0.0382,\n      -0.11,\n      1.41\n    ],\n    [\n      1553184000000,\n      34.7125,\n      35.5538,\n      34.2077,\n      35.4647,\n      3725419,\n      131604348,\n      0.7906,\n      2.28,\n      1.79\n    ],\n    [\n      1553443200000,\n      34.7422,\n      35.0985,\n      34.2967,\n      34.4452,\n      3897133,\n      136367264,\n      -1.0178,\n      -2.87,\n      1.88\n    ],\n    [\n      1553529600000,\n      34.7422,\n      34.7422,\n      33.4752,\n      33.594,\n      2878954,\n      98668477,\n      -0.8508,\n      -2.47,\n      1.4\n    ],\n    [\n      1553616000000,\n      33.8018,\n      33.98,\n      33.3663,\n      33.7029,\n      1868355,\n      63540186,\n      0.1075,\n      0.32,\n      0.91\n    ],\n    [\n      1553702400000,\n      33.5049,\n      33.8414,\n      33.01,\n      33.1189,\n      2083569,\n      70407485,\n      -0.583,\n      -1.73,\n      1.01\n    ],\n    [\n      1553788800000,\n      33.3762,\n      34.7125,\n      33.1189,\n      34.5937,\n      3175701,\n      109670186,\n      1.4738,\n      4.45,\n      1.53\n    ],\n    [\n      1554048000000,\n      34.9896,\n      35.8309,\n      34.7422,\n      35.6627,\n      4148408,\n      148591642,\n      1.0689,\n      3.09,\n      2\n    ],\n    [\n      1554134400000,\n      36.0784,\n      36.0982,\n      35.0985,\n      35.7518,\n      3329674,\n      119475019,\n      0.0892,\n      0.25,\n      1.6\n    ],\n    [\n      1554220800000,\n      35.7518,\n      35.9794,\n      35.3459,\n      35.6627,\n      3007189,\n      108113503,\n      -0.0894,\n      -0.25,\n      1.44\n    ],\n    [\n      1554307200000,\n      36.2467,\n      36.504,\n      35.6627,\n      36.2071,\n      3703747,\n      134814062,\n      0.5456,\n      1.53,\n      1.78\n    ],\n    [\n      1554652800000,\n      36.1972,\n      36.217,\n      34.465,\n      34.7718,\n      4393913,\n      156076112,\n      -1.4337,\n      -3.96,\n      2.12\n    ],\n    [\n      1554739200000,\n      34.5244,\n      35.2668,\n      34.5145,\n      34.9401,\n      2538648,\n      89528600,\n      0.1669,\n      0.48,\n      1.23\n    ],\n    [\n      1554825600000,\n      35.0094,\n      35.2173,\n      34.2473,\n      34.9599,\n      2337518,\n      81917807,\n      0.021,\n      0.06,\n      1.13\n    ],\n    [\n      1554912000000,\n      34.9599,\n      35.1678,\n      34.2077,\n      34.3066,\n      1732295,\n      60414225,\n      -0.6538,\n      -1.87,\n      0.83\n    ],\n    [\n      1554998400000,\n      34.5442,\n      35.0193,\n      34.0394,\n      34.4749,\n      1680413,\n      58830163,\n      0.1681,\n      0.49,\n      0.81\n    ],\n    [\n      1555257600000,\n      35.0094,\n      35.1876,\n      33.9008,\n      33.9701,\n      2489553,\n      86889665,\n      -0.5033,\n      -1.46,\n      1.2\n    ],\n    [\n      1555344000000,\n      33.9701,\n      34.7916,\n      33.7524,\n      34.6927,\n      1734331,\n      60148312,\n      0.7235,\n      2.13,\n      0.83\n    ],\n    [\n      1555430400000,\n      34.9203,\n      35.3162,\n      34.465,\n      35.0391,\n      2366043,\n      83724086,\n      0.3469,\n      1,\n      1.15\n    ],\n    [\n      1555516800000,\n      34.9401,\n      35.1381,\n      34.4452,\n      34.5343,\n      2249855,\n      78790507,\n      -0.5046,\n      -1.44,\n      1.09\n    ],\n    [\n      1555603200000,\n      34.5244,\n      34.851,\n      33.9503,\n      34.7422,\n      2363849,\n      82393573,\n      0.2072,\n      0.6,\n      1.13\n    ],\n    [\n      1555862400000,\n      35.0787,\n      35.0787,\n      33.0298,\n      33.3465,\n      4303283,\n      147286099,\n      -1.3967,\n      -4.02,\n      2.08\n    ],\n    [\n      1555948800000,\n      33.6138,\n      33.8513,\n      33.2574,\n      33.4257,\n      2235301,\n      75886755,\n      0.08,\n      0.24,\n      1.08\n    ],\n    [\n      1556035200000,\n      33.4257,\n      33.6435,\n      32.3567,\n      33.5247,\n      2651208,\n      88703741,\n      0.1003,\n      0.3,\n      1.28\n    ],\n    [\n      1556121600000,\n      33.5148,\n      33.9107,\n      32.4161,\n      32.4458,\n      3661924,\n      122189837,\n      -1.0795,\n      -3.22,\n      1.76\n    ],\n    [\n      1556208000000,\n      32.4359,\n      32.4359,\n      29.3972,\n      30.2187,\n      6346123,\n      196098802,\n      -2.2257,\n      -6.86,\n      3.08\n    ],\n    [\n      1556467200000,\n      30.2385,\n      31.6045,\n      29.8624,\n      30.8126,\n      3360919,\n      104503857,\n      0.5953,\n      1.97,\n      1.62\n    ],\n    [\n      1556553600000,\n      30.1792,\n      30.288,\n      29.6051,\n      29.9713,\n      4068315,\n      122780512,\n      -0.8412,\n      -2.73,\n      1.97\n    ],\n    [\n      1557072000000,\n      29.1003,\n      29.1003,\n      26.9722,\n      27.6552,\n      6546421,\n      182099108,\n      -2.3168,\n      -7.73,\n      3.18\n    ],\n    [\n      1557158400000,\n      27.3087,\n      28.1995,\n      27.3087,\n      27.7145,\n      4699493,\n      131915814,\n      0.0581,\n      0.21,\n      2.28\n    ],\n    [\n      1557244800000,\n      27.4176,\n      27.5166,\n      26.5466,\n      27.1207,\n      3424678,\n      93819926,\n      -0.5931,\n      -2.14,\n      1.65\n    ],\n    [\n      1557331200000,\n      26.7742,\n      27.4869,\n      26.7247,\n      27.1602,\n      2474795,\n      67927610,\n      0.0407,\n      0.15,\n      1.19\n    ],\n    [\n      1557417600000,\n      27.279,\n      28.2094,\n      26.5466,\n      27.6848,\n      4899652,\n      135807850,\n      0.5242,\n      1.93,\n      2.37\n    ],\n    [\n      1557676800000,\n      26.9722,\n      27.279,\n      26.7346,\n      26.9425,\n      3949976,\n      107846724,\n      -0.7419,\n      -2.68,\n      1.91\n    ],\n    [\n      1557763200000,\n      26.5268,\n      26.9425,\n      26.4179,\n      26.5763,\n      3283093,\n      88501742,\n      -0.3664,\n      -1.36,\n      1.59\n    ],\n    [\n      1557849600000,\n      26.8237,\n      26.9821,\n      26.5268,\n      26.8732,\n      3112179,\n      84055817,\n      0.2976,\n      1.12,\n      1.49\n    ],\n    [\n      1557936000000,\n      26.9029,\n      27.2493,\n      26.7544,\n      27.1306,\n      3668481,\n      100242344,\n      0.258,\n      0.96,\n      1.77\n    ],\n    [\n      1558022400000,\n      27.2889,\n      27.2889,\n      26.0616,\n      26.121,\n      3538663,\n      94945822,\n      -1.0092,\n      -3.72,\n      1.71\n    ],\n    [\n      1558281600000,\n      26.121,\n      26.121,\n      24.755,\n      25.4083,\n      3556427,\n      90524000,\n      -0.7131,\n      -2.73,\n      1.72\n    ],\n    [\n      1558368000000,\n      25.2895,\n      26.0715,\n      25.24,\n      25.9329,\n      2435666,\n      63420619,\n      0.5234,\n      2.06,\n      1.17\n    ],\n    [\n      1558454400000,\n      25.9131,\n      26.1902,\n      25.537,\n      25.6854,\n      1672336,\n      43708163,\n      -0.2464,\n      -0.95,\n      0.8\n    ],\n    [\n      1558540800000,\n      25.5964,\n      25.9032,\n      25.2499,\n      25.438,\n      2004058,\n      51795896,\n      -0.2466,\n      -0.96,\n      0.97\n    ],\n    [\n      1558627200000,\n      25.2598,\n      25.6854,\n      25.2301,\n      25.2598,\n      1593301,\n      40880082,\n      -0.1781,\n      -0.7,\n      0.77\n    ],\n    [\n      1558886400000,\n      25.3291,\n      26.022,\n      24.9629,\n      26.0022,\n      2425153,\n      63116172,\n      0.7426,\n      2.94,\n      1.17\n    ],\n    [\n      1558972800000,\n      26.0319,\n      26.1803,\n      25.7151,\n      25.8735,\n      2118599,\n      55552180,\n      -0.1274,\n      -0.49,\n      1.02\n    ],\n    [\n      1559059200000,\n      25.7349,\n      26.2298,\n      25.5865,\n      25.7745,\n      1998827,\n      52241749,\n      -0.0983,\n      -0.38,\n      0.97\n    ],\n    [\n      1559145600000,\n      25.7646,\n      25.7844,\n      25.24,\n      25.4677,\n      1913456,\n      49140138,\n      -0.3067,\n      -1.19,\n      0.92\n    ],\n    [\n      1559232000000,\n      25.6854,\n      25.8834,\n      25.4875,\n      25.5469,\n      1535464,\n      39805654,\n      0.079,\n      0.31,\n      0.74\n    ],\n    [\n      1559491200000,\n      25.5469,\n      25.5865,\n      24.9728,\n      25.0718,\n      2229268,\n      56713657,\n      -0.4752,\n      -1.86,\n      1.08\n    ],\n    [\n      1559577600000,\n      25.3291,\n      25.3291,\n      24.7451,\n      24.8441,\n      2414087,\n      60676911,\n      -0.2282,\n      -0.91,\n      1.17\n    ],\n    [\n      1559664000000,\n      24.9926,\n      25.1213,\n      24.3492,\n      24.3591,\n      3136390,\n      77966783,\n      -0.4844,\n      -1.95,\n      1.51\n    ],\n    [\n      1559750400000,\n      24.63,\n      24.65,\n      23.3,\n      23.5,\n      3277358,\n      78088305,\n      -0.86,\n      -3.53,\n      1.59\n    ],\n    [\n      1560096000000,\n      23.77,\n      23.83,\n      23.43,\n      23.59,\n      3235346,\n      76486856,\n      0.09,\n      0.38,\n      1.57\n    ],\n    [\n      1560182400000,\n      23.62,\n      24.85,\n      23.52,\n      24.85,\n      4239712,\n      103161827,\n      1.26,\n      5.34,\n      2.04\n    ],\n    [\n      1560268800000,\n      24.83,\n      25.09,\n      24.46,\n      24.5,\n      3148948,\n      77858186,\n      -0.35,\n      -1.41,\n      1.53\n    ],\n    [\n      1560355200000,\n      24.51,\n      24.88,\n      24.42,\n      24.7,\n      1995488,\n      49149108,\n      0.2,\n      0.82,\n      0.97\n    ],\n    [\n      1560441600000,\n      24.73,\n      24.87,\n      24.15,\n      24.18,\n      2020493,\n      49425509,\n      -0.52,\n      -2.11,\n      0.96\n    ],\n    [\n      1560700800000,\n      24.2,\n      24.67,\n      23.48,\n      23.69,\n      4032084,\n      95964823,\n      -0.49,\n      -2.03,\n      1.95\n    ],\n    [\n      1560787200000,\n      23.79,\n      24.35,\n      23.62,\n      23.95,\n      3836690,\n      91813277,\n      0.26,\n      1.1,\n      1.86\n    ],\n    [\n      1560873600000,\n      24.5,\n      24.86,\n      24.4,\n      24.48,\n      5112165,\n      125877474,\n      0.53,\n      2.21,\n      2.47\n    ],\n    [\n      1560960000000,\n      24.45,\n      25.21,\n      24.3,\n      25.19,\n      4810624,\n      119724287,\n      0.71,\n      2.9,\n      2.32\n    ],\n    [\n      1561046400000,\n      25.4,\n      26,\n      25.32,\n      25.5,\n      5233396,\n      134041247,\n      0.31,\n      1.23,\n      2.53\n    ],\n    [\n      1561305600000,\n      26,\n      27.53,\n      26,\n      27.05,\n      10164974,\n      273564770,\n      1.55,\n      6.08,\n      4.95\n    ],\n    [\n      1561392000000,\n      27.22,\n      27.22,\n      26.3,\n      26.77,\n      5648334,\n      150306284,\n      -0.28,\n      -1.04,\n      2.75\n    ],\n    [\n      1561478400000,\n      26.58,\n      26.92,\n      26.43,\n      26.75,\n      3771565,\n      100570329,\n      -0.02,\n      -0.07,\n      1.84\n    ],\n    [\n      1561564800000,\n      26.75,\n      26.94,\n      26.55,\n      26.64,\n      4675713,\n      124902852,\n      -0.11,\n      -0.41,\n      2.26\n    ],\n    [\n      1561651200000,\n      26.5,\n      26.51,\n      25.75,\n      26.03,\n      5365560,\n      139904122,\n      -0.61,\n      -2.29,\n      2.6\n    ],\n    [\n      1561910400000,\n      26.62,\n      27.49,\n      26.42,\n      27.32,\n      7603313,\n      205627598,\n      1.29,\n      4.96,\n      3.68\n    ],\n    [\n      1561996800000,\n      27.44,\n      27.44,\n      26.8,\n      26.93,\n      4637472,\n      125470162,\n      -0.39,\n      -1.43,\n      2.24\n    ],\n    [\n      1562083200000,\n      26.66,\n      26.78,\n      26.19,\n      26.3,\n      3627610,\n      95974961,\n      -0.63,\n      -2.34,\n      1.77\n    ],\n    [\n      1562169600000,\n      26.3,\n      26.69,\n      25.94,\n      26.14,\n      2978819,\n      78131220,\n      -0.16,\n      -0.61,\n      1.44\n    ],\n    [\n      1562256000000,\n      26,\n      26.34,\n      25.66,\n      26.19,\n      3813583,\n      99201873,\n      0.05,\n      0.19,\n      1.86\n    ],\n    [\n      1562515200000,\n      26.2,\n      26.2,\n      25,\n      25.17,\n      4203522,\n      106639238,\n      -1.02,\n      -3.89,\n      2.05\n    ],\n    [\n      1562601600000,\n      25.11,\n      25.44,\n      25,\n      25.32,\n      2329089,\n      58762005,\n      0.15,\n      0.6,\n      1.13\n    ],\n    [\n      1562688000000,\n      25.38,\n      25.45,\n      24.8,\n      24.83,\n      2730584,\n      68416073,\n      -0.49,\n      -1.94,\n      1.33\n    ],\n    [\n      1562774400000,\n      24.9,\n      25.39,\n      24.89,\n      25.01,\n      2317438,\n      58210807,\n      0.18,\n      0.72,\n      1.13\n    ],\n    [\n      1562860800000,\n      25.07,\n      25.34,\n      24.88,\n      25.21,\n      1810690,\n      45592025,\n      0.2,\n      0.8,\n      0.88\n    ],\n    [\n      1563120000000,\n      25.24,\n      25.24,\n      24.4,\n      25.05,\n      3645180,\n      90446556,\n      -0.16,\n      -0.63,\n      1.78\n    ],\n    [\n      1563206400000,\n      25.06,\n      25.16,\n      24.78,\n      25.11,\n      1929412,\n      48243355,\n      0.06,\n      0.24,\n      0.93\n    ],\n    [\n      1563292800000,\n      25.09,\n      25.27,\n      24.95,\n      25.02,\n      2163095,\n      54247419,\n      -0.09,\n      -0.36,\n      1.05\n    ],\n    [\n      1563379200000,\n      24.89,\n      24.9,\n      24.43,\n      24.44,\n      2494095,\n      61288135,\n      -0.58,\n      -2.32,\n      1.22\n    ],\n    [\n      1563465600000,\n      24.65,\n      24.79,\n      24.36,\n      24.52,\n      1986208,\n      48855118,\n      0.08,\n      0.33,\n      0.97\n    ],\n    [\n      1563724800000,\n      24.42,\n      24.69,\n      23.91,\n      24.13,\n      1984002,\n      48046166,\n      -0.39,\n      -1.59,\n      0.97\n    ],\n    [\n      1563811200000,\n      24.15,\n      24.42,\n      24.12,\n      24.42,\n      1420807,\n      34463670,\n      0.29,\n      1.2,\n      0.69\n    ],\n    [\n      1563897600000,\n      26.86,\n      26.86,\n      26.86,\n      26.86,\n      3445472,\n      92545377,\n      2.44,\n      9.99,\n      1.68\n    ],\n    [\n      1563984000000,\n      29,\n      29.55,\n      28.3,\n      29.55,\n      16477647,\n      482727350,\n      2.69,\n      10.01,\n      8.03\n    ],\n    [\n      1564070400000,\n      31.6,\n      31.8,\n      30,\n      30.5,\n      25801569,\n      796885174,\n      0.95,\n      3.21,\n      12.57\n    ],\n    [\n      1564329600000,\n      31.58,\n      31.93,\n      30.88,\n      30.95,\n      18209015,\n      571386387,\n      0.45,\n      1.48,\n      8.87\n    ],\n    [\n      1564416000000,\n      31.35,\n      32.3,\n      31.11,\n      31.54,\n      14764387,\n      466810819,\n      0.59,\n      1.91,\n      7.19\n    ],\n    [\n      1564502400000,\n      31.69,\n      33.78,\n      31.17,\n      33.35,\n      15979402,\n      518393165,\n      1.81,\n      5.74,\n      7.79\n    ],\n    [\n      1564588800000,\n      32.83,\n      33.76,\n      32.48,\n      33.19,\n      14069312,\n      465362841,\n      -0.16,\n      -0.48,\n      6.85\n    ],\n    [\n      1564675200000,\n      31.8,\n      33.36,\n      30.95,\n      32.9,\n      15487136,\n      497130994,\n      -0.29,\n      -0.87,\n      7.55\n    ],\n    [\n      1564934400000,\n      32.36,\n      33.09,\n      31.62,\n      31.8,\n      11679854,\n      378644768,\n      -1.1,\n      -3.34,\n      5.69\n    ],\n    [\n      1565020800000,\n      30.92,\n      32.2,\n      30.41,\n      31.72,\n      11411327,\n      357044976,\n      -0.08,\n      -0.25,\n      5.56\n    ],\n    [\n      1565107200000,\n      31.7,\n      31.88,\n      30.28,\n      30.33,\n      10614535,\n      328437515,\n      -1.39,\n      -4.38,\n      5.17\n    ],\n    [\n      1565193600000,\n      30.63,\n      31.43,\n      30.4,\n      30.91,\n      10244014,\n      317576936,\n      0.58,\n      1.91,\n      4.99\n    ],\n    [\n      1565280000000,\n      31.59,\n      34,\n      31.29,\n      33.8,\n      19867908,\n      664914385,\n      2.89,\n      9.35,\n      9.68\n    ],\n    [\n      1565539200000,\n      33.49,\n      35.88,\n      33.1,\n      35.32,\n      19304199,\n      663449284,\n      1.52,\n      4.5,\n      9.41\n    ],\n    [\n      1565625600000,\n      35.21,\n      38.5,\n      34.77,\n      38.2,\n      19658295,\n      722150846,\n      2.88,\n      8.15,\n      9.58\n    ],\n    [\n      1565712000000,\n      39.01,\n      40.98,\n      37.55,\n      38.09,\n      21761646,\n      854442182,\n      -0.11,\n      -0.29,\n      10.6\n    ],\n    [\n      1565798400000,\n      37.52,\n      39.28,\n      37.38,\n      38.71,\n      15624059,\n      596337491,\n      0.62,\n      1.63,\n      7.61\n    ],\n    [\n      1565884800000,\n      38.59,\n      39,\n      37.79,\n      37.81,\n      11447475,\n      437861886,\n      -0.9,\n      -2.32,\n      5.58\n    ],\n    [\n      1566144000000,\n      38.51,\n      40.08,\n      37.86,\n      39.13,\n      17486225,\n      681965080,\n      1.32,\n      3.49,\n      8.52\n    ],\n    [\n      1566144000000,\n      38.51,\n      40.08,\n      37.86,\n      39.13,\n      17486225,\n      681965080,\n      1.32,\n      3.49,\n      8.52\n    ],\n    [\n      1566230400000,\n      38.45,\n      39.66,\n      37.91,\n      38.38,\n      11538063,\n      446392065,\n      -0.75,\n      -1.92,\n      5.62\n    ],\n    [\n      1566316800000,\n      38.55,\n      39.5,\n      37.61,\n      39.5,\n      12140440,\n      468622289,\n      1.12,\n      2.92,\n      5.92\n    ],\n    [\n      1566403200000,\n      39.49,\n      42.2,\n      39.18,\n      42,\n      16301793,\n      670117754,\n      2.5,\n      6.33,\n      7.94\n    ],\n    [\n      1566489600000,\n      41.38,\n      41.6,\n      39.6,\n      40.05,\n      14036068,\n      567238048,\n      -1.95,\n      -4.64,\n      6.84\n    ],\n    [\n      1566748800000,\n      38.6,\n      39.45,\n      38.3,\n      38.81,\n      10383382,\n      403108705,\n      -1.24,\n      -3.1,\n      5.06\n    ],\n    [\n      1566835200000,\n      39.01,\n      39.97,\n      38.65,\n      38.89,\n      9515769,\n      372387780,\n      0.08,\n      0.21,\n      4.64\n    ],\n    [\n      1566921600000,\n      38.3,\n      39.2,\n      38.15,\n      38.2,\n      8406477,\n      324482951,\n      -0.69,\n      -1.77,\n      4.1\n    ],\n    [\n      1567008000000,\n      38,\n      39.01,\n      37.83,\n      38.2,\n      8435726,\n      324184253,\n      0,\n      0,\n      4.11\n    ],\n    [\n      1567094400000,\n      38.18,\n      38.85,\n      36.5,\n      36.83,\n      12147558,\n      455493707,\n      -1.37,\n      -3.59,\n      5.92\n    ],\n    [\n      1567353600000,\n      37.22,\n      38.16,\n      36.72,\n      37.75,\n      9823516,\n      367793606,\n      0.92,\n      2.5,\n      4.79\n    ],\n    [\n      1567440000000,\n      37.77,\n      38.97,\n      36.8,\n      38.96,\n      11429154,\n      434273247,\n      1.21,\n      3.21,\n      5.57\n    ],\n    [\n      1567526400000,\n      38.97,\n      39.19,\n      37.67,\n      38.22,\n      8956099,\n      342540945,\n      -0.74,\n      -1.9,\n      4.36\n    ],\n    [\n      1567612800000,\n      38.22,\n      40.1,\n      38.05,\n      38.65,\n      13432605,\n      523668653,\n      0.43,\n      1.13,\n      6.54\n    ],\n    [\n      1567699200000,\n      38.55,\n      39.58,\n      38.06,\n      38.42,\n      9071027,\n      351720473,\n      -0.23,\n      -0.6,\n      4.42\n    ],\n    [\n      1567958400000,\n      38.58,\n      41.1,\n      38.58,\n      41,\n      13637255,\n      542155003,\n      2.58,\n      6.72,\n      6.64\n    ],\n    [\n      1568044800000,\n      40.9,\n      40.95,\n      38.87,\n      39.3,\n      10807622,\n      427899544,\n      -1.7,\n      -4.15,\n      5.27\n    ],\n    [\n      1568131200000,\n      39.4,\n      39.55,\n      37.71,\n      37.73,\n      8931189,\n      342983411,\n      -1.57,\n      -3.99,\n      4.35\n    ],\n    [\n      1568217600000,\n      37.73,\n      38.34,\n      37.26,\n      38.26,\n      4686826,\n      177603944,\n      0.53,\n      1.4,\n      2.28\n    ],\n    [\n      1568563200000,\n      38.6,\n      41.99,\n      38.58,\n      41.05,\n      18717746,\n      759279619,\n      2.79,\n      7.29,\n      9.12\n    ],\n    [\n      1568649600000,\n      41.35,\n      43.11,\n      41.18,\n      42.79,\n      20059383,\n      848400089,\n      1.74,\n      4.24,\n      9.77\n    ],\n    [\n      1568736000000,\n      42.79,\n      42.79,\n      40.67,\n      41.95,\n      13313909,\n      553924077,\n      -0.84,\n      -1.96,\n      6.49\n    ],\n    [\n      1568822400000,\n      42.2,\n      44.84,\n      41.42,\n      44.33,\n      15919012,\n      690952640,\n      2.38,\n      5.67,\n      7.76\n    ],\n    [\n      1568908800000,\n      43.99,\n      47.08,\n      43.53,\n      44.48,\n      16834788,\n      759110174,\n      0.15,\n      0.34,\n      8.2\n    ],\n    [\n      1569168000000,\n      44.28,\n      45.44,\n      43.3,\n      44.49,\n      11321856,\n      504790312,\n      0.01,\n      0.02,\n      5.52\n    ],\n    [\n      1569254400000,\n      44.9,\n      45.2,\n      43.86,\n      44.19,\n      10621579,\n      472879645,\n      -0.3,\n      -0.67,\n      5.18\n    ],\n    [\n      1569340800000,\n      43.85,\n      44,\n      42.2,\n      43.22,\n      10556442,\n      454496019,\n      -0.97,\n      -2.2,\n      5.14\n    ],\n    [\n      1569427200000,\n      43.55,\n      43.57,\n      39.24,\n      39.47,\n      13117655,\n      534853033,\n      -3.75,\n      -8.68,\n      6.39\n    ],\n    [\n      1569513600000,\n      39.65,\n      41.9,\n      39.65,\n      41.3,\n      10503795,\n      430615536,\n      1.83,\n      4.64,\n      5.12\n    ],\n    [\n      1569772800000,\n      41.99,\n      41.99,\n      39.9,\n      40.75,\n      6892155,\n      282017379,\n      -0.55,\n      -1.33,\n      3.36\n    ],\n    [\n      1570464000000,\n      41.4,\n      41.78,\n      39.36,\n      39.84,\n      7727752,\n      312966108,\n      -0.91,\n      -2.23,\n      3.77\n    ],\n    [\n      1570550400000,\n      39.31,\n      40.13,\n      38.41,\n      39.77,\n      8988376,\n      353519849,\n      -0.07,\n      -0.18,\n      4.38\n    ],\n    [\n      1570636800000,\n      40.28,\n      41.62,\n      39.69,\n      40.85,\n      10005736,\n      407255562,\n      1.08,\n      2.72,\n      4.88\n    ],\n    [\n      1570723200000,\n      41.1,\n      41.56,\n      39.74,\n      39.77,\n      7821095,\n      316059647,\n      -1.08,\n      -2.64,\n      3.81\n    ],\n    [\n      1570982400000,\n      40.6,\n      43.75,\n      40.1,\n      43.75,\n      14872962,\n      627084736,\n      3.98,\n      10.01,\n      7.25\n    ],\n    [\n      1571068800000,\n      43,\n      43.18,\n      41.53,\n      41.93,\n      10941783,\n      462894080,\n      -1.82,\n      -4.16,\n      5.33\n    ],\n    [\n      1571155200000,\n      41.71,\n      42.49,\n      41.19,\n      41.35,\n      7083230,\n      295756307,\n      -0.58,\n      -1.38,\n      3.45\n    ],\n    [\n      1571241600000,\n      41.48,\n      42.88,\n      40.77,\n      41.5,\n      9226135,\n      387463127,\n      0.15,\n      0.36,\n      4.5\n    ],\n    [\n      1571328000000,\n      41.92,\n      41.92,\n      39.56,\n      40.25,\n      8552945,\n      346643970,\n      -1.25,\n      -3.01,\n      4.17\n    ],\n    [\n      1571587200000,\n      39.73,\n      39.9,\n      38.61,\n      39.2,\n      5292773,\n      207259088,\n      -1.05,\n      -2.61,\n      2.58\n    ],\n    [\n      1571673600000,\n      39.55,\n      40.2,\n      39.15,\n      40.05,\n      5051505,\n      200677192,\n      0.85,\n      2.17,\n      2.46\n    ],\n    [\n      1571760000000,\n      39.91,\n      40.78,\n      39.3,\n      39.66,\n      5244729,\n      209542965,\n      -0.39,\n      -0.97,\n      2.56\n    ],\n    [\n      1571846400000,\n      39.53,\n      40.12,\n      38.8,\n      39.57,\n      4686614,\n      184768660,\n      -0.09,\n      -0.23,\n      2.28\n    ],\n    [\n      1571932800000,\n      39.57,\n      41.08,\n      39.2,\n      40.91,\n      7100994,\n      286564724,\n      1.34,\n      3.39,\n      3.46\n    ],\n    [\n      1572192000000,\n      41,\n      41.7,\n      40.5,\n      41.09,\n      6411565,\n      263996289,\n      0.18,\n      0.44,\n      3.12\n    ],\n    [\n      1572278400000,\n      40.9,\n      40.9,\n      38.91,\n      38.95,\n      11716291,\n      461519329,\n      -2.14,\n      -5.21,\n      5.71\n    ],\n    [\n      1572364800000,\n      38.95,\n      38.95,\n      37.28,\n      38.06,\n      5936259,\n      226491969,\n      -0.89,\n      -2.28,\n      2.89\n    ],\n    [\n      1572451200000,\n      37.83,\n      38.47,\n      37.39,\n      37.5,\n      5841664,\n      220175813,\n      -0.56,\n      -1.47,\n      2.85\n    ],\n    [\n      1572537600000,\n      37.34,\n      37.74,\n      37.2,\n      37.53,\n      5927806,\n      222220425,\n      0.03,\n      0.08,\n      2.89\n    ],\n    [\n      1572796800000,\n      37.53,\n      38.6,\n      37.53,\n      37.91,\n      8122567,\n      308823274,\n      0.38,\n      1.01,\n      3.96\n    ],\n    [\n      1572883200000,\n      37.92,\n      41.5,\n      37.68,\n      40.49,\n      16666602,\n      661936177,\n      2.58,\n      6.81,\n      8.12\n    ],\n    [\n      1572969600000,\n      40.97,\n      41.48,\n      39.66,\n      40.17,\n      13645798,\n      553995396,\n      -0.32,\n      -0.79,\n      6.65\n    ],\n    [\n      1573056000000,\n      39.67,\n      39.8,\n      37.97,\n      38.63,\n      14614428,\n      566881569,\n      -1.54,\n      -3.83,\n      7.12\n    ],\n    [\n      1573142400000,\n      38.8,\n      39.38,\n      38.5,\n      38.66,\n      8871469,\n      344699800,\n      0.03,\n      0.08,\n      4.32\n    ],\n    [\n      1573401600000,\n      38.02,\n      38.34,\n      36.42,\n      36.48,\n      9803002,\n      365400881,\n      -2.18,\n      -5.64,\n      4.78\n    ],\n    [\n      1573488000000,\n      36.67,\n      36.7,\n      35.43,\n      36.26,\n      6524405,\n      234704830,\n      -0.22,\n      -0.6,\n      3.18\n    ],\n    [\n      1573574400000,\n      36.28,\n      36.34,\n      35.7,\n      36.02,\n      4923704,\n      177372531,\n      -0.24,\n      -0.66,\n      2.4\n    ],\n    [\n      1573660800000,\n      36.05,\n      37.69,\n      36.05,\n      37.64,\n      8169348,\n      302321935,\n      1.62,\n      4.5,\n      3.98\n    ],\n    [\n      1573747200000,\n      37.28,\n      37.59,\n      36.43,\n      36.93,\n      7204534,\n      265500074,\n      -0.71,\n      -1.89,\n      3.51\n    ],\n    [\n      1574006400000,\n      36.9,\n      37.13,\n      36.36,\n      36.78,\n      3976109,\n      146273220,\n      -0.15,\n      -0.41,\n      1.94\n    ],\n    [\n      1574092800000,\n      36.89,\n      37.64,\n      36.41,\n      37.51,\n      7505373,\n      279267405,\n      0.73,\n      1.98,\n      3.66\n    ],\n    [\n      1574179200000,\n      37.5,\n      37.5,\n      36.66,\n      36.81,\n      5336367,\n      197320419,\n      -0.7,\n      -1.87,\n      2.6\n    ],\n    [\n      1574265600000,\n      36.53,\n      36.77,\n      36,\n      36.5,\n      4079903,\n      148147523,\n      -0.31,\n      -0.84,\n      1.99\n    ],\n    [\n      1574352000000,\n      36.44,\n      37.8,\n      36.3,\n      36.68,\n      8250452,\n      306343236,\n      0.18,\n      0.49,\n      4.02\n    ],\n    [\n      1574611200000,\n      36.3,\n      36.48,\n      34.93,\n      35.16,\n      6989293,\n      247534854,\n      -1.52,\n      -4.14,\n      3.41\n    ],\n    [\n      1574697600000,\n      35.28,\n      35.89,\n      35,\n      35.76,\n      4304988,\n      153468524,\n      0.6,\n      1.71,\n      2.1\n    ],\n    [\n      1574784000000,\n      35.69,\n      37.27,\n      35.4,\n      36.72,\n      7701535,\n      281834519,\n      0.96,\n      2.68,\n      3.75\n    ],\n    [\n      1574870400000,\n      36.72,\n      38.48,\n      36.5,\n      37.49,\n      10463935,\n      394639040,\n      0.77,\n      2.1,\n      5.1\n    ],\n    [\n      1574956800000,\n      37.58,\n      37.95,\n      36.85,\n      37.21,\n      5869981,\n      218972670,\n      -0.28,\n      -0.75,\n      2.86\n    ],\n    [\n      1575216000000,\n      37.41,\n      37.69,\n      36.75,\n      37.49,\n      4532321,\n      169044174,\n      0.28,\n      0.75,\n      2.21\n    ],\n    [\n      1575302400000,\n      37.35,\n      37.58,\n      36.9,\n      37.57,\n      4566095,\n      170100427,\n      0.08,\n      0.21,\n      2.22\n    ],\n    [\n      1575388800000,\n      37.08,\n      39.12,\n      37.08,\n      38.67,\n      10152645,\n      390272659,\n      1.1,\n      2.93,\n      4.95\n    ],\n    [\n      1575475200000,\n      38.74,\n      39.6,\n      38.33,\n      39.41,\n      11114491,\n      434433302,\n      0.74,\n      1.91,\n      5.42\n    ],\n    [\n      1575561600000,\n      39.42,\n      40.49,\n      39.15,\n      39.72,\n      11255877,\n      447157922,\n      0.31,\n      0.79,\n      5.48\n    ],\n    [\n      1575820800000,\n      40.07,\n      40.4,\n      39.4,\n      39.78,\n      7107485,\n      283469784,\n      0.06,\n      0.15,\n      3.46\n    ],\n    [\n      1575907200000,\n      39.51,\n      40.8,\n      39.21,\n      40.8,\n      9252650,\n      370754872,\n      1.02,\n      2.56,\n      4.51\n    ],\n    [\n      1575993600000,\n      40.66,\n      40.7,\n      38.9,\n      38.99,\n      10827886,\n      428686177,\n      -1.81,\n      -4.44,\n      5.28\n    ],\n    [\n      1576080000000,\n      38.84,\n      39.31,\n      38.23,\n      38.45,\n      7848554,\n      304455269,\n      -0.54,\n      -1.38,\n      3.82\n    ],\n    [\n      1576166400000,\n      38.85,\n      40.32,\n      38.52,\n      40.09,\n      12344413,\n      489375966,\n      1.64,\n      4.27,\n      5.93\n    ],\n    [\n      1576425600000,\n      40.4,\n      42.39,\n      40.15,\n      41.9,\n      14959871,\n      616617415,\n      1.81,\n      4.51,\n      7.24\n    ],\n    [\n      1576512000000,\n      41.67,\n      43.43,\n      41.53,\n      42.28,\n      13809202,\n      584422852,\n      0.38,\n      0.91,\n      6.73\n    ],\n    [\n      1576598400000,\n      42.1,\n      42.42,\n      41.42,\n      41.61,\n      9357024,\n      391519742,\n      -0.67,\n      -1.58,\n      4.56\n    ],\n    [\n      1576684800000,\n      41.59,\n      42.1,\n      41.06,\n      41.39,\n      6186405,\n      255896293,\n      -0.22,\n      -0.53,\n      3.01\n    ],\n    [\n      1576771200000,\n      41.38,\n      41.8,\n      40.8,\n      40.8,\n      6925833,\n      285888762,\n      -0.59,\n      -1.43,\n      3.3\n    ],\n    [\n      1577030400000,\n      40.4,\n      41.18,\n      39.27,\n      39.41,\n      7475973,\n      299918846,\n      -1.39,\n      -3.41,\n      3.64\n    ],\n    [\n      1577116800000,\n      39.57,\n      41.52,\n      39.57,\n      41.5,\n      8972735,\n      364761881,\n      2.09,\n      5.3,\n      4.37\n    ],\n    [\n      1577203200000,\n      41.54,\n      41.54,\n      40.5,\n      41.21,\n      8920945,\n      365526896,\n      -0.29,\n      -0.7,\n      4.35\n    ],\n    [\n      1577289600000,\n      41.3,\n      42.15,\n      41.1,\n      41.46,\n      8289877,\n      344825723,\n      0.25,\n      0.61,\n      3.98\n    ],\n    [\n      1577376000000,\n      41.55,\n      42.6,\n      40.41,\n      40.61,\n      10652042,\n      442148930,\n      -0.85,\n      -2.05,\n      5.19\n    ],\n    [\n      1577635200000,\n      40.25,\n      40.99,\n      39,\n      40.74,\n      6568327,\n      264123944,\n      0.13,\n      0.32,\n      3.18\n    ],\n    [\n      1577721600000,\n      40.6,\n      41.39,\n      40.3,\n      40.74,\n      5046759,\n      206147875,\n      0,\n      0,\n      2.42\n    ],\n    [\n      1577894400000,\n      41.11,\n      42.13,\n      40.71,\n      41.72,\n      8011732,\n      332796075,\n      0.98,\n      2.41,\n      3.87\n    ],\n    [\n      1577980800000,\n      41.85,\n      42.49,\n      41.41,\n      42.08,\n      7829801,\n      328971564,\n      0.36,\n      0.86,\n      3.78\n    ],\n    [\n      1578240000000,\n      41.8,\n      43.74,\n      41.5,\n      43.17,\n      12766082,\n      548603147,\n      1.09,\n      2.59,\n      6.17\n    ],\n    [\n      1578326400000,\n      43.04,\n      43.08,\n      42.18,\n      42.86,\n      7548780,\n      321388081,\n      -0.31,\n      -0.72,\n      3.63\n    ],\n    [\n      1578412800000,\n      42.67,\n      42.88,\n      41.52,\n      41.63,\n      7645812,\n      321470634,\n      -1.23,\n      -2.87,\n      3.69\n    ],\n    [\n      1578499200000,\n      42.15,\n      42.49,\n      41.8,\n      42.28,\n      5931130,\n      250130544,\n      0.65,\n      1.56,\n      2.85\n    ],\n    [\n      1578585600000,\n      42.48,\n      42.48,\n      41.5,\n      42.13,\n      6184839,\n      259274694,\n      -0.15,\n      -0.35,\n      2.98\n    ],\n    [\n      1578844800000,\n      42.11,\n      42.9,\n      41.99,\n      42.65,\n      8863887,\n      377228871,\n      0.52,\n      1.23,\n      4.28\n    ],\n    [\n      1578931200000,\n      43,\n      44.16,\n      42.51,\n      43.12,\n      11283939,\n      489434473,\n      0.47,\n      1.1,\n      5.47\n    ],\n    [\n      1579017600000,\n      42.89,\n      43.4,\n      41.71,\n      42.19,\n      7505858,\n      317055182,\n      -0.93,\n      -2.16,\n      3.62\n    ],\n    [\n      1579104000000,\n      44.3,\n      46.41,\n      43.51,\n      46.41,\n      13433926,\n      608578920,\n      4.22,\n      10,\n      6.51\n    ],\n    [\n      1579190400000,\n      46.98,\n      47.28,\n      44.66,\n      45.76,\n      18695269,\n      855765680,\n      -0.65,\n      -1.4,\n      9.03\n    ],\n    [\n      1579449600000,\n      45.79,\n      47.79,\n      45.38,\n      47.32,\n      11569119,\n      539078536,\n      1.56,\n      3.41,\n      5.55\n    ],\n    [\n      1579536000000,\n      46.76,\n      47.24,\n      46.06,\n      46.48,\n      8394902,\n      391098956,\n      -0.84,\n      -1.78,\n      4.05\n    ],\n    [\n      1579622400000,\n      46.03,\n      49.58,\n      45.01,\n      49.06,\n      11576024,\n      550195072,\n      2.58,\n      5.55,\n      5.55\n    ],\n    [\n      1579708800000,\n      47.93,\n      48.88,\n      45.96,\n      46.5,\n      10602246,\n      503301921,\n      -2.56,\n      -5.22,\n      5.11\n    ],\n    [\n      1580659200000,\n      41.85,\n      41.85,\n      41.85,\n      41.85,\n      1077600,\n      45097560,\n      -4.65,\n      -10,\n      0.52\n    ],\n    [\n      1580745600000,\n      38.8,\n      43.95,\n      38.72,\n      42.52,\n      12613930,\n      533420079,\n      0.67,\n      1.6,\n      6.1\n    ],\n    [\n      1580832000000,\n      42.95,\n      44.48,\n      42.24,\n      42.53,\n      10439353,\n      452696323,\n      0.01,\n      0.02,\n      5.06\n    ],\n    [\n      1580918400000,\n      41.5,\n      43.98,\n      41.38,\n      43.42,\n      10694883,\n      454266630,\n      0.89,\n      2.09,\n      5.17\n    ],\n    [\n      1581004800000,\n      42.99,\n      43.25,\n      41.88,\n      42.91,\n      9515944,\n      405648544,\n      -0.51,\n      -1.17,\n      4.57\n    ],\n    [\n      1581264000000,\n      42.4,\n      44.65,\n      41.68,\n      44.45,\n      11468584,\n      498368730,\n      1.54,\n      3.59,\n      5.5\n    ],\n    [\n      1581350400000,\n      44.5,\n      44.57,\n      43.5,\n      44.05,\n      7536608,\n      331321828,\n      -0.4,\n      -0.9,\n      3.62\n    ],\n    [\n      1581436800000,\n      43.95,\n      46.31,\n      43.57,\n      45.74,\n      11995310,\n      545828325,\n      1.69,\n      3.84,\n      5.78\n    ],\n    [\n      1581523200000,\n      45.48,\n      46.55,\n      44.8,\n      45.61,\n      10686765,\n      488490655,\n      -0.13,\n      -0.28,\n      5.16\n    ],\n    [\n      1581609600000,\n      45.63,\n      47.3,\n      45.36,\n      46,\n      10891737,\n      504955511,\n      0.39,\n      0.86,\n      5.21\n    ],\n    [\n      1581868800000,\n      46.11,\n      48.24,\n      46.11,\n      48.17,\n      12310811,\n      584665007,\n      2.17,\n      4.72,\n      5.82\n    ],\n    [\n      1581955200000,\n      49.28,\n      49.28,\n      47,\n      48.28,\n      12253666,\n      590925179,\n      0.11,\n      0.23,\n      5.93\n    ],\n    [\n      1582041600000,\n      48.28,\n      48.28,\n      46,\n      46.16,\n      12514736,\n      589149807,\n      -2.12,\n      -4.39,\n      6.04\n    ],\n    [\n      1582128000000,\n      46.58,\n      47.1,\n      46.09,\n      46.92,\n      8845406,\n      413696251,\n      0.76,\n      1.65,\n      4.25\n    ],\n    [\n      1582214400000,\n      46.97,\n      48.5,\n      46.84,\n      48.3,\n      14236456,\n      683163241,\n      1.38,\n      2.94,\n      6.8\n    ],\n    [\n      1582473600000,\n      48.3,\n      52.13,\n      47.91,\n      50.96,\n      15637783,\n      779467649,\n      2.66,\n      5.51,\n      7.56\n    ],\n    [\n      1582560000000,\n      49.98,\n      51.08,\n      47.2,\n      50.96,\n      16695722,\n      831051426,\n      0,\n      0,\n      8.08\n    ],\n    [\n      1582646400000,\n      49.69,\n      50.58,\n      47,\n      47.6,\n      11768725,\n      575990929,\n      -3.36,\n      -6.59,\n      5.68\n    ],\n    [\n      1582732800000,\n      48,\n      48.39,\n      45.97,\n      47.44,\n      8839251,\n      419179836,\n      -0.16,\n      -0.34,\n      4.27\n    ],\n    [\n      1582819200000,\n      45.26,\n      46.32,\n      44,\n      44.39,\n      10350491,\n      467514641,\n      -3.05,\n      -6.43,\n      5\n    ],\n    [\n      1583078400000,\n      44.69,\n      45.95,\n      44.16,\n      45.61,\n      6368044,\n      287637685,\n      1.22,\n      2.75,\n      3.07\n    ],\n    [\n      1583164800000,\n      47.05,\n      48.17,\n      46.6,\n      46.99,\n      9171862,\n      434276906,\n      1.38,\n      3.03,\n      4.44\n    ],\n    [\n      1583251200000,\n      46.48,\n      47.3,\n      45.96,\n      46.65,\n      4859490,\n      225974619,\n      -0.34,\n      -0.72,\n      2.34\n    ],\n    [\n      1583337600000,\n      47.42,\n      47.6,\n      46.18,\n      46.69,\n      4954523,\n      231672090,\n      0.04,\n      0.09,\n      2.39\n    ],\n    [\n      1583424000000,\n      45.8,\n      46.8,\n      45.18,\n      45.85,\n      4401961,\n      203311415,\n      -0.84,\n      -1.8,\n      2.12\n    ],\n    [\n      1583683200000,\n      45.08,\n      45.08,\n      43.27,\n      43.66,\n      5607615,\n      247634922,\n      -2.19,\n      -4.78,\n      2.72\n    ],\n    [\n      1583769600000,\n      43.11,\n      44.9,\n      42.36,\n      44.69,\n      6078661,\n      266057952,\n      1.03,\n      2.36,\n      2.93\n    ],\n    [\n      1583856000000,\n      45,\n      45,\n      43.15,\n      43.19,\n      5469360,\n      240547117,\n      -1.5,\n      -3.36,\n      2.65\n    ],\n    [\n      1583942400000,\n      42.08,\n      42.4,\n      41.02,\n      41.3,\n      6186181,\n      257404727,\n      -1.89,\n      -4.38,\n      2.99\n    ],\n    [\n      1584028800000,\n      38.38,\n      40.76,\n      38.3,\n      40.7,\n      9859050,\n      388531108,\n      -0.6,\n      -1.45,\n      4.72\n    ],\n    [\n      1584288000000,\n      40.9,\n      40.96,\n      37.06,\n      37.34,\n      7470278,\n      291138470,\n      -3.36,\n      -8.26,\n      3.6\n    ],\n    [\n      1584374400000,\n      37.33,\n      38.48,\n      36,\n      37.2,\n      5037455,\n      187345746,\n      -0.14,\n      -0.37,\n      2.44\n    ],\n    [\n      1584460800000,\n      37.5,\n      38.25,\n      36.63,\n      36.68,\n      4978512,\n      187269474,\n      -0.52,\n      -1.4,\n      2.41\n    ],\n    [\n      1584547200000,\n      37.01,\n      37.24,\n      35.8,\n      37.13,\n      4636570,\n      170366339,\n      0.45,\n      1.23,\n      2.24\n    ],\n    [\n      1584633600000,\n      37.55,\n      37.8,\n      36.7,\n      37.34,\n      4554647,\n      169766723,\n      0.21,\n      0.57,\n      2.19\n    ]\n]\n\nvar startIndex = 0,\n    stopIndex = klineData.length,\n    data\n\nexport function queryKlineData(count) {\n    if (stopIndex <= 0) {\n        return []\n    }\n\n    startIndex += count\n\n    data = klineData.slice(startIndex, stopIndex)\n\n    stopIndex -= data.length\n\n    return data\n}","import DataSet from './DataSet'\n\nimport { queryKlineData } from '../data/index'\n\nclass RemoteDataSet extends DataSet {\n    constructor(options) {\n        super(options)\n\n        var defaults = {}\n        this.options = Object.assign(this.options, defaults, options)\n\n        this.$state = {\n            fetched: false,\n            isAllData: false\n        }\n\n        this._data = {\n            klineData: [],\n            closeData: [],\n            highData: [],\n            lowData: [],\n            chgData: [],\n            volumeData: []\n        }\n    }\n\n    fetchKlineData(options) {\n        var self = this\n        var { uid, count, mode } = options\n        var data\n\n        return new Promise(function(resolve) {\n            setTimeout(function() {\n                data = queryKlineData(count)\n                \n                if (data.length < -count) {\n                    self.setState('isAllData', true)\n                }\n\n                var res = {\n                    data, uid, mode\n                }\n\n                resolve(res)\n\n                self.setData(data)\n\n                self.emit('data-changed', res)\n            })\n        })\n    }\n\n    slice(startIndex, stopIndex) {\n        var data = this._data.klineData.slice(startIndex, stopIndex)\n        return data\n    }\n\n    setData(data = []) {\n        var columns = this.options.columns\n        \n        this._data.klineData = data.concat(this._data.klineData)\n\n        this._data.klineData.forEach((item, index) => {\n            this._data.closeData[index] = item[columns.indexOf(\"close\")]\n            this._data.highData[index] = item[columns.indexOf(\"high\")]\n            this._data.lowData[index] = item[columns.indexOf(\"low\")]\n            this._data.chgData[index] = item[columns.indexOf(\"chg\")]\n            this._data.volumeData[index] = item[columns.indexOf(\"volume\")]\n        })\n    }\n\n    getData(key) {\n        return key && this._data[key] ? this._data[key] : this._data.klineData\n    }\n}\n\nexport default RemoteDataSet","import d3 from 'd3'\nimport moment from 'moment'\nimport { \n    floor, \n    measureText,\n    ma,\n    parseAmount\n} from '../core/util/index'\nimport KlineVolumeDataSet from './KlineVolumeDataSet'\nimport MouseLineDataSet from './MouseLineDataSet'\n\nclass VolumeDataSet extends KlineVolumeDataSet {\n    constructor(options) {\n        super(options)\n\n        var defaults = {}\n\n        this.options = Object.assign(this.options, defaults, options)\n\n        this.mouseLine = new MouseLineDataSet(this, this.options)\n    }\n\n    setData(data = []) {\n        var columns = this.options.columns\n\n        super.setData(data)\n\n        this._data.data.forEach((item, index) => {\n            this._data.closeData[index] = item[columns.indexOf(\"close\")]\n            this._data.highData[index] = item[columns.indexOf(\"high\")]\n            this._data.lowData[index] = item[columns.indexOf(\"low\")]\n            this._data.volumeData[index] = item[columns.indexOf(\"volume\")]\n        })\n    }\n    \n    extent() {\n        var volumeData = this.getData('volumeData')\n\n        // console.log(volumeData)\n\n        var maxVal = d3.max(volumeData)\n        var minVal = 0\n\n        this._data.extent = {\n            max: maxVal,\n            min: minVal\n        }\n\n        return [minVal, maxVal]\n    }\n\n    getGridData(options) {\n        return super.getGridData(options, 2)\n    }\n\n    getVrectData(options) {\n        var columns = this.options.columns\n\n        var { left, kspan, kwidth, stateHeight, figureWidth, figureHeight, sliceType, period, $colors, xAxis } = options\n\n        var scaleLinear = this.getScale()\n\n        return this.getKlineVolumeData(options, (data) => {\n            var { item, index, x, open, close, volume } = data\n\n            var result = {}\n\n            var opts = {}\n            opts.strokeWidth = 1\n            if (open <= close) {\n                opts.stroke = $colors.red\n            } else if (open > close) {\n                opts.stroke = $colors.green\n            } \n            if (open == close && data[index - 1]) {\n                opts.stroke = close >= data[index - 1][columns.indexOf('close')] ? $colors.red : $colors.green\n            }\n\n            // 绘制k线的body\n            var rectOpts = {\n                x: floor(left + index * kspan),\n                y: floor(scaleLinear(volume)),\n                width: floor(kwidth),\n                height: figureHeight - floor(scaleLinear(volume))\n            }\n\n            var rectFill = sliceType \n                ? $colors.red \n                : kwidth <= 0 \n                    ? $colors.red \n                    : '#fff'\n\n            if (open <= close) {\n                rectOpts.fill = rectFill\n            } else {\n                rectOpts.fill = $colors.green\n            }\n\n            if (open == close && data[index - 1]) {\n                rectOpts.fill = close >= data[index - 1][columns.indexOf('close')] ? rectFill : $colors.green\n            }\n\n            result.rectOpts = Object.assign({}, opts, rectOpts)\n\n            return result\n        })\n    }\n\n    getMaLineData(options) {\n        var result = {\n            lines: [],\n            texts: []\n        }\n\n        var data = this.getData()\n        \n        if (!data.length) {\n            return result\n        }\n\n        var columns = this.options.columns\n\n        var { \n            left, \n            maList, \n            kspan, \n            kwidth, \n            stateHeight, \n            figureWidth, \n            figureHeight, \n\n            startIndex,\n            stopIndex,\n\n            sliceType, \n            period, \n            $colors, \n            xAxis, \n            currentIndex\n        } = options\n\n        var scaleLinear = this.getScale()\n\n        var volume = typeof data[currentIndex] !== 'undefined'\n            ? this.parseVolume(data[currentIndex][columns.indexOf('volume')]) + '手'\n            : '-手'\n\n        var volumeStateText = '成交量 ' + volume\n        var volumeStateTextWidth = measureText(volumeStateText).width\n        var volumeStateTextLeft = volumeStateTextWidth + 5\n\n        result.texts.push({\n            x: left,\n            y: floor((stateHeight - 10) / 2),\n            text: volumeStateText,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'middle'\n        })\n\n        maList.forEach((maItem) => {\n            var maDays = Number(maItem.replace(/[^\\d]/g, ''))\n\n            // `注意`：需要从所有的成交量中计算均线\n            var allVolumeData = ma(this.allDataSet.getData('volumeData'), maDays)\n            var volumeData = allVolumeData.slice(startIndex, stopIndex)\n\n            var maKeyVal = maItem.toLocaleUpperCase() + ':' + (typeof volumeData[currentIndex] !== 'undefined'\n                ? this.parseVolume(volumeData[currentIndex]) + '手'\n                : '-手')\n            var maKeyValWidth = measureText(maKeyVal).width\n\n            var lineOpts = {\n                ma: maDays,\n                stroke: $colors[maItem],\n                strokeWidth: 1,\n                points: []\n            }\n            volumeData.forEach((d, i) => {\n                if (scaleLinear(d)) {\n                    lineOpts.points.push(\n                        left + i * kspan + kwidth / 2, scaleLinear(d),\n                        left + i * kspan + kwidth / 2, scaleLinear(d)\n                    )\n                }\n            })\n            result.lines.push(lineOpts)\n\n            var textOpts = {\n                x: left + volumeStateTextLeft,\n                y: floor((stateHeight - 10) / 2),\n                text: maKeyVal,\n                fill: $colors[maItem],\n                fontSize: 11,\n                align: 'left',\n                verticalAlign: 'middle'\n            }\n\n            result.texts.push(textOpts)\n\n            volumeStateTextLeft += maKeyValWidth + 5\n        })\n\n        return result\n    }\n\n    getYTickData(options) {\n        var result = {\n            texts: []\n        }\n\n        var data = this.getData()\n\n        if (!data.length) {\n            return result\n        }\n\n        var { left, figureHeight, stateHeight, $colors } = options\n\n        var extent = this.getData('extent')\n\n        var span = (figureHeight - stateHeight) / 2\n\n        // 最高刻度值\n        // debugger\n        var text = this.parseAmount(extent.max)\n        var xText = left ? left - measureText(text).width - 2 : 1\n\n        result.texts.push({\n            x: xText,\n            y: floor(stateHeight),\n            text: text,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'top'\n        })\n\n        for (var i = 1; i < 2; i++) {\n            text = (extent.max - (span * i) / (figureHeight - stateHeight) * (extent.max - extent.min))\n            text = this.parseAmount(text)\n            xText = left ? left - measureText(text).width - 2 : 1\n\n            result.texts.push({\n                x: xText,\n                y: floor(stateHeight + span * i) - 5,\n                text: text,\n                fill: $colors.text,\n                fontSize: 11,\n                align: 'left',\n                verticalAlign: 'middle'\n            })\n        }\n\n        // 最低刻度值\n        text = Number(extent.min).toFixed(2)\n        xText = left ? left - measureText(text).width - 2 : 1\n\n        result.texts.push({\n            x: xText,\n            y: floor(figureHeight) - 10,\n            text: text,\n            fill: $colors.text,\n            fontSize: 11,\n            align: 'left',\n            verticalAlign: 'bottom'\n        })\n\n        return result\n    }\n\n    getMouseLineData(options) {\n        return this.mouseLine.getMouseLineData(options)\n    }\n}\n\nexport default VolumeDataSet","import Kline from './components/kline/index'\nimport Volume from './components/volume/index'\n\nimport KlineDataSet from './dataset/KlineDataSet'\nimport RemoteDataSet from './dataset/RemoteDataSet'\nimport VolumeDataSet from './dataset/VolumeDataSet'\n\nimport './index.scss'\n\nexport default {\n    version: '__VERSION__',\n    Kline,\n    Volume,\n    \n    KlineDataSet,\n    RemoteDataSet,\n    VolumeDataSet\n}","'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"html, body, ul {\\n  margin: 0;\\n  padding: 0; }\\n\\n.toolbar {\\n  position: absolute;\\n  top: 2px;\\n  right: 0;\\n  z-index: 999; }\\n\\n.toolbar span {\\n  float: left;\\n  margin-left: 5px;\\n  width: 20px;\\n  height: 16px;\\n  font-size: 12px;\\n  cursor: pointer;\\n  color: #555;\\n  background-color: #eee;\\n  text-align: center;\\n  line-height: 16px;\\n  border-radius: 20%;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n   -ms-user-select: none;\\n       user-select: none; }\\n\\n.toolbar span:hover {\\n  color: #06c;\\n  background-color: #e2f8ff; }\\n\\n#k-tooltips {\\n  width: 132px; }\\n\\n#k-tooltips ul {\\n  list-style: none;\\n  width: 120px;\\n  background: rgba(255, 255, 255, 0.9);\\n  border: 1px solid rgba(218, 222, 229, 0.6);\\n  font-size: 12px;\\n  line-height: 18px;\\n  padding: 5px;\\n  margin: 0; }\\n\\n#k-tooltips ul li {\\n  list-style: none; }\\n\\n#k-tooltips ul li span {\\n  text-align: left;\\n  color: #43474c; }\\n\\n#k-tooltips ul li span:last-child {\\n  float: right; }\\n\\n.sel-list {\\n  display: none;\\n  list-style: none;\\n  position: absolute;\\n  top: 21px;\\n  left: -20px;\\n  line-height: 26px;\\n  width: 70px;\\n  box-shadow: 1px 1px 3px 0 rgba(0, 0, 0, 0.4);\\n  background: #fff;\\n  text-align: center;\\n  z-index: 222;\\n  font-size: 12px;\\n  cursor: pointer; }\\n\\n.sel-list li.active {\\n  color: #06c; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = {\n  XmlEntities: require('./lib/xml-entities.js'),\n  Html4Entities: require('./lib/html4-entities.js'),\n  Html5Entities: require('./lib/html5-entities.js'),\n  AllHtmlEntities: require('./lib/html5-entities.js')\n};\n","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*eslint-env browser*/\n\nvar clientOverlay = document.createElement('div');\nclientOverlay.id = 'webpack-hot-middleware-clientOverlay';\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#e8e8e8',\n  lineHeight: '1.6',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto',\n  dir: 'ltr',\n  textAlign: 'left',\n};\n\nvar ansiHTML = require('ansi-html');\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'ff3348',\n  green: '3fff4f',\n  yellow: 'ffd30e',\n  blue: '169be0',\n  magenta: 'f840b7',\n  cyan: '0ad8e9',\n  lightgrey: 'ebe7e3',\n  darkgrey: '6d7891',\n};\n\nvar Entities = require('html-entities').AllHtmlEntities;\nvar entities = new Entities();\n\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function(msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n}\n\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n}\n\nfunction problemType(type) {\n  var problemColors = {\n    errors: colors.red,\n    warnings: colors.yellow,\n  };\n  var color = problemColors[type] || colors.red;\n  return (\n    '<span style=\"background-color:#' +\n    color +\n    '; color:#000000; padding:3px 6px; border-radius: 4px;\">' +\n    type.slice(0, -1).toUpperCase() +\n    '</span>'\n  );\n}\n\nmodule.exports = function(options) {\n  for (var color in options.ansiColors) {\n    if (color in colors) {\n      colors[color] = options.ansiColors[color];\n    }\n    ansiHTML.setColors(colors);\n  }\n\n  for (var style in options.overlayStyles) {\n    styles[style] = options.overlayStyles[style];\n  }\n\n  for (var key in styles) {\n    clientOverlay.style[key] = styles[key];\n  }\n\n  return {\n    showProblems: showProblems,\n    clear: clear,\n  };\n};\n\nmodule.exports.clear = clear;\nmodule.exports.showProblems = showProblems;\n","/*eslint-env browser*/\n/*global __resourceQuery __webpack_public_path__*/\n\nvar options = {\n  path: '/__webpack_hmr',\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true,\n  name: '',\n  autoConnect: true,\n  overlayStyles: {},\n  overlayWarnings: false,\n  ansiColors: {},\n};\nif (__resourceQuery) {\n  var querystring = require('querystring');\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  setOverrides(overrides);\n}\n\nif (typeof window === 'undefined') {\n  // do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\n    \"webpack-hot-middleware's client requires EventSource to work. \" +\n      'You should include a polyfill if you want to support this browser: ' +\n      'https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools'\n  );\n} else {\n  if (options.autoConnect) {\n    connect();\n  }\n}\n\n/* istanbul ignore next */\nfunction setOptionsAndConnect(overrides) {\n  setOverrides(overrides);\n  connect();\n}\n\nfunction setOverrides(overrides) {\n  if (overrides.autoConnect)\n    options.autoConnect = overrides.autoConnect == 'true';\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n  if (overrides.name) {\n    options.name = overrides.name;\n  }\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n\n  if (overrides.dynamicPublicPath) {\n    options.path = __webpack_public_path__ + options.path;\n  }\n\n  if (overrides.ansiColors)\n    options.ansiColors = JSON.parse(overrides.ansiColors);\n  if (overrides.overlayStyles)\n    options.overlayStyles = JSON.parse(overrides.overlayStyles);\n\n  if (overrides.overlayWarnings) {\n    options.overlayWarnings = overrides.overlayWarnings == 'true';\n  }\n}\n\nfunction EventSourceWrapper() {\n  var source;\n  var lastActivity = new Date();\n  var listeners = [];\n\n  init();\n  var timer = setInterval(function() {\n    if (new Date() - lastActivity > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function init() {\n    source = new window.EventSource(options.path);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  function handleOnline() {\n    if (options.log) console.log('[HMR] connected');\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](event);\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(init, options.timeout);\n  }\n\n  return {\n    addMessageListener: function(fn) {\n      listeners.push(fn);\n    },\n  };\n}\n\nfunction getEventSourceWrapper() {\n  if (!window.__whmEventSourceWrapper) {\n    window.__whmEventSourceWrapper = {};\n  }\n  if (!window.__whmEventSourceWrapper[options.path]) {\n    // cache the wrapper for other entries loaded on\n    // the same page with the same options.path\n    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();\n  }\n  return window.__whmEventSourceWrapper[options.path];\n}\n\nfunction connect() {\n  getEventSourceWrapper().addMessageListener(handleMessage);\n\n  function handleMessage(event) {\n    if (event.data == '\\uD83D\\uDC93') {\n      return;\n    }\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn('Invalid HMR message: ' + event.data + '\\n' + ex);\n      }\n    }\n  }\n}\n\n// the reporter needs to be a singleton on the page\n// in case the client is being used by multiple bundles\n// we only want to report once.\n// all the errors will go to all clients\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nvar reporter;\nif (typeof window !== 'undefined') {\n  if (!window[singletonKey]) {\n    window[singletonKey] = createReporter();\n  }\n  reporter = window[singletonKey];\n}\n\nfunction createReporter() {\n  var strip = require('strip-ansi');\n\n  var overlay;\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = require('./client-overlay')({\n      ansiColors: options.ansiColors,\n      overlayStyles: options.overlayStyles,\n    });\n  }\n\n  var styles = {\n    errors: 'color: #ff0000;',\n    warnings: 'color: #999933;',\n  };\n  var previousProblems = null;\n  function log(type, obj) {\n    var newProblems = obj[type]\n      .map(function(msg) {\n        return strip(msg);\n      })\n      .join('\\n');\n    if (previousProblems == newProblems) {\n      return;\n    } else {\n      previousProblems = newProblems;\n    }\n\n    var style = styles[type];\n    var name = obj.name ? \"'\" + obj.name + \"' \" : '';\n    var title = '[HMR] bundle ' + name + 'has ' + obj[type].length + ' ' + type;\n    // NOTE: console.warn or console.error will print the stack trace\n    // which isn't helpful here, so using console.log to escape it.\n    if (console.group && console.groupEnd) {\n      console.group('%c' + title, style);\n      console.log('%c' + newProblems, style);\n      console.groupEnd();\n    } else {\n      console.log(\n        '%c' + title + '\\n\\t%c' + newProblems.replace(/\\n/g, '\\n\\t'),\n        style + 'font-weight: bold;',\n        style + 'font-weight: normal;'\n      );\n    }\n  }\n\n  return {\n    cleanProblemsCache: function() {\n      previousProblems = null;\n    },\n    problems: function(type, obj) {\n      if (options.warn) {\n        log(type, obj);\n      }\n      if (overlay) {\n        if (options.overlayWarnings || type === 'errors') {\n          overlay.showProblems(type, obj[type]);\n          return false;\n        }\n        overlay.clear();\n      }\n      return true;\n    },\n    success: function() {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function(customOverlay) {\n      overlay = customOverlay;\n    },\n  };\n}\n\nvar processUpdate = require('./process-update');\n\nvar customHandler;\nvar subscribeAllHandler;\nfunction processMessage(obj) {\n  switch (obj.action) {\n    case 'building':\n      if (options.log) {\n        console.log(\n          '[HMR] bundle ' +\n            (obj.name ? \"'\" + obj.name + \"' \" : '') +\n            'rebuilding'\n        );\n      }\n      break;\n    case 'built':\n      if (options.log) {\n        console.log(\n          '[HMR] bundle ' +\n            (obj.name ? \"'\" + obj.name + \"' \" : '') +\n            'rebuilt in ' +\n            obj.time +\n            'ms'\n        );\n      }\n    // fall through\n    case 'sync':\n      if (obj.name && options.name && obj.name !== options.name) {\n        return;\n      }\n      var applyUpdate = true;\n      if (obj.errors.length > 0) {\n        if (reporter) reporter.problems('errors', obj);\n        applyUpdate = false;\n      } else if (obj.warnings.length > 0) {\n        if (reporter) {\n          var overlayShown = reporter.problems('warnings', obj);\n          applyUpdate = overlayShown;\n        }\n      } else {\n        if (reporter) {\n          reporter.cleanProblemsCache();\n          reporter.success();\n        }\n      }\n      if (applyUpdate) {\n        processUpdate(obj.hash, obj.modules, options);\n      }\n      break;\n    default:\n      if (customHandler) {\n        customHandler(obj);\n      }\n  }\n\n  if (subscribeAllHandler) {\n    subscribeAllHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribeAll: function subscribeAll(handler) {\n      subscribeAllHandler = handler;\n    },\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    },\n    setOptionsAndConnect: setOptionsAndConnect,\n  };\n}\n","/**\n * Based heavily on https://github.com/webpack/webpack/blob/\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\n * Original copyright Tobias Koppers @sokra (MIT license)\n */\n\n/* global window __webpack_hash__ */\n\nif (!module.hot) {\n  throw new Error('[HMR] Hot Module Replacement is disabled.');\n}\n\nvar hmrDocsUrl = 'https://webpack.js.org/concepts/hot-module-replacement/'; // eslint-disable-line max-len\n\nvar lastHash;\nvar failureStatuses = { abort: 1, fail: 1 };\nvar applyOptions = {\n  ignoreUnaccepted: true,\n  ignoreDeclined: true,\n  ignoreErrored: true,\n  onUnaccepted: function(data) {\n    console.warn(\n      'Ignored an update to unaccepted module ' + data.chain.join(' -> ')\n    );\n  },\n  onDeclined: function(data) {\n    console.warn(\n      'Ignored an update to declined module ' + data.chain.join(' -> ')\n    );\n  },\n  onErrored: function(data) {\n    console.error(data.error);\n    console.warn(\n      'Ignored an error while updating module ' +\n        data.moduleId +\n        ' (' +\n        data.type +\n        ')'\n    );\n  },\n};\n\nfunction upToDate(hash) {\n  if (hash) lastHash = hash;\n  return lastHash == __webpack_hash__;\n}\n\nmodule.exports = function(hash, moduleMap, options) {\n  var reload = options.reload;\n  if (!upToDate(hash) && module.hot.status() == 'idle') {\n    if (options.log) console.log('[HMR] Checking for updates on the server...');\n    check();\n  }\n\n  function check() {\n    var cb = function(err, updatedModules) {\n      if (err) return handleError(err);\n\n      if (!updatedModules) {\n        if (options.warn) {\n          console.warn('[HMR] Cannot find update (Full reload needed)');\n          console.warn('[HMR] (Probably because of restarting the server)');\n        }\n        performReload();\n        return null;\n      }\n\n      var applyCallback = function(applyErr, renewedModules) {\n        if (applyErr) return handleError(applyErr);\n\n        if (!upToDate()) check();\n\n        logUpdates(updatedModules, renewedModules);\n      };\n\n      var applyResult = module.hot.apply(applyOptions, applyCallback);\n      // webpack 2 promise\n      if (applyResult && applyResult.then) {\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\n        applyResult.then(function(outdatedModules) {\n          applyCallback(null, outdatedModules);\n        });\n        applyResult.catch(applyCallback);\n      }\n    };\n\n    var result = module.hot.check(false, cb);\n    // webpack 2 promise\n    if (result && result.then) {\n      result.then(function(updatedModules) {\n        cb(null, updatedModules);\n      });\n      result.catch(cb);\n    }\n  }\n\n  function logUpdates(updatedModules, renewedModules) {\n    var unacceptedModules = updatedModules.filter(function(moduleId) {\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\n    });\n\n    if (unacceptedModules.length > 0) {\n      if (options.warn) {\n        console.warn(\n          \"[HMR] The following modules couldn't be hot updated: \" +\n            '(Full reload needed)\\n' +\n            'This is usually because the modules which have changed ' +\n            '(and their parents) do not know how to hot reload themselves. ' +\n            'See ' +\n            hmrDocsUrl +\n            ' for more details.'\n        );\n        unacceptedModules.forEach(function(moduleId) {\n          console.warn('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\n        });\n      }\n      performReload();\n      return;\n    }\n\n    if (options.log) {\n      if (!renewedModules || renewedModules.length === 0) {\n        console.log('[HMR] Nothing hot updated.');\n      } else {\n        console.log('[HMR] Updated modules:');\n        renewedModules.forEach(function(moduleId) {\n          console.log('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\n        });\n      }\n\n      if (upToDate()) {\n        console.log('[HMR] App is up to date.');\n      }\n    }\n  }\n\n  function handleError(err) {\n    if (module.hot.status() in failureStatuses) {\n      if (options.warn) {\n        console.warn('[HMR] Cannot check for update (Full reload needed)');\n        console.warn('[HMR] ' + (err.stack || err.message));\n      }\n      performReload();\n      return;\n    }\n    if (options.warn) {\n      console.warn('[HMR] Update check failed: ' + (err.stack || err.message));\n    }\n  }\n\n  function performReload() {\n    if (reload) {\n      if (options.warn) console.warn('[HMR] Reloading page');\n      window.location.reload();\n    }\n  }\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import kchart from 'kchart'\nimport 'kchart.css'\n\nconsole.log('kchart', kchart)\n\nconst {\n    Kline,\n    KlineDataSet,\n    RemoteDataSet,\n    VolumeDataSet,\n    Volume\n} = kchart\n\n\nvar columns = [\n    \"timestamp\", // 时间\n    \"open\", // 开\n    \"high\", // 高\n    \"low\", // 低\n    \"close\", // 收\n    \"volume\", // 成交量\n    \"amount\", // 成交额\n    \"chg\", // 涨跌额\n    \"percent\", // 涨跌幅\n    \"turnoverrate\", // 换手率\n]\n\nvar remoteDataSet = new RemoteDataSet({\n    columns: columns\n})\n\nvar kDataSet = new KlineDataSet({\n    columns: columns,\n    allDataSet: remoteDataSet\n})\n\nvar vDataSet = new VolumeDataSet({\n    columns: columns,\n    allDataSet: remoteDataSet\n})\n\nvar kline = new Kline({\n    el: '#chart',\n    // left: 45,\n    // mouseLineType: true,\n    allDataSet: remoteDataSet,\n    dataSet: kDataSet\n})\n\nvar volume = new Volume({\n    el: '#volume',\n    allDataSet: remoteDataSet,\n    dataSet: vDataSet,\n    // autoFetchData: false,\n    tooltips: false\n})\n\nkline.connect(volume)\nvolume.connect(kline)\n\nconsole.log('kline', kline)\nconsole.log('volume', volume)\n\n\n// setTimeout(() => {\nsetInterval(() => {\n    // kline.$options.sliceType = 'fill'\n    // kline.update()\n\n    // kline.moveChart(-1)\n}, 1000)\n\n\n\nvar $toolbar = $('.toolbar')\nvar $btnZoomBack = $('#zoom-back')\nvar $btnZoomOut = $('#zoom-out')\nvar $btnZoomIn = $('#zoom-on')\nvar $btnWalkLeft = $('#walk-left')\nvar $btnWalkRight = $('#walk-right')\nvar $btnSliceType = $('#slice-type')\n\nsetTimeout(() => {\n    $toolbar.show()\n})\n\n$btnZoomBack.on('click', function() {\n    kline.resetScaleChart()\n})\n$btnZoomOut.on('click', function() {\n    kline.scaleChart(1)\n})\n$btnZoomIn.on('click', function() {\n    kline.scaleChart(-1)\n})\n$btnWalkLeft.on('click', function() {\n    kline.moveChartWithMouseLine(-1)\n})\n$btnWalkRight.on('click', function() {\n    kline.moveChartWithMouseLine(1)\n})\n$btnSliceType.on('click', function() {\n    kline.$options.sliceType = !kline.$options.sliceType\n    volume.$options.sliceType = !volume.$options.sliceType\n\n    kline.update()\n    volume.update()\n})\n\npressBtn($btnZoomOut, function() {\n    kline.scaleChart(5)\n})\npressBtn($btnZoomIn, function() {\n    kline.scaleChart(-5)\n})\npressBtn($btnWalkLeft, function() {\n    kline.moveChartWithMouseLine(-5)\n})\npressBtn($btnWalkRight, function() {\n    kline.moveChartWithMouseLine(5)\n})\n\n\nfunction pressBtn(el, callback) {\n    var timer = 0\n\n    el.on('mousedown touchstart', function() {\n        timer = setInterval(callback, 200)\n    })\n\n    el.on('mouseup touchend', function() {\n        clearInterval(timer)\n    })\n}"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAqBA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAVA;AACA;AAYA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAGA;AACA;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AC3bA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAGA;AAxBA;AA2BA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA3BA;AA8BA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AA5EA;AA4EA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;;;AAEA;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAfA;AACA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AASA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnBA;AA6BA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAlDA;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAjBA;AACA;AACA;AAmBA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;;;;;;;;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAHA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;;;;;;;;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AAIA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AA7CA;AACA;AACA;AA+CA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAJA;AAOA;AAAA;AAAA;AAPA;AAUA;AAVA;AAaA;AAbA;AADA;AAiBA;;;;AAxiBA;AACA;ACJA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAJA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9GA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAEA;AAKA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AA2CA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;;;;AAtHA;AACA;ACDA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAVA;AAWA;AAEA;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AAGA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AAEA;AACA;;;;AAtGA;AACA;ACEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAbA;AAgBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA9CA;AA8CA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AAWA;AACA;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AACA;AA+CA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AACA;AAIA;AAEA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAEA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;;;AAEA;AACA;AAEA;AAGA;;;AAEA;AACA;AAGA;;;;AA/bA;AACA;ACHA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAZA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AArCA;AAqCA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AACA;AAIA;AAEA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAFA;AAKA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;;;AAEA;AACA;AAEA;AAGA;;;AAEA;AACA;AAEA;;;;AA/UA;AACA;ACNA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAXA;AAYA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;;;;AAnDA;AACA;ACMA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AATA;AATA;AAoBA;AACA;;;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAGA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAQA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAiDA;AACA;AACA;AACA;AACA;AACA;AANA;AAhDA;AAAA;AAAA;AACA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;AACA;AAqEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AACA;;;;AA5NA;AACA;ACNA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAPA;AAWA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiCA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAeA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAPA;AAFA;AAaA;AAEA;AACA;AACA;AAIA;AAPA;AASA;AACA;AACA;AAIA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAYA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;;;;AA5PA;AACA;ACKA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAPA;AAQA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAOA;AA3BA;AACA;AACA;AA6BA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AA5DA;AA8DA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAIA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AAEA;AA1CA;AA6CA;AACA;;;AAEA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAaA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnCA;AACA;AACA;AA6CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAdA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAhBA;AA2BA;AACA;;;AAEA;AACA;AACA;;;;AA1VA;AACA;ACZA;AAmqNA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AChrNA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AAmBA;AACA;;;AACA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AAEA;AAfA;AADA;AAmBA;;;AAEA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;AAEA;AACA;AACA;;;;AArEA;AACA;ACMA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAPA;AAQA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAbA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA1CA;AA4CA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAIA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AAxCA;AA2CA;AACA;;;AAEA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAaA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AArCA;AACA;AACA;AA+CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;;;AAEA;AACA;AACA;;;;AAvQA;AACA;ACHA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cxljTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,arBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;A","sourceRoot":""}